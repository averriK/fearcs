(***********************************************************************

                    Mathematica-Compatible Notebook

This notebook can be used on any computer system with Mathematica 4.0,
MathReader 4.0, or any compatible application. The data for the notebook 
starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do one of 
the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing the 
word CacheID, otherwise Mathematica-compatible applications may try to 
use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
***********************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    240133,       4953]*)
(*NotebookOutlinePosition[    240834,       4978]*)
(*  CellTagsIndexPosition[    240790,       4974]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["CODIGO FUENTE", "Subtitle",
  PageWidth->Infinity],

Cell[CellGroupData[{

Cell["CODIGO FUENTE: RUTINAS B\[CapitalAAcute]SICAS", "Section",
  PageWidth->Infinity],

Cell[CellGroupData[{

Cell["INCLUDES", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Off[General::"\<spell\>"];\)\), "\n", 
    \(\(Off[General::"\<spell1\>"];\)\), "\[IndentingNewLine]", 
    \(\(Off[Set::"\<wrsym\>"];\)\ \), "\[IndentingNewLine]", 
    \(Needs["\<LinearAlgebra`MatrixManipulation`\>"]\), "\n", 
    \(Needs["\<NumericalMath`GaussianQuadrature`\>"]\), "\n", 
    \(Needs["\<NumericalMath`LobattoQuadrature`\>"]\), "\[IndentingNewLine]", \

    \(Needs["\<NumericalMath`NewtonCotes`\>"]\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(Clear[TR]; TR[A_] := Transpose[A];\), "\[IndentingNewLine]", 
    \(Clear[REAL]; REAL[{{A_?NumberQ}}] := A\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETOUTPUT (PRINT): 
OPCIONES DE SALIDA DE DATOS Y DEPURACION\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETOUTPUT];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      OPCIONES\ DE\ SALIDA\ DE\ DATOS\ Y\ DEPURACION\ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION : \ 
        29 - 03 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(\(SETOUTPUT[filename_, 
          Opciones___] := \[IndentingNewLine]Module[{OUTPUT, FILE, SCREEN, 
            FONTWEIGHT, FONTSIZE, FONTFAMILY, \[IndentingNewLine]PAGEWIDTH, 
            FORMAT, d}, \[IndentingNewLine]Options[
              SETOUTPUT] = {FormatType \[Rule] InputForm, 
              PageWidth \[Rule] 128, FontSize \[Rule] 10, 
              FontFamily \[Rule] "\<Helvetica\>", 
              FontWeight \[Rule] "\<Plain\>"}; \[IndentingNewLine]FORMAT = \
\(FormatType /. \ {Opciones}\)\  /. 
              Options[SETOUTPUT]; \[IndentingNewLine]FONTFAMILY = \
\(FontFamily /. \ {Opciones}\)\  /. 
              Options[SETOUTPUT]; \[IndentingNewLine]FONTSIZE = \(FontSize \
/. \ {Opciones}\)\  /. 
              Options[SETOUTPUT]; \[IndentingNewLine]FONTWEIGHT = \
\(FontWeight /. \ {Opciones}\)\  /. 
              Options[SETOUTPUT]; \[IndentingNewLine]PAGEWIDTH = \(PageWidth \
/. \ {Opciones}\)\  /. Options[SETOUTPUT]; \[IndentingNewLine] (*\ 
            RESULTADOS\ POR\ ARCHIVO\ DE\ SALIDA\ *) \[IndentingNewLine]FILE \
= filename; \[IndentingNewLine]Off[General::"\<openx\>"]; 
          Off[General::"\<stream\>"]; \[IndentingNewLine]Close[
            FILE]; \[IndentingNewLine]On[General::"\<openx\>"]; 
          On[General::"\<stream\>"]; \[IndentingNewLine]Clear[
            PRINT]; \[IndentingNewLine]If[
            ECHO, \[IndentingNewLine]\(SCREEN = "\<stdout\>";\), \
\[IndentingNewLine]\(SCREEN = "\<Null\>";\)\[IndentingNewLine]]; \
\[IndentingNewLine]OUTPUT = 
            OpenWrite[FILE, FormatType \[Rule] FORMAT, 
              PageWidth \[Rule] PAGEWIDTH, 
              CharacterEncoding \[Rule] "\<ASCII\>"]; \
\[IndentingNewLine]PRINT[X__] := 
            Write[{FILE, SCREEN}, X]; \[IndentingNewLine]Clear[
            LineFeed]; \[IndentingNewLine]LineFeed := 
            PRINT["\<(--------------------------------------------------------\
-------)\>"]; \[IndentingNewLine]d = 
            Date[]; \[IndentingNewLine]LineFeed; \
\[IndentingNewLine]Write[{FILE, SCREEN}, "\<(* SESSION:\>", 
            d[\([3]\)], "\</\>", d[\([2]\)], "\</\>", d[\([1]\)], "\< - \>", 
            d[\([4]\)], "\<:\>", d[\([5]\)], "\<:\>", 
            d[\([6]\)], "\< *)\>"]; \[IndentingNewLine]LineFeed; \
\[IndentingNewLine]Return[];\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
EXPORTCSV:
EXPORTAR DATOS A *.CSV\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[EXPORTCSV];\)\), "\[IndentingNewLine]", 
    \(EXPORTCSV[FILENAME_, DATA_, Opciones___] := 
      Module[{STREAM, RECORD, FORMAT, 
          SEP}, \[IndentingNewLine]Options[
            EXPORTCSV] = {FormatType \[Rule] 
              OutputForm}; \[IndentingNewLine]SEP = \*"\"\<\\<,\\>\>\""; \
\[IndentingNewLine]STREAM = 
          OpenAppend[FILENAME, 
            Options[EXPORTCSV]]; \ \[IndentingNewLine]WRITETABLE[STREAM, 
          DATA, SEP]; \[IndentingNewLine]Close[
          STREAM];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[WRITETABLE];\)\), "\[IndentingNewLine]", 
    \(WRITETABLE[STREAM_, DATA_, SEP_, Opciones___] := 
      Module[{RECORD, n, m, i, 
          j}, \[IndentingNewLine]Options[
            WRITE] = {FormatType \[Rule] 
              OutputForm}; \[IndentingNewLine]FORMAT = \(FormatType /. \ \
{Opciones}\)\  /. Options[WRITE]; \[IndentingNewLine]{n, m} = 
          Dimensions[DATA]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] n, \(i++\), \[IndentingNewLine]RECORD = 
            SequenceForm[CForm[DATA[\([i, 1]\)]], SEP, 
              CForm[DATA[\([i, 2]\)]]]; \[IndentingNewLine]Write[STREAM, 
            RECORD];\[IndentingNewLine]];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
CENLOAD:
CARGAS ELEMENTALES NODALES CONSISTENTES (re).\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        CENLOAD];\)\[IndentingNewLine] (*\(\(**\)\(**\)\) **  ** \(\(*\)\(\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\)\(*\)\)*****) \[IndentingNewLine] (*\ 
      CARGAS\ NODALES\ ELEMENTALES\ CONSISTENTES\  - \ 
        re\ *) \[IndentingNewLine] (*\ 
      VERSION : \ \(24/08\)/
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (********************************************) \), "\
\[IndentingNewLine]", 
    \(CENLOAD[ELMAX_Integer, f_, ShapeFunctions_, NodeX_, Opciones___] := 
      Module[{e, s, re, L, NGP, qx, qy, mxy, hu, hu\[CapitalDelta]u3, hw, 
          hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
          h\[Gamma], h\[Gamma]\[CapitalDelta]u3, ru, rw, 
          ru\[CapitalDelta]u3}, \[IndentingNewLine]Options[
            CENLOAD] = \ {}; \[IndentingNewLine]\[IndentingNewLine]re = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]{qx, qy, mxy} = 
            f[\([e]\)]; \[IndentingNewLine]NGP = 
            ElementTable[\([e, 3]\)]; \[IndentingNewLine]L = 
            GETL[e, NodeX]; \[IndentingNewLine]ru = 0; 
          ru\[CapitalDelta]u3 = 0; 
          rw = 0; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{hu, hu\[CapitalDelta]u3, hw, 
                hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
                h\[Gamma], h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
                h\[Chi]\[CapitalDelta]u3} = 
              ShapeFunctions[\([e, s, 2]\)]; \[IndentingNewLine]ru += 
              qx*L/2*hu; \[IndentingNewLine]ru\[CapitalDelta]u3 += 
              qx*L/2*hu\[CapitalDelta]u3; \[IndentingNewLine]rw += 
              qy*L/2*hw + \((mxy)\)*L/2*
                  h\[Theta];\[IndentingNewLine]]; \[IndentingNewLine]re[\([e]\
\)] = {ru, rw, 
              ru\[CapitalDelta]u3};\[IndentingNewLine]]; \
\[IndentingNewLine]Return[re];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
GAUSS, LUSOLVER, DLU, SUSINV, SUSDIR:
SOLVER DE SISTEMAS LINEALES\
\>", "Subsection",
  PageWidth->Infinity],

Cell[CellGroupData[{

Cell["LUSOLVER", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        LUSOLVER];\)\[IndentingNewLine] (*******************************) \
\[IndentingNewLine] (*\ 
      SOLVER\ DE\ SISTEMAS\ LINEALES\ *) \[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2003\ \ \ \ \ \ \ \ *) \[IndentingNewLine] (*******************************) \
\), "\[IndentingNewLine]", 
    \(\(LUSOLVER[A_?MatrixQ, b_?VectorQ] := 
        LUSOLVER[A, {Transpose[b]}];\)\), "\[IndentingNewLine]", 
    \(\(LUSOLVER[A_?MatrixQ, b_?MatrixQ] := 
        LUSOLVER[A, {b}];\)\), "\[IndentingNewLine]", 
    \(LUSOLVER[A_?MatrixQ, 
        B_?ListVectorsQ] := \[IndentingNewLine]Module[{G, VF, X, l, m, n, 
          i, \[CapitalDelta]U}, \[IndentingNewLine]If[
          SquareMatrixQ[A] == False, \[IndentingNewLine]Message[
            LUSOLVER::cuadrada, A]; \[IndentingNewLine]Return[
            Null];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]{n, m, l} = 
          Dimensions[B]; \[IndentingNewLine]{G, VF} = 
          DLU[A]; \[IndentingNewLine]X = 
          Table[{0}, {n}]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] n, \(i++\), \[IndentingNewLine]Y = \ 
            SUSDIR[G, B[\([i]\)], VF]; \[IndentingNewLine]X[\([i]\)] = 
            SUSINV[G, 
              Y];\[IndentingNewLine]\[IndentingNewLine]]; \
\[IndentingNewLine]If[
          n \[Equal] 
            1, \(\[CapitalDelta]U = Part[X, 1];\), \(\[CapitalDelta]U = 
              X;\)]; \[IndentingNewLine]Return[\[CapitalDelta]U];\
\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["DLU", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[DLU];\)\), "\[IndentingNewLine]", 
    \(DLU[A_?MatrixQ, 
        Opciones___] := \[IndentingNewLine]Module[{lu, i = 0, j = 0, k = 0, 
          n = 0, G, db, x, y, VectorFilas, 
          Salida}, \[IndentingNewLine]Options[
            Gauss] = {}; \[IndentingNewLine]DLU::singular = "\<La matriz es \
singular. No se Puede Triangular. \>"; \[IndentingNewLine]DLU::cuadrada\  = "\
\<La Matriz no es cuadrada. No se Puede Triangular. \>"; \
\[IndentingNewLine]If[SquareMatrixQ[A] == False, Message[DLU::cuadrada, A]; 
          Return[Null]]; \[IndentingNewLine]n = \(Dimensions[
              A]\)[\([1]\)]; \[IndentingNewLine] (*\ \(G = 
              A;\)\ *) ; \[IndentingNewLine]G = 
          ZeroMatrix[n]; \[IndentingNewLine]For[i = 1, 
          i <= n, \(i++\), \[IndentingNewLine]\(For[j = 1, 
              j <= n, \(j++\), \[IndentingNewLine]\(G[\([i, j]\)] = 
                  A[\([i, 
                      j]\)];\)\[IndentingNewLine]];\)\[IndentingNewLine]]; \
\[IndentingNewLine]VectorFilas = Table[i, {i, 1, n}]; \[IndentingNewLine]For[
          j = 1, j <= n - 1, \(j++\), \[IndentingNewLine]k = 
            BuscarMaximoColumna[G, j, j, 
              Absoluto -> True]; \[IndentingNewLine]If[k == 0, 
            Message[Gauss::singular]; Return[Null]]; \[IndentingNewLine]If[
            k \[NotEqual] j, 
            G = IntercambiarFilas[G, j, k]; \[IndentingNewLine]VectorFilas = 
              IntercambiarElementos[VectorFilas, j, 
                k];\[IndentingNewLine]]; \[IndentingNewLine]For[i = j + 1, 
            i <= n, \(i++\), \[IndentingNewLine]\(G[\([i, j]\)] = 
                G[\([i, j]\)]/
                  G[\([j, 
                      j]\)];\)\[IndentingNewLine]]; \[IndentingNewLine]For[
            i = j + 1, 
            i <= n, \(i++\), \[IndentingNewLine]\(For[k = j + 1, 
                k <= n, \(k++\), \[IndentingNewLine]\(G[\([i, k]\)] = 
                    G[\([i, k]\)] - 
                      G[\([i, j]\)]*
                        G[\([j, 
                            k]\)];\)\[IndentingNewLine]];\)\[IndentingNewLine]\
];\[IndentingNewLine]]; \[IndentingNewLine]Salida = {}; \
\[IndentingNewLine]Return[{G, VectorFilas}];\[IndentingNewLine]]\)}], "Input",\

  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["SUSINV", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[SUSINV];\)\), "\[IndentingNewLine]", 
    \(SUSINV[A_, b_] := 
      Module[{i = 0, j = 0, k = 0, n = 0, 
          x}, \[IndentingNewLine]SUSINV::"\<no_U\>" = "\<La matriz tiene un \
cero en Diagonal. Matriz LU inv\[AAcute]lida. \>"; \
\[IndentingNewLine]SUSINV::"\<cuadrada\>" = "\<La Matriz no es cuadrada. \
Matriz LU inv\[AAcute]lida.\>"; \[IndentingNewLine]If[
          SquareMatrixQ[A] == False, \[IndentingNewLine]Message[
            SUSINV::cuadrada]; \[IndentingNewLine]Return[
            Null]]; \[IndentingNewLine]n = \(Dimensions[
              A]\)[\([1]\)]; \[IndentingNewLine]x = 
          Table[0, {i, 1, n}]; \[IndentingNewLine]If[
          A[\([n, n]\)] == 0\ , \[IndentingNewLine]Message[
            SUSINV::no_U]; \[IndentingNewLine]Return[
            Null]]; \[IndentingNewLine]x[\([n]\)] = 
          b[\([n]\)]/A[\([n, n]\)]; \[IndentingNewLine]For[i = n - 1, 
          i >= 1, \(i--\), \[IndentingNewLine]If[
            A[\([i, i]\)] == 0\ , \[IndentingNewLine]Message[
              SUSINV::no_U]; \[IndentingNewLine]Return[
              Null]]; \[IndentingNewLine]x[\([i]\)] = \((b[\([i]\)] - 
                  Sum[\((A[\([i, k]\)]*x[\([k]\)])\), {k, i + 1, n}])\)/
              A[\([i, i]\)];\[IndentingNewLine]]; \[IndentingNewLine]Return[
          x];\[IndentingNewLine]]\t\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["SUSDIR", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[SUSDIR];\)\), "\[IndentingNewLine]", 
    \(SUSDIR[A_, b_, 
        VectorFilas_] := \[IndentingNewLine]Module[{i = 0, j = 0, k = 0, m, 
          n = 0, t, 
          y}, \[IndentingNewLine]SUSDIR::"\<cuadrada\>" = "\<La Matriz no es \
cuadrada. No se puede invertir.\>"; \[IndentingNewLine]If[
          SquareMatrixQ[A] == False, Message[SUSDIR::cuadrada, A]; 
          Return[Null];\[IndentingNewLine]]; \[IndentingNewLine]n = \
\(Dimensions[A]\)[\([1]\)]; \[IndentingNewLine]y = 
          Table[0, {i, 1, n}]; \[IndentingNewLine]m = 
          VectorFilas[\([1]\)]; \[IndentingNewLine]y[\([1]\)] = \ 
          b[\([m]\)]; \[IndentingNewLine]For[i = 2, 
          i <= n, \(i++\), \[IndentingNewLine]m = 
            VectorFilas[\([i]\)]; \[IndentingNewLine]y[\([i]\)] = \ 
            b[\([m]\)] - 
              Sum[A[\([i, k]\)]*y[\([k]\)], {k, 1, 
                  i - 1}];\[IndentingNewLine]]; \[IndentingNewLine]Return[
          y];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["Lower, Upper, LowerED", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[Lower, Upper, LowerED];\)\), "\[IndentingNewLine]", 
    \(\(Upper[LU_?MatrixQ] := 
        LU\ Table[
            If[i \[LessEqual] j, 1, 0], \[IndentingNewLine]{i, 
              Length[LU]}, {j, Length[LU]}];\)\), "\[IndentingNewLine]", 
    \(\(Lower[LU_?MatrixQ] := 
        LU - Upper[LU] + 
          IdentityMatrix[Length[LU]];\)\), "\[IndentingNewLine]", 
    \(\(LowerED[LU_?MatrixQ] := LU - Upper[LU];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
IntercambiarFilas, IntercambiarElementos, IntercambiarColumnas\
\>", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[IntercambiarFilas];\)\ \), "\n", 
    \(IntercambiarFilas[A_?MatrixQ, i_, 
        j_] := \[IndentingNewLine]Module[{M, n = 0, k = 0, 
          aux = 0}, \[IndentingNewLine]n = \(Dimensions[
              A]\)[\([1]\)]; \[IndentingNewLine]M = A; \[IndentingNewLine]For[
          k = 1, k <= n, \(k++\), \[IndentingNewLine]aux = 
            M[\([i, k]\)]; \[IndentingNewLine]M[\([i, k]\)] = 
            M[\([j, k]\)]; \[IndentingNewLine]M[\([j, k]\)] = 
            aux;\[IndentingNewLine]]; \[IndentingNewLine]Return[
          M];]\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[IntercambiarElementos];\)\), "\n", 
    \(IntercambiarElementos[v_, i_, 
        j_] := \[IndentingNewLine]Module[{u, aux = 0}, \[IndentingNewLine]u = 
          v; \[IndentingNewLine]aux = 
          u[\([i]\)]; \[IndentingNewLine]u[\([i]\)] = 
          u[\([j]\)]; \[IndentingNewLine]u[\([j]\)] = 
          aux; \[IndentingNewLine]Return[u];\[IndentingNewLine]]\)}], "Input",\

  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[IntercambiarColumnas];\)\), "\n", 
    \(IntercambiarColumnas[A_?MatrixQ, i_, 
        j_] := \[IndentingNewLine]Module[{M, n = 0, k = 0, 
          aux = 0}, \[IndentingNewLine]n = \(Dimensions[
              A]\)[\([2]\)]; \[IndentingNewLine]M = A; \[IndentingNewLine]For[
          k = 1, k <= n, \(k++\), \[IndentingNewLine]aux = 
            M[\([k, i]\)]; \[IndentingNewLine]M[\([k, i]\)] = 
            M[\([k, j]\)]; \[IndentingNewLine]M[\([k, j]\)] = 
            aux;\[IndentingNewLine]]; \[IndentingNewLine]Return[
          M];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BuscarMaximoFila, BuscarMaximoColumna", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[BuscarMaximoFila];\)\), "\n", 
    \(BuscarMaximoFila[A_?MatrixQ, i_, j_, 
        Opciones___] := \[IndentingNewLine]Module[{COL = 0, v, 
          modulo}, \ \ Options[
            BuscarMaximoFila] = {Absoluto -> 
              True\ }; \[IndentingNewLine]modulo = \(Absoluto\  /. \ \
{Opciones}\)\  /. \ Options[BuscarMaximoFila]; \[IndentingNewLine]v = 
          Drop[Part[TakeRows[A, {i, i}], 1], j - 1]; \[IndentingNewLine]If[
          modulo, v = Abs[v]]; \[IndentingNewLine]COL = 
          j - 1 + Part[Position[v, Max[\ v\ ]\ ], 1, 
              1]; \[IndentingNewLine]Return[
          COL];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[BuscarMaximoColumna];\)\), "\n", 
    \(BuscarMaximoColumna[A_?MatrixQ, i_, j_, 
        Opciones___] := \[IndentingNewLine]Module[{v, ROW = 0, 
          modulo}, \ \ \ Options[
            BuscarMaximoColumna] = {Absoluto -> 
              True\ }; \[IndentingNewLine]modulo = \(Absoluto\  /. \ \
{Opciones}\)\  /. \ Options[BuscarMaximoColumna]; \[IndentingNewLine]v = 
          Drop[Part[TakeRows[Transpose[A], {j, j}], 1], 
            i - 1]; \[IndentingNewLine]If[modulo, 
          v = Abs[v]]; \[IndentingNewLine]ROW = 
          i - 1 + Part[Position[v, Max[\ v\ ]\ ], 1, 
              1]; \[IndentingNewLine]Return[
          ROW];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["NormaV\[Infinity], NormaVp, NormaM\[Infinity]", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[
    \(\(Clear[NormaV\[Infinity], NormaVp, NormaM\[Infinity]];\)\)], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[NormaV\[Infinity]];\)\), "\[IndentingNewLine]", 
    \(\(NormaV\[Infinity][v_?VectorQ] := 
        Max[Abs[v]];\)\), "\[IndentingNewLine]", 
    \(\(NormaV\[Infinity][v_?ColumnVectorQ] := 
        Max[Abs[v]];\)\), "\[IndentingNewLine]", 
    \(\(NormaV\[Infinity][v_?ColumnVectorTrQ] := Max[Abs[v]];\)\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[NormaVp];\)\), "\[IndentingNewLine]", 
    \(\(NormaVp[v_?VectorQ, 
          p_?IntegerQ] := \((Sum[\((Abs[v[\([i]\)]])\)^p, {i, p}])\)^\((1/
              p)\);\)\), "\[IndentingNewLine]", 
    \(\(NormaVp[v_?ColumnVectorQ, 
          p_?IntegerQ] := \((Sum[\((Abs[v[\([i, 1]\)]])\)^p, {i, p}])\)^\((1/
              p)\);\)\), "\[IndentingNewLine]", 
    \(\(NormaVp[v_?ColumnVectorTrQ, 
          p_?IntegerQ] := \((Sum[\((Abs[v[\([1, i]\)]])\)^p, {i, p}])\)^\((1/
              p)\);\)\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[NORM];\)\), "\[IndentingNewLine]", 
    \(\(NORM[v_?VectorQ] := Sqrt[\((v . v)\)];\)\), "\[IndentingNewLine]", 
    \(\(NORM[v_?ColumnVectorQ] := 
        Sqrt[\((Transpose[v] . v)\)[\([1, 1]\)]];\)\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[
    \(\(NormaM\[Infinity][M_?MatrixQ] := 
        Max[Table[
            Sum[Part[Abs[Part[TakeRows[M, {i, i}], 1]], 
                k], \[IndentingNewLine]{k, Part[Dimensions[M], 2]}], {i, 
              Part[Dimensions[M], 2]}]];\)\)], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["ListVectorsQ, ColumnVectorQ, ColumnVectorTrQ", "Subsubsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[ListVectorsQ];\)\), "\[IndentingNewLine]", 
    \(\(ListVectorsQ[B_] := 
        If[TensorRank[B] == 3, True, False];\)\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[ColumnVectorQ];\)\), "\[IndentingNewLine]", 
    \(\(ColumnVectorQ[
          B_] := \[IndentingNewLine]Module[{n, 
            m}, \[IndentingNewLine]\(If[
              TensorRank[B] \[Equal] 2, \[IndentingNewLine]{n, m} = 
                Dimensions[B]; \[IndentingNewLine]If[
                m \[Equal] 
                  1, \[IndentingNewLine]\(Return[
                    True];\), \[IndentingNewLine]\(Return[
                    False];\)\[IndentingNewLine]];\[IndentingNewLine], \
\[IndentingNewLine]\(Return[
                  False];\)\[IndentingNewLine]];\)\[IndentingNewLine]];\)\)}],\
 "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[ColumnVectorTrQ];\)\), "\[IndentingNewLine]", 
    \(\(ColumnVectorTrQ[
          B_] := \[IndentingNewLine]Module[{n, 
            m}, \[IndentingNewLine]\(If[
              TensorRank[B] \[Equal] 2, \[IndentingNewLine]{n, m} = 
                Dimensions[B]; \[IndentingNewLine]If[
                n \[Equal] 
                  1, \[IndentingNewLine]\(Return[
                    True];\), \[IndentingNewLine]\(Return[
                    False];\)\[IndentingNewLine]];\[IndentingNewLine], \
\[IndentingNewLine]\(Return[
                  False];\)\[IndentingNewLine]];\)\[IndentingNewLine]];\)\)}],\
 "Input",
  PageWidth->Infinity]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
GETL: 
LONGITUD DEL ELEMENTO\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        GETL];\)\[IndentingNewLine] (***********************************************) \
\[IndentingNewLine] (*\ 
      C\[CapitalAAcute]LCULO\ DE\ LA\ LONGITUD\ DEL\ ELEMENTO\ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine] (*\ 
      VERSION\  : \ 
        31 - 08 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (***********************************************) \), "\
\[IndentingNewLine]", 
    \(GETL[Element_Integer, NodeX_] := 
      Module[{e, i, j, Le, Xi, Yi, Xj, 
          Yj}, \[IndentingNewLine]Options[
            GETL] = \ {}; \[IndentingNewLine]e = 
          Element; \[IndentingNewLine]{i, j} = 
          ElementCN[\([e]\)]; \[IndentingNewLine]{Xi, Yi} = 
          NodeX[\([i]\)]; \[IndentingNewLine]{Xj, Yj} = 
          NodeX[\([j]\)]; \[IndentingNewLine]Le = 
          Sqrt[\((Xj - Xi)\)^2 + \((Yj - Yi)\)^2]; \[IndentingNewLine]Return[
          Le];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
GETCS: 
COSENOS DIRECTORES DEL ELEMENTO\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        GETCS];\)\[IndentingNewLine] (***************************************************) \
\[IndentingNewLine] (*\ 
      C\[CapitalAAcute]LCULO\ DE\ LOS\ COSENOS\ DIRECTORES\ DEL\ ELEMENTO\ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        31 - 08 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (***************************************************) \), \
"\[IndentingNewLine]", 
    \(GETCS[Element_Integer, NodeX_] := 
      Module[{e, i, j, Le, C, 
          S}, \[IndentingNewLine]Options[
            GETCS] = \ {}; \[IndentingNewLine]e = 
          Element; \[IndentingNewLine]{i, j} = 
          ElementCN[\([e]\)]; \[IndentingNewLine]{Xi, Yi} = 
          NodeX[\([i]\)]; \[IndentingNewLine]{Xj, Yj} = 
          NodeX[\([j]\)]; \[IndentingNewLine]Le = 
          Sqrt[\((Xj - Xi)\)^2 + \((Yj - 
                    Yi)\)^2]; \[IndentingNewLine]C = \((Xj - Xi)\)/Le // 
            Chop; \[IndentingNewLine]S = \((Yj - Yi)\)/Le // 
            Chop; \[IndentingNewLine]Return[{C, 
            S}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Open  ]],

Cell[CellGroupData[{

Cell["GETPROP: LECTOR DE PROPIEDADES.", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        GETPROP];\)\[IndentingNewLine] (*********************************************) \
\[IndentingNewLine] (*\ 
      LECTURA\ DE\ ARRAY\ DE\ PROPIEDADES\ GEOMETRICAS*) \[IndentingNewLine] \
(*\ VERSION\  : \ 
        31 - 08 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (*********************************************) \), "\
\[IndentingNewLine]", 
    \(GETPROP[
        Element_Integer] := \[IndentingNewLine]Module[{e, MCODE, SCODE, NGP, 
          NFC, NFS, Geometry, Reinforcement, Steel, 
          ConfinateConcrete}, \[IndentingNewLine]Options[
            GETPROP] = \ {}; \[IndentingNewLine]e = 
          Element; \[IndentingNewLine]{MCODE, SCODE, NGP, NFC, NFS} = 
          ElementTable[\([e]\)]; \[IndentingNewLine]{Geometry, Reinforcement, 
            Steel, ConfinateConcrete} = 
          SectionTable[\([SCODE]\)]; \[IndentingNewLine]Return[{Geometry, 
            Reinforcement, Steel, 
            ConfinateConcrete}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
GETSHAPE: 
EVALUAR FUNCIONES DE FORMA. \
\>", "Subsection",
  PageWidth->WindowWidth,
  FontColor->RGBColor[0, 0.500008, 0.996109]],

Cell[BoxData[{
    \(\(Clear[
        GETSHAPE];\)\[IndentingNewLine] (*\(\(**\)\(**\)\) **  **  **  **  **  \
**  **  **  **  **  ** *****) \[IndentingNewLine] (*\ 
      EVALUAR\ FUNCIONES\ DE\ FORMA\ \ \ *) \[IndentingNewLine] (*\ 
      VERSION : \ \(05/12\)/
          2003\ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine] (********************************) \
\), "\[IndentingNewLine]", 
    \(GETSHAPE[{r_, L_}, {EA_, EX_, EJ_, GA_}, 
        Opciones___] := \[IndentingNewLine]Module[{Shear, bu, 
          bu\[CapitalDelta]u3, bw, bw\[CapitalDelta]u3, b\[Theta], 
          b\[Theta]\[CapitalDelta]u3, hu, hu\[CapitalDelta]u3, hw, 
          hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
          h\[Gamma], h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
          h\[Chi]\[CapitalDelta]u3}, \[IndentingNewLine]Options[
            GETSHAPE] = \ {ShearInterpolation -> 
              False}; \[IndentingNewLine]Shear = \ \(ShearInterpolation\  \
/. \ {Opciones}\)\  /. 
            Options[GETSHAPE]; \[IndentingNewLine]bu = {{\(-\((1/
                    L)\)\)}, {\((1/
                  L)\)}}; \[IndentingNewLine]bu\[CapitalDelta]u3 = {{\(-4\)\ \
r/L}}; \[IndentingNewLine]hu = {{\((1 - r)\)/2}, {\((1 + r)\)/
                2}}; \[IndentingNewLine]hu\[CapitalDelta]u3 = {{1 - 
                r^2}}; \[IndentingNewLine]If[
          Shear, \[IndentingNewLine]hw = {{\(-\((\((\((\(-1\) + 
                              r)\)*\((24*EJ + 
                              GA*L^2*\((\(-2\) + r + r^2)\))\))\)/\((48*EJ - 
                          4*GA*L^2)\))\)\)}, {\((\((1 + r)\)*\((24*EJ + 
                          GA*L^2*\((\(-2\) + r)\)*\((1 + r)\))\))\)/\((48*
                        EJ - 4*GA*
                        L^2)\)}, {\((L*\((12*EJ + 
                          GA*L^2*\((\(-1\) + r)\))\)*\((\(-1\) + r)\)*\((1 + 
                          r)\))\)/\((8*\((\(-12\)*EJ + 
                          GA*L^2)\))\)}, {\((L*\((\(-1\) + r)\)*\((1 + 
                          r)\)*\((\(-12\)*EJ + 
                          GA*L^2*\((1 + r)\))\))\)/\((8*\((\(-12\)*EJ + 
                          GA*L^2)\))\)}}; \[IndentingNewLine]\
\[IndentingNewLine]bw = {{\((\(-24\)*EJ - 
                      3*GA*L^2*\((\(-1\) + r^2)\))\)/\((24*EJ*L - 
                      2*GA*L^3)\)}, {\((24*EJ + 
                      3*GA*L^2*\((\(-1\) + r^2)\))\)/\((24*EJ*L - 
                      2*GA*L^3)\)}, {\((\(-24\)*EJ*r + 
                      GA*L^2*\((1 + \((2 - 3*r)\)*r)\))\)/\((48*EJ - 
                      4*GA*L^2)\)}, {\((24*EJ*r - 
                      GA*L^2*\((1 + r)\)*\((\(-1\) + 3*r)\))\)/\((48*EJ - 
                      4*GA*
                        L^2)\)}}; \[IndentingNewLine]\[IndentingNewLine]b\
\[Theta] = {{\((6*GA*r)\)/\((\(-12\)*EJ + GA*L^2)\)}, {\((6*GA*
                      r)\)/\((12*EJ - 
                      GA*L^2)\)}, {\(-\((1/L)\)\) + \((3*GA*L*
                        r)\)/\((\(-12\)*EJ + GA*L^2)\)}, {1/
                    L + \((3*GA*L*r)\)/\((\(-12\)*EJ + 
                        GA*L^2)\)}}; \[IndentingNewLine]\[IndentingNewLine]h\
\[Gamma] = {{\((12*EJ)\)/\((12*EJ*L - GA*L^3)\)}, {\((12*
                      EJ)\)/\((\(-12\)*EJ*L + GA*L^3)\)}, {\((6*
                      EJ)\)/\((12*EJ - GA*L^2)\)}, {\((6*EJ)\)/\((12*EJ - 
                      GA*L^2)\)}}; \[IndentingNewLine]\[IndentingNewLine]hw\
\[CapitalDelta]u3 = {{\((2*EX*L*r*\((\(-1\) + r^2)\))\)/\((\(-12\)*EJ + 
                      GA*L^2)\)}}; \[IndentingNewLine]bw\[CapitalDelta]u3 = \
{{\(-\((\((4*EX*\((\(-1\) + 3*r^2)\))\)/\((12*EJ - 
                          GA*L^2)\))\)\)}}; \[IndentingNewLine]b\[Theta]\
\[CapitalDelta]u3 = {{\((48*EX*r)\)/\((\(-12\)*EJ*L + 
                      GA*L^3)\)}}; \
\[IndentingNewLine]h\[Gamma]\[CapitalDelta]u3 = {{\((8*EX)\)/\((12*EJ - 
                      GA*L^2)\)}};\[IndentingNewLine], \[IndentingNewLine]hw \
= {{\((2 - 3*r + r^3)\)/4}, {\((2 + 3*r - r^3)\)/
                  4}, {\((L*\((\(-1\) + r)\)^2*\((1 + r)\))\)/
                  8}, {\((L*\((\(-1\) + r)\)*\((1 + r)\)^2)\)/
                  8}}; \[IndentingNewLine]bw = {{\((3*\((\(-1\) + 
                          r^2)\))\)/\((2*
                      L)\)}, {\((\(-3\)*\((\(-1\) + r^2)\))\)/\((2*
                      L)\)}, {\((\((\(-1\) + r)\)*\((1 + 3*r)\))\)/
                  4}, {\((\((1 + r)\)*\((\(-1\) + 3*r)\))\)/
                  4}}; \[IndentingNewLine]b\[Theta] = \ {{\((6*r)\)/
                  L^2}, {\((\(-6\)*r)\)/L^2}, {\((\(-1\) + 3*r)\)/
                  L}, {\((1 + 3*r)\)/
                  L}}; \[IndentingNewLine]h\[Gamma] = {{0}, {0}, {0}, {0}}; \
\[IndentingNewLine]hw\[CapitalDelta]u3 = {{0}}; \[IndentingNewLine]bw\
\[CapitalDelta]u3 = {{0}}; \[IndentingNewLine]b\[Theta]\[CapitalDelta]u3 = \
{{0}}; \[IndentingNewLine]h\[Gamma]\[CapitalDelta]u3 = {{0}};\
\[IndentingNewLine]]; \[IndentingNewLine]h\[Theta] = 
          bw - h\[Gamma]; \[IndentingNewLine]h\[Theta]\[CapitalDelta]u3 = 
          bw\[CapitalDelta]u3 - 
            h\[Gamma]\[CapitalDelta]u3; \[IndentingNewLine]h\[Chi] = 
          b\[Theta]; \[IndentingNewLine]h\[Chi]\[CapitalDelta]u3 = 
          b\[Theta]\[CapitalDelta]u3; \[IndentingNewLine]Return[{{bu, 
              bu\[CapitalDelta]u3, bw, bw\[CapitalDelta]u3, b\[Theta], 
              b\[Theta]\[CapitalDelta]u3}, {hu, hu\[CapitalDelta]u3, hw, 
              hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
              h\[Gamma], h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
              h\[Chi]\[CapitalDelta]u3}}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->WindowWidth]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INITBC: 
INICIALIZAR ARRAYS DE BEAM-COLUMNS\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        INITBC];\)\[IndentingNewLine] (*********************************************) \
\[IndentingNewLine] (*\ 
      INICIALIZACION\ DE\ ARRAYS\ DE\ SUPERELEMENTOS*) \[IndentingNewLine] \
(*\ VERSION\  : \ 
        08 - 03 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (*********************************************) \), "\
\[IndentingNewLine]", 
    \(INITBC[{BCMAXEL_Integer, MAXMAT_Integer, MAXSEC_Integer, 
          MAXLOAD_Integer}] := \[IndentingNewLine]Module[{Coordinate, X = 0, 
          Y = 0, \[Alpha] = 0, Boundary, UID = 0, 
          WID = 0, \[Theta]ID = 0, \[IndentingNewLine]Connectivity, i = 0, 
          j = 0, JLOAD, FX = 0, FY = 0, MXY = 0, BCLOAD, pX = 0.00, 
          pY = 0.00, mXY = 0, \[IndentingNewLine]SectionSet, bo = 0, 
          bmax = 0, d = 0, do = 0, rs = 0, rh = 0, As1 = 0, 
          As2 = 0, \[Phi]h = 0, sh = 0, \[IndentingNewLine]MaterialSet, 
          fy = 0, \[Epsilon]y = 0, \[Gamma]a = 0, H = 0, K = 0, JointX, 
          BeamColumnCN, JointID, BeamTable, \[IndentingNewLine]JointLOAD, 
          BeamColumnLOAD, SectionTable, 
          MaterialTable}, \[IndentingNewLine]Options[
            INITBC] = \ {}; \[IndentingNewLine]BCMAXND = 
          BCMAXEL + 
            1; \[IndentingNewLine]\[IndentingNewLine]Coordinate = {X = 0, 
            Y = 0, \[Alpha] = 0}; \[IndentingNewLine]JointX = 
          Table[Coordinate, {BCMAXND}]; \
\[IndentingNewLine]\[IndentingNewLine]Connectivity = {i = 0, 
            j = 0}; \[IndentingNewLine]BeamColumnCN = 
          Table[Connectivity, {BCMAXEL}]; \[IndentingNewLine]\
\[IndentingNewLine]Boundary = {UID = 0, 
            WID = 0, \[Theta]ID = 0}; \[IndentingNewLine]JointID = 
          Table[Boundary, {BCMAXND}]; \
\[IndentingNewLine]\[IndentingNewLine]BeamTable = 
          Table[{0}, {BCMAXEL}]; \[IndentingNewLine]\[IndentingNewLine]JLOAD \
= Table[{FX = 0, FY = 0, MXY = 0}, {BCMAXND}]; \[IndentingNewLine]JointLOAD = 
          Table[JLOAD, {MAXLOAD}]; \
\[IndentingNewLine]\[IndentingNewLine]BCLOAD = 
          Table[{pX = 0.00, pY = 0.00, 
              mXY = 0}, {BCMAXEL}]; \[IndentingNewLine]BeamColumnLOAD = 
          Table[
            BCLOAD, {MAXLOAD}]; \[IndentingNewLine] \
(*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\
*****) \[IndentingNewLine] (*ESTO\ ES\ VIEJO . \ 
              CORREGIRLO*) \[IndentingNewLine]SectionSet = {{bo = 0, 
              bmax = 0, d = 0, do = 0, rs = 0, 
              rh = 0}, \[IndentingNewLine]{\[Alpha] = 0, As1 = 0, 
              As2 = 0, \[Phi]h = 0, 
              sh = 0}}; \[IndentingNewLine]SectionTable = 
          Table[SectionSet, {MAXSEC}]; \
\[IndentingNewLine]\[IndentingNewLine]MaterialSet = {{fy = 0, \[Epsilon]y = 
                0, \[Gamma]a = 0, H = 0, 
              K = 0}, {fc = 0, \[Epsilon]o = 0, \[Gamma]h = 
                0}}; \[IndentingNewLine]MaterialTable = 
          Table[MaterialSet, {MAXMAT}]; \
\[IndentingNewLine]\[IndentingNewLine]Return[{JointX, BeamColumnCN, JointID, 
            BeamTable, JointLOAD, BeamColumnLOAD, SectionTable, 
            MaterialTable}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INITBC: 
INICIALIZAR ARRAYS DE BEAM-COLUMNS\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        INITBC];\)\[IndentingNewLine] (*********************************************) \
\[IndentingNewLine] (*\ 
      INICIALIZACION\ DE\ ARRAYS\ DE\ SUPERELEMENTOS*) \[IndentingNewLine] \
(*\ VERSION\  : \ 
        27 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (*********************************************) \), "\
\[IndentingNewLine]", 
    \(INITBC[{BCMAXEL_Integer, BCMAXND_Integer, MAXMAT_Integer, 
          MAXSEC_Integer, 
          MAXLOAD_Integer}] := \[IndentingNewLine]Module[{Coordinate, X = 0, 
          Y = 0, \[Alpha] = 0, Boundary, UID = 0, 
          WID = 0, \[Theta]ID = 0, \[IndentingNewLine]Connectivity, i = 0, 
          j = 0, JLOAD, FX = 0, FY = 0, MXY = 0, BCLOAD, pX = 0.00, 
          pY = 0.00, mXY = 0, \[IndentingNewLine]SectionSet, bo = 0, 
          bmax = 0, d = 0, do = 0, rs = 0, rh = 0, As1 = 0, 
          As2 = 0, \[Phi]h = 0, sh = 0, \[IndentingNewLine]MaterialSet, 
          fy = 0, \[Epsilon]y = 0, \[Gamma]a = 0, H = 0, K = 0, JointX, 
          BeamColumnCN, JointID, BeamTable, \[IndentingNewLine]JointLOAD, 
          BeamColumnLOAD, SectionTable, 
          MaterialTable}, \[IndentingNewLine]Options[
            INITBC] = \ {}; \[IndentingNewLine]\[IndentingNewLine]Coordinate \
= {X = 0, Y = 0, \[Alpha] = 0}; \[IndentingNewLine]JointX = 
          Table[Coordinate, {BCMAXND}]; \
\[IndentingNewLine]\[IndentingNewLine]Connectivity = {i = 0, 
            j = 0}; \[IndentingNewLine]BeamColumnCN = 
          Table[Connectivity, {BCMAXEL}]; \[IndentingNewLine]\
\[IndentingNewLine]Boundary = {UID = 0, 
            WID = 0, \[Theta]ID = 0}; \[IndentingNewLine]JointID = 
          Table[Boundary, {BCMAXND}]; \
\[IndentingNewLine]\[IndentingNewLine]BeamTable = 
          Table[{0}, {BCMAXEL}]; \[IndentingNewLine]\[IndentingNewLine]JLOAD \
= Table[{FX = 0, FY = 0, MXY = 0}, {BCMAXND}]; \[IndentingNewLine]JointLOAD = 
          Table[JLOAD, {MAXLOAD}]; \
\[IndentingNewLine]\[IndentingNewLine]BCLOAD = 
          Table[{pX = 0.00, pY = 0.00, 
              mXY = 0}, {BCMAXEL}]; \[IndentingNewLine]BeamColumnLOAD = 
          Table[BCLOAD, {MAXLOAD}]; \[IndentingNewLine] \
(*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\
*****) \[IndentingNewLine] (*ESTO\ ES\ VIEJO . \ 
              CORREGIRLO*) \[IndentingNewLine]SectionSet = {{bo = 0, 
              bmax = 0, d = 0, do = 0, rs = 0, 
              rh = 0}, \[IndentingNewLine]{\[Alpha] = 0, As1 = 0, 
              As2 = 0, \[Phi]h = 0, 
              sh = 0}}; \[IndentingNewLine]SectionTable = 
          Table[SectionSet, {MAXSEC}]; \
\[IndentingNewLine]\[IndentingNewLine]MaterialSet = {{fy = 0, \[Epsilon]y = 
                0, \[Gamma]a = 0, H = 0, 
              K = 0}, {fc = 0, \[Epsilon]o = 0, \[Gamma]h = 
                0}}; \[IndentingNewLine]MaterialTable = 
          Table[MaterialSet, {MAXMAT}]; \
\[IndentingNewLine]\[IndentingNewLine]Return[{JointX, BeamColumnCN, JointID, 
            BeamTable, JointLOAD, BeamColumnLOAD, SectionTable, 
            MaterialTable}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INITR:
INICIALIZAR VECTOR FUERZAS NODALES\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        INITR];\)\[IndentingNewLine] (****************************************************) \
\[IndentingNewLine] (*\ 
      ALGORITMO\ DE\ INICIALIZACION\ DEL\ VECTOR\ DE\ CARGAS\ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (****************************************************) \
\), "\[IndentingNewLine]", 
    \(INITR[NEQ_] := 
      Module[{R}, \[IndentingNewLine]Options[
            INITR] = \ {}; \[IndentingNewLine]NDOF = 3; 
        NNOD = 2; \[IndentingNewLine]\[IndentingNewLine] (*\ 
          INICIALIZACION\ DE\ ARRAYS\ *) \[IndentingNewLine]R = 
          ZeroMatrix[NEQ, 1]; \[IndentingNewLine]Return[
          R];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INITU:
INICIALIZAR VECTOR DESPLAZAMIENTOS NODALES\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        INITU];\)\[IndentingNewLine] (****************************************************) \
\[IndentingNewLine] (*\ \ INICIALIZACION\ DEL\ VECTOR\ DE\ DESPLAZAMIENTOS\ \ \
\ *) \[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (****************************************************) \
\), "\[IndentingNewLine]", 
    \(INITU[NEQ_] := 
      Module[{U}, \[IndentingNewLine]Options[
            INITU] = \ {}; \[IndentingNewLine]NDOF = 3; 
        NNOD = 2; \[IndentingNewLine] (*\ 
          INICIALIZACION\ DE\ ARRAYS\ *) \[IndentingNewLine]U = 
          ZeroMatrix[NEQ, 1]; \[IndentingNewLine]Return[
          U];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INITS: 
INICIALIZACION ESTADO DE DEFORMACION SECCION\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        INITS];\)\[IndentingNewLine] (*********************************************************) \
\[IndentingNewLine] (*\ 
      INICIALIZAR\ ESTADO\ DE\ DEFORMACION\ DE\ LA\ SECCION\ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ \(09/09\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ *) \[IndentingNewLine] (*********************************************************) \
\), "\[IndentingNewLine]", 
    \(INITS[ELMAX_Integer, 
        ElementTable_] := \[IndentingNewLine]Module[{\[CapitalDelta]S, e, 
          NGP, NFC, NFS, 
          s}, \[IndentingNewLine]Options[
            INITS] = \ {}; \[IndentingNewLine]\[IndentingNewLine]\
\[CapitalDelta]S = Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{\(,\)\(,\)\(NGP\)\(,\)\(NFC\)\
\(,\)\(NFS\)} = 
            ElementTable[\([e]\)]; \
\[IndentingNewLine]\[CapitalDelta]S[\([e]\)] = 
            Table[{0}, {NGP}]; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]\(\[CapitalDelta]S[\([e, 
                    s]\)] = {0, 0, 
                  0};\)\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]Return[\[CapitalDelta]S];\[IndentingNewLine]]\)}], "Input",\

  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INITQ: 
INICIALIZACION ESFUERZOS INTERNOS DE LA SECCION\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        INITQ];\)\[IndentingNewLine] (*********************************************************) \
\[IndentingNewLine] (*\ 
      INICIALIAR\ VECTOR\ ESFUERZOS\ INTERNOS\ DE\ LA\ SECCION\ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ \(09/09\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ *) \[IndentingNewLine] (*********************************************************) \
\), "\[IndentingNewLine]", 
    \(INITQ[ELMAX_Integer, 
        ElementTable_] := \[IndentingNewLine]Module[{\[CapitalDelta]Q, e, 
          NGP, NFC, NFS, 
          s}, \[IndentingNewLine]Options[
            INITQ] = \ {}; \[IndentingNewLine]\[CapitalDelta]Q = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{\(,\)\(,\)\(NGP\)\(,\)\(NFC\)\
\(,\)\(NFS\)} = 
            ElementTable[\([e]\)]; \
\[IndentingNewLine]\[CapitalDelta]Q[\([e]\)] = 
            Table[{0}, {NGP}]; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]\(\[CapitalDelta]Q[\([e, 
                    s]\)] = {0, 0, 
                  0};\)\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]Return[\[CapitalDelta]Q];\[IndentingNewLine]]\)}], "Input",\

  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INITUE: 
INICIALIZAR DESPLAZAMIENTOS NODALES - {u,w,u3}\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        INITUE];\)\[IndentingNewLine] (****************************************) \
\[IndentingNewLine] (*\ 
      INICIALIZAR\ DESPLAZAMIENTOS\ NODALES\ \ *) \[IndentingNewLine] (*\ 
      VERSION\ \(25/08\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine] (****************************************) \
\), "\[IndentingNewLine]", 
    \(INITUE[ELMAX_Integer] := 
      Module[{UR, U\[CapitalDelta]}, \[IndentingNewLine]UR = 
          Table[{{0}, {0}, {0}, {0}, {0}, {0}}, {ELMAX}]; \
\[IndentingNewLine]U\[CapitalDelta] = 
          Table[{{0}}, {ELMAX}]; \[IndentingNewLine]Return[{UR, 
            U\[CapitalDelta]}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
INISTAF: FiberState[n]
INICIALIZACION ESTADO DE DEFORMACION FIBRAS\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        INISTAF];\)\[IndentingNewLine] (************************************************) \
\[IndentingNewLine] (*\ 
      INICIALIZACION\ ESTADO\ DE\ DEFORMACION\ FIBRAS\ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\ 08 - 11 - 
        2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (************************************************) \), "\
\[IndentingNewLine]", 
    \(INISTAF[ELMAX_Integer, 
        ElementTable_] := \[IndentingNewLine]Module[{e, s, f, Geometry, 
          Reinforcement, Steel, ConfinateConcrete, \[IndentingNewLine]MCODE, 
          SCODE, NGP, NFC, NFS, StateConcrete, StateSteel, 
          FiberState, \[Zeta], \[Psi], zs, 
          As, \[IndentingNewLine]zc, \[CapitalDelta]\[Epsilon]m, \
\[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\[Gamma]m, EA, EX, EJ, GA, 
          ACTIVE, \[Epsilon] = 0, \[Epsilon]p = 0, \[Alpha] = 0, \[Sigma] = 
            0, q = 0, Eo = 0, Go = 0, Es = 0, 
          Gs = 0\[IndentingNewLine]}, \[IndentingNewLine] (*\ 
          INICIALIZAR\ ARRAY\ *) \[IndentingNewLine]FiberState = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{Geometry, Reinforcement, 
              Steel, ConfinateConcrete} = 
            GETPROP[e]; \[IndentingNewLine]{MCODE, SCODE, NGP, NFC, NFS} = 
            ElementTable[\([e]\)]; \[IndentingNewLine]StateConcrete = 
            Table[{0}, {NFC}]; \[IndentingNewLine]StateSteel = 
            Table[{0}, {NFS}]; \[IndentingNewLine]FiberState[\([e]\)] = 
            Table[{0}, {NGP}]; \[IndentingNewLine] (*\ 
            DETERMINAR\ COORDENADAS\ DE\ INTEGRACION\ *) \[IndentingNewLine]{\
\[Zeta], \[Psi]} = IntegrationTable[\([e, 2]\)]; \[IndentingNewLine] (*\ 
            LEER\ DATOS\ DE\ LA\ SECCION\ \
*) \[IndentingNewLine]{{\(,\)\(,\)\(,\)}, {\(,\)\(,\)\(,\)\(hk\)\(,\)\(bk\)}} \
= Geometry; \[IndentingNewLine]{\(,\)\(zs\)\(,\)\(As\)\(,\)\(,\)} = 
            Reinforcement; \[IndentingNewLine]zc = 
            hk/2*\[Zeta]; \[IndentingNewLine]\[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]m, \
\[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\[Gamma]m} = {0, 0, 
                0}; \[IndentingNewLine]EA = 0; EX = 0; EJ = 0; 
            GA = 0; \[IndentingNewLine]If[NOCONCRETE, ACTIVE = False, 
              ACTIVE = True]; \[IndentingNewLine]For[f = 1, 
              f \[LessEqual] 
                NFC, \(f++\), \[IndentingNewLine]\(StateConcrete[\([f]\)] = \
{ACTIVE, \[Epsilon] = 0, \[Epsilon]p = 0, \[Alpha] = 0, \[Sigma] = 0, Eo = 0, 
                    Go = 0};\)\[IndentingNewLine]]; \[IndentingNewLine]If[
              NOSTEEL, ACTIVE = False, ACTIVE = True]; \[IndentingNewLine]For[
              f = 1, f \[LessEqual] 
                NFS, \(f++\), \[IndentingNewLine] (*\(If[
                    As[\([f]\)] \[Equal] 0 || NOSTEEL, ACTIVE = False, 
                    ACTIVE = 
                      True];\)*) \[IndentingNewLine]\(StateSteel[\([f]\)] = \
{ACTIVE, \[Epsilon] = 0, \[Epsilon]p = 0, \[Alpha] = 0, q = 0, \[Sigma] = 0, 
                    Es = 0, 
                    Gs = 0};\)\[IndentingNewLine]]; \
\[IndentingNewLine]\(FiberState[\([e, s]\)] = {StateConcrete, 
                  StateSteel};\)\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          FiberState];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
KCONDENSE:
CONDENSACION ESTATICA MATRIZ TANGENTE\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        KCONDENSE];\)\[IndentingNewLine] (*\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)***********) \
\[IndentingNewLine] (*\ 
      CONDENSACION\ DE\ BLOQUES\ DE\ MATRIZ\ TANGENTE\ *) \[IndentingNewLine] \
(*\ VERSION\  : \ 
        29 - 10 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] \
(*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)*************) \), "\[IndentingNewLine]", 
    \(KCONDENSE[
        ELMAX_Integer, {KRR_, KR\[CapitalDelta]_, 
          K\[CapitalDelta]\[CapitalDelta]_}] := \[IndentingNewLine]Module[{e, 
          kc, KC}, \[IndentingNewLine]Options[
            KCONDENSE] = \ {}; \[IndentingNewLine]\[IndentingNewLine] (*\ 
          INICIALIZAR\ ARRAYS\ *) \[IndentingNewLine]KC = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]If[
            K\[CapitalDelta]\[CapitalDelta][\([e]\)] \[Equal] 
              0, \[IndentingNewLine]PRINT[{"\< ********** PROGRAM ERROR \
********** (K\[CapitalDelta]\[CapitalDelta]=0). STOP\>"}]; \
\[IndentingNewLine]Return[];\[IndentingNewLine]]; \[IndentingNewLine] (*\ 
            Se\ puede\ optimizar\ esta\ operacion\ para\ matrices\ simetricas\
*) \[IndentingNewLine]kc = 
            KRR[\([e]\)] - 
              KR\[CapitalDelta][\([e]\)] . \
\((K\[CapitalDelta]\[CapitalDelta][\([e]\)]^\(-1\))\) . 
                TR[KR\[CapitalDelta][\([e]\)]]; \
\[IndentingNewLine]KC[\([e]\)] = 
            Chop[kc, CTOL];\[IndentingNewLine]]; \[IndentingNewLine]Return[
          KC];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
KSORT: 
REORDENAR GRADOS DE LIBERTAD\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        KSORT];\)\[IndentingNewLine] (*************************************************) \
\[IndentingNewLine] (*\ 
      REORDENAMIENTO\ DE\ MATRIZ\ ELEMENTAL\ CONDENSADA\ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        02 - 09 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (*************************************************) \
\[IndentingNewLine] (*\ 
      ORIGEN : \ {u1\ u2\ w1\ w2\ \[Theta]1\ \[Theta]2}\ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      SWITCH\ 2 - 
          3 : \ {u1\ w1\ u2\ w2\ \[Theta]1\ \[Theta]2}\ *) \
\[IndentingNewLine] (*\ 
      SWITCH\ 3 - 
          4 : \ {u1\ w1\ w2\ u2\ \[Theta]1\ \[Theta]2}\ *) \
\[IndentingNewLine] (*\ 
      SWITCH\ 3 - 
          5 : \ {u1\ w1\ \[Theta]1\ u2\ w2\ \[Theta]2}\ *) \), "\
\[IndentingNewLine]", 
    \(KSORT[
        KEC_?MatrixQ] := \[IndentingNewLine]Module[{kecs, i, 
          j}, \[IndentingNewLine]Options[
            KSORT] = \ {}; \[IndentingNewLine]kecs = 
          KEC; \[IndentingNewLine]i = 2; 
        j = 3; \[IndentingNewLine]kecs = 
          IntercambiarFilas[IntercambiarColumnas[kecs, i, j], i, 
            j]; \[IndentingNewLine]i = 3; 
        j = 4; \[IndentingNewLine]kecs = 
          IntercambiarFilas[IntercambiarColumnas[kecs, i, j], i, 
            j]; \[IndentingNewLine]i = 3; 
        j = 5; \[IndentingNewLine]kecs = 
          IntercambiarFilas[IntercambiarColumnas[kecs, i, j], i, 
            j]; \[IndentingNewLine]Return[
          kecs];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
KASSEMBLE:
ENSAMBLAJE DE MATRICES ELEMENTALES\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        KASSEMBLE];\)\[IndentingNewLine] (**********************************************) \
\[IndentingNewLine] (*\ 
      ALGORITMO\ DE\ ENSAMBLAJE\ DE\ MATRIZ\ TANGENTE\ *) \[IndentingNewLine] \
(*\ VERSION\  : \ 
        26 - 10 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**********************************************) \), "\
\[IndentingNewLine]", 
    \(KASSEMBLE[ELMAX_Integer, NDMAX_Integer, KE_, NodeX_] := 
      Module[{Kt, T, NEQ, ke, e, i, j, k, 
          l}, \[IndentingNewLine]Options[KASS] = \ {}; NDOF = 3; 
        NNOD = 2; \[IndentingNewLine]\[IndentingNewLine]NEQ = 
          Max[ElementLM]; \[IndentingNewLine] (*\ 
          INICIALIZACION\ DE\ ARRAYS\ *) \[IndentingNewLine]Kt = 
          ZeroMatrix[NEQ, NEQ]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
          EXPANSION\ Y\ ENSAMBLAJE\ *) \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]ke = 
            KE[\([e]\)]; \[IndentingNewLine] (*\ 
            REORDENAR\ LOS\ G . L . \ 
                DE\ LA\ MATRIZ\ ELEMENTAL\ *) \[IndentingNewLine]ke = 
            KSORT[ke]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            ROTAR\ LOS\ G . L . \ 
                A\ COORDENADAS\ GLOBALES\ *) \[IndentingNewLine]T = 
            ROT[e, NodeX]; \[IndentingNewLine]ke = 
            TR[T] . ke . T; \[IndentingNewLine] (*\ 
            ENSAMBLAR\ MATRICES\ ELEMENTALES\ CONDENSADAS\ \
*) \[IndentingNewLine]For[i = 1, 
            i <= NNOD*NDOF, \(i++\), \[IndentingNewLine]k = 
              ElementLM[\([e, i]\)]; \[IndentingNewLine]If[
              k > 0, \[IndentingNewLine]\(For[j = 1, 
                  j \[LessEqual] NNOD*NDOF, \(j++\), \[IndentingNewLine]l = 
                    ElementLM[\([e, j]\)]; \[IndentingNewLine]If[
                    l > 0, \[IndentingNewLine]\(Kt[\([k, l]\)] += 
                        Chop[ke[\([i, j]\)], 
                          CTOL];\)\ \
\[IndentingNewLine]];\[IndentingNewLine]];\)\ \[IndentingNewLine]];\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]Return[
          Kt];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
LOADRC: 
CARGAS NODALES A PARTIR DE CARGAS EN BEAM-COLUMNS \
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(Clear[
      LOADRC]\[IndentingNewLine] (*\(\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\)*\(\(**\)\(**\)\(**\)\(\
**\)\)*************) \[IndentingNewLine] (*\ 
      CARGAS\ PUNTUALES\  - \ 
        RC\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION : \ \(05/04\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] \
(*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)**********************) \), "\[IndentingNewLine]", 
    \(\(LOADRC[BCMAXND_Integer, NDMAX_Integer, JointLOAD_] := 
        Module[{RC, n, k, NDOF}, \[IndentingNewLine]RC = 
            Table[{0, 0, 0}, {NDMAX}]; \[IndentingNewLine]NDOF = 
            3; \[IndentingNewLine]For[n = 1, 
            n \[LessEqual] 
              BCMAXND, \(n++\), \[IndentingNewLine]\(For[k = 1, 
                k \[LessEqual] 
                  NDOF, \(k++\), \[IndentingNewLine]\(RC[\([n, k]\)] = 
                    JointLOAD[\([n, 
                        k]\)];\)\[IndentingNewLine]];\)\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
            RC]\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
LOADSF: 
CARGAS DE SUPERFICIE\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        LOADSF];\)\[IndentingNewLine] (******************************************************) \
\[IndentingNewLine] (*\ 
      SOBRECARGAS\ DISTRIBUIDAS\ DEFINIDAS\ EN\ BEAM - 
        COLUMNS\ *) \[IndentingNewLine] (*\ 
      VERSION : \ \(05/04\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine] (*\(**\)\(**\)\(**\)\(**\)\(**\)*******************************************) \
\), "\n", 
    \(LOADSF[BCMAXEL_Integer, ELMAX_Integer, BeamColumnLOAD_] := 
      Module[{e, BC, emin, emax, px, py, mxy, 
          fS}, \[IndentingNewLine]Options[
            LOADSF] = {}; \[IndentingNewLine]\[IndentingNewLine]fS = 
          Table[{0}, {ELMAX}]; 
        For[BC = 1, 
          BC \[LessEqual] 
            BCMAXEL, \(BC++\), \[IndentingNewLine]{emin, emax} = 
            BeamTable[\([BC, 3]\)]; \[IndentingNewLine]{px, py, mxy} = 
            BeamColumnLOAD[\([BC]\)]; 
          For[e = emin, 
            e \[LessEqual] 
              emax, \(e++\), \[IndentingNewLine]\(fS[\([e]\)] = {px, py, 
                  mxy};\)\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          fS];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
LOADGV: 
CARGAS GRAVITATORIAS\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[
    StyleBox[\( (*\ MODIFICAR\ CON\ GETPROP\ *) \),
      FontColor->RGBColor[1, 0, 0]]], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        LOADGV];\)\[IndentingNewLine] (*************************************) \
\[IndentingNewLine] (*\ 
      CARGAS\ DISTRIBUIDAS\ GRAVITATORIAS\ *) \[IndentingNewLine] (*\ 
      VERSION : \ \(05/04\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine] (*************************************) \
\), "\n", 
    \(LOADGV[ELMAX_Integer, ElementTable_, NodeX_] := 
      Module[{e, MCODE, SCODE, NFS, cos, sin, \[Gamma]c, \[Gamma]s, Geometry, 
          Reinforcement, bo, bmax, d, do, AC, AS, gx, gy, fB, 
          GY}, \[IndentingNewLine]Options[
            LOADSF] = {}; \[IndentingNewLine]fB = 
          Table[{0, 0, 0}, {ELMAX}]; \[IndentingNewLine]If[
          GRAV, \[IndentingNewLine]\(For[e = 1, 
              e \[LessEqual] 
                ELMAX, \(e++\), \[IndentingNewLine]{MCODE, SCODE, , , NFS} = 
                ElementTable[\([e]\)]; \[IndentingNewLine]{cos, sin} = 
                GETCS[e, 
                  NodeX]; \
\[IndentingNewLine]{{\(,\)\(,\)\(,\)\(\[Gamma]s\)\(,\)\(,\)}, {\(,\)\(,\)\(\
\[Gamma]c\)}} = 
                MaterialTable[\([MCODE]\)]; \[IndentingNewLine]{Geometry, 
                  Reinforcement, , } = 
                SectionTable[\([SCODE]\)]; \[IndentingNewLine]{{bo, bmax, d, 
                    do}, {\(,\)\(,\)\(,\)\(,\)}} = 
                Geometry; \[IndentingNewLine]AC = 
                bo*d + \((bmax - bo)\)*do; \[IndentingNewLine]AS = 
                Sum[Reinforcement[\([3, i]\)], {i, 
                    NFS}]; \[IndentingNewLine]GY = \((AC*\[Gamma]c + 
                    AS*\[Gamma]s)\); \[IndentingNewLine]gx = \(-GY\)*
                  sin; \[IndentingNewLine]gy = \(-GY\)*
                  cos; \[IndentingNewLine]fB[\([e]\)] = {gx, gy, 
                  0};\[IndentingNewLine]];\)\[IndentingNewLine] (*ELSE\ \
NOTHING*) \[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine]Return[
          fB];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
LOADCENL:
CARGAS ELEMENTALES NODALES CONSISTENTES (re).\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        LOADCENL];\)\[IndentingNewLine] (*\(\(**\)\(**\)\) **  ** \(\(*\)\(\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\)\(*\)\)*****) \[IndentingNewLine] (*\ 
      CARGAS\ ELEMENTALES\ CONSISTENTES\  - \ 
        re\ \ \ \ \ *) \[IndentingNewLine] (*\ 
      VERSION : \ \(08/09\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (********************************************) \), "\
\[IndentingNewLine]", 
    \(LOADCENL[ELMAX_Integer, f_, ShapeFunctions_, NodeX_, 
        Opciones___] := \[IndentingNewLine]Module[{e, s, re, 
          re\[CapitalDelta], L, \[Xi], \[Psi], NGP, qx, qy, 
          mxy, \[IndentingNewLine]hu, hu\[CapitalDelta]u3, hw, 
          hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
          h\[Gamma], h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
          h\[Chi]\[CapitalDelta]u3, ru, rw, 
          ru\[CapitalDelta]u3}, \[IndentingNewLine]Options[
            LOADCENL] = \ {}; \[IndentingNewLine]re = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]re\[CapitalDelta] = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]{qx, qy, mxy} = 
            f[\([e]\)]; \[IndentingNewLine]{\[Xi], \[Psi]} = 
            IntegrationTable[\([e, 1]\)]; \[IndentingNewLine]NGP = 
            ElementTable[\([e, 3]\)]; \[IndentingNewLine]L = 
            GETL[e, NodeX]; \[IndentingNewLine]ru = 0; 
          ru\[CapitalDelta]u3 = 0; 
          rw = 0; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{hu, hu\[CapitalDelta]u3, hw, 
                hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
                h\[Gamma], h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
                h\[Chi]\[CapitalDelta]u3} = 
              ShapeFunctions[\([e, s, 2]\)]; \[IndentingNewLine]ru += 
              qx*L/2*hu*\[Psi][\([s]\)]; \
\[IndentingNewLine]ru\[CapitalDelta]u3 += 
              qx*L/2*hu\[CapitalDelta]u3*\[Psi][\([s]\)]; \
\[IndentingNewLine]rw += 
              qy*L/2*hw*\[Psi][\([s]\)] + \((mxy)\)*L/2*
                  h\[Theta]*\[Psi][\([s]\)];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine] (*\ 
            ARMAR\ BLOQUES\ DEL\ VECTOR\ DE\ CARGAS\ \
*) \[IndentingNewLine]re[\([e]\)] = 
            Join[ru, rw]; \[IndentingNewLine]re\[CapitalDelta][\([e]\)] = 
            ru\[CapitalDelta]u3;\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]Return[{re, 
            re\[CapitalDelta]}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
REASSEMBLE:
ENSAMBLAJE DE FUERZAS NODALES CONSISTENTES\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        REASSEMBLE];\)\[IndentingNewLine] (************************************************) \
\[IndentingNewLine] (*\ 
      ALGORITMO\ DE\ ENSAMBLAJE\ DEL\ VECTOR\ DE\ CARGAS\ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        28 - 10 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (************************************************) \), "\
\[IndentingNewLine]", 
    \(REASSEMBLE[ELMAX_Integer, RE_, NodeX_] := 
      Module[{R, T, NEQ, kec, re, e, KRR, KR\[CapitalDelta], 
          K\[CapitalDelta]\[CapitalDelta], RR, R\[CapitalDelta], i, j, k, l, 
          NodeR}, \[IndentingNewLine]Options[
            REASSEMBLE] = \ {}; \[IndentingNewLine]NDOF = 3; 
        NNOD = 2; \[IndentingNewLine]\[IndentingNewLine] (*\ 
          INICIALIZACION\ DE\ ARRAYS\ *) \[IndentingNewLine]NEQ = 
          Max[ElementLM]; \[IndentingNewLine]R = 
          ZeroMatrix[NEQ, 1]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
          EXPANSION\ Y\ ENSAMBLAJE\ \
*) \[IndentingNewLine]\[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]re = 
            RE[\([e]\)]; \[IndentingNewLine] (*\ 
            REORDENAR\ LOS\ G . L . \ 
                DE\ LA\ MATRIZ\ ELEMENTAL\ *) \[IndentingNewLine]re = 
            RSORT[re]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            ROTAR\ LOS\ G . L . \ 
                A\ COORDENADAS\ GLOBALES\ *) \[IndentingNewLine]T = 
            ROT[e, NodeX]; \[IndentingNewLine]re = 
            TR[T] . re; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            ENSAMBLAR\ MATRICES\ ELEMENTALES\ CONDENSADAS\ \
*) \[IndentingNewLine]For[i = 1, 
            i <= NNOD*NDOF, \(i++\), \[IndentingNewLine]k = 
              ElementLM[\([e, i]\)]; \[IndentingNewLine]If[
              k > 0, \[IndentingNewLine]\(R[\([k]\)] += 
                  Chop[re[\([i]\)], 
                    CTOL];\)\[IndentingNewLine]];\[IndentingNewLine]];\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine]Return[
          R];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RCONDENSE:
CONDENSACION ESTATICA VECTOR DE CARGAS\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        RCONDENSE];\)\[IndentingNewLine] (*\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)***********) \
\[IndentingNewLine] (*\ 
      CONDENSACION\ DE\ BLOQUES\ DE\ CARGAS\ NODALES\ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        27 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] \
(*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)*************) \), "\n", 
    \(RCONDENSE[
        ELMAX_Integer, {KR\[CapitalDelta]_, 
          K\[CapitalDelta]\[CapitalDelta]_}, {RR_, 
          R\[CapitalDelta]_}] := \[IndentingNewLine]Module[{RC, 
          e}, \[IndentingNewLine]\[IndentingNewLine] (*\ 
          INICIALIZAR\ ARRAYS\ *) \[IndentingNewLine]RC = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]If[
            K\[CapitalDelta]\[CapitalDelta][\([e]\)] \[Equal] 
              0, \[IndentingNewLine]PRINT[{"\< ********** PROGRAM ERROR \
********** (K\[CapitalDelta]\[CapitalDelta]=0). STOP\>"}]; \
\[IndentingNewLine]Return[];\[IndentingNewLine]]; \[IndentingNewLine]RC[\([e]\
\)] = RR[\([e]\)] - 
              KR\[CapitalDelta][\([e]\)] . \
\((K\[CapitalDelta]\[CapitalDelta][\([e]\)]^\(-1\))\) . 
                R\[CapitalDelta][\([e]\)];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          RC];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["RNASSEMBLE: ENSAMBLAR CARGAS NODALES CONCENTRADAS", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        RNASSEMBLE];\)\[IndentingNewLine] (*********************************************) \
\[IndentingNewLine] (*\ 
      ARRAY\ DE\ CARGAS\ NODALES\ REDUCIDO\ \((RN)\)\ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        27 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (*********************************************) \), "\
\[IndentingNewLine]", 
    \(RNASSEMBLE[NDMAX_Integer, 
        RN_] := \[IndentingNewLine]Module[{R, NEQ, neq, i, j, 
          k}, \[IndentingNewLine]\[IndentingNewLine]NEQ = 
          Max[ElementLM]; \[IndentingNewLine]NDOF = 3; \[IndentingNewLine]R = 
          ZeroMatrix[NEQ, 1]; \[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 
            NDMAX, \(i++\), \[IndentingNewLine]\(For[k = 1, 
              k \[LessEqual] NDOF, \(k++\), \[IndentingNewLine]neq = 
                NodeID[\([k, i]\)]; \[IndentingNewLine]If[
                neq > 0, \[IndentingNewLine]\(R[\([neq, 1]\)] = 
                    RN[\([i, k]\)];\), \[IndentingNewLine]\(If[
                    RN[\([i, k]\)] != 
                      0, \[IndentingNewLine]\(PRINT["\<+++ \
WARNING:CONCENTRATED FORCE AT RESTRAINED JOINT \
.\>"];\)\[IndentingNewLine]];\)\[IndentingNewLine]];\[IndentingNewLine]];\)\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine]Return[
          R];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
ROT: 
MATRIZ DE ROTACION DE COORDENADAS.\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        ROT];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      C\[CapitalAAcute]LCULO\ DE\ LA\ MATRIZ\ DE\ ROTACION\ DEL\ ELEMENTO\ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        31 - 08 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(ROT[Element_Integer, NodeX_] := 
      Module[{e, i, j, Le, C, S, T, T0, 
          t}, \[IndentingNewLine]Options[ROT] = \ {}; \[IndentingNewLine]e = 
          Element; \[IndentingNewLine]{i, j} = 
          ElementCN[\([e]\)]; \[IndentingNewLine]{Xi, Yi} = 
          NodeX[\([i]\)]; \[IndentingNewLine]{Xj, Yj} = 
          NodeX[\([j]\)]; \[IndentingNewLine]Le = 
          Sqrt[\((Xj - Xi)\)^2 + \((Yj - 
                    Yi)\)^2]; \[IndentingNewLine]C = \((Xj - Xi)\)/Le // 
            Chop; \[IndentingNewLine]S = \((Yj - Yi)\)/Le // 
            Chop; \[IndentingNewLine]t = {{C, S, 0}, {\(-S\), C, 0}, {0, 0, 
              1}}; \[IndentingNewLine]T0 = {{0, 0, 0}, {0, 0, 0}, {0, 0, 
              0}}; \[IndentingNewLine]T = 
          BlockMatrix[{{t, T0}, {T0, t}}]; \[IndentingNewLine]Return[
          T];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RSORT: 
REORDENAR GRADOS DE LIBERTAD\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        RSORT];\)\[IndentingNewLine] (*************************************************) \
\[IndentingNewLine] (*\ 
      REORDENAMIENTO\ DE\ VECTOR\ DE\ CARGAS\ CONDENSADO\ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        02 - 09 - 
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)************************************) \
\[IndentingNewLine] (*\ 
      ORIGEN : \ {u1\ u2\ w1\ w2\ \[Theta]1\ \[Theta]2}\ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      SWITCH\ 2 - 
          3 : \ {u1\ w1\ u2\ w2\ \[Theta]1\ \[Theta]2}\ *) \
\[IndentingNewLine] (*\ 
      SWITCH\ 3 - 
          4 : \ {u1\ w1\ w2\ u2\ \[Theta]1\ \[Theta]2}\ *) \
\[IndentingNewLine] (*\ 
      SWITCH\ 3 - 
          5 : \ {u1\ w1\ \[Theta]1\ u2\ w2\ \[Theta]2}\ *) \), "\
\[IndentingNewLine]", 
    \(RSORT[
        REC_?MatrixQ] := \[IndentingNewLine]Module[{recs, i, 
          j}, \[IndentingNewLine]Options[
            RSORT] = \ {}; \[IndentingNewLine]recs = 
          REC; \[IndentingNewLine]i = 2; 
        j = 3; \[IndentingNewLine]recs = 
          IntercambiarElementos[recs, i, j]; \[IndentingNewLine]i = 3; 
        j = 4; \[IndentingNewLine]recs = 
          IntercambiarElementos[recs, i, j]; \[IndentingNewLine]i = 3; 
        j = 5; \[IndentingNewLine]recs = 
          IntercambiarElementos[recs, i, j]; \[IndentingNewLine]Return[
          recs];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETCONN: 
GENERADOR DE ARRAY DE CONECTIVIDAD (CONN)\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETCONN];\)\[IndentingNewLine] (***********************************************) \
\[IndentingNewLine] (*\ 
      C\[CapitalAAcute]LCULO\ DEL\ ARRAY\ DE\ CONECTIVIDAD\ ELEMENTAL\ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (***********************************************) \), "\
\[IndentingNewLine]", 
    \(SETCONN[BCMAXEL_Integer, ELMAX_Integer] := 
      Module[{BC, NEL, NDX, ELX, i, j, k, I, J, emin, emax, 
          ElementCN}, \[IndentingNewLine]Options[
            SETCONN] = \ {}; \[IndentingNewLine]\[IndentingNewLine]ElementCN \
= Table[{i = 0, j = 0}, {ELMAX}]; \[IndentingNewLine]ELX = 0; 
        NDX = Max[BeamColumnCN]; \[IndentingNewLine]For[BC = 1, 
          BC \[LessEqual] \ BCMAXEL, \(BC++\), \[IndentingNewLine]NTMAX = 
            BeamTable[\([BC, 1]\)]; \[IndentingNewLine]I = 
            BeamColumnCN[\([BC, 1]\)]; \[IndentingNewLine]j = I; 
          emin = ELX + 1; 
          BeamTable[\([BC, 3, 1]\)] = emin; \[IndentingNewLine]For[NT = 1, 
            NT \[LessEqual] NTMAX - 1, \(NT++\), \[IndentingNewLine]NEL = 
              BeamTable[\([BC, 4, NT, 1]\)]; \[IndentingNewLine]\(ELX++\); 
            i = j; emin = ELX; \[IndentingNewLine]ElementCN[\([ELX, 1]\)] = 
              i; \[IndentingNewLine]For[k = 1, 
              k \[LessEqual] 
                NEL - 1, \(k++\), \[IndentingNewLine]\(ELX++\); \(NDX++\); \
\[IndentingNewLine]ElementCN[\([ELX - 1, 2]\)] = 
                NDX; \[IndentingNewLine]ElementCN[\([ELX, 1]\)] = 
                NDX;\[IndentingNewLine]]; \[IndentingNewLine]\(NDX++\); 
            j = NDX; 
            emax = ELX; \[IndentingNewLine]ElementCN[\([ELX, 2]\)] = 
              j; \[IndentingNewLine]BeamTable[\([BC, 4, NT, 6]\)] = {emin, 
                emax};\[IndentingNewLine]]; \[IndentingNewLine]NEL = 
            BeamTable[\([BC, 4, NTMAX, 1]\)]; \[IndentingNewLine]\(ELX++\); 
          i = j; emin = ELX; \[IndentingNewLine]ElementCN[\([ELX, 1]\)] = 
            i; \[IndentingNewLine]For[k = 1, 
            k \[LessEqual] 
              NEL - 1, \(k++\), \[IndentingNewLine]\(ELX++\); \(NDX++\); \
\[IndentingNewLine]ElementCN[\([ELX - 1, 2]\)] = 
              NDX; \[IndentingNewLine]ElementCN[\([ELX, 1]\)] = 
              NDX;\[IndentingNewLine]]; \[IndentingNewLine]J = 
            BeamColumnCN[\([BC, 2]\)]; \[IndentingNewLine]emax = 
            ELX; \[IndentingNewLine]ElementCN[\([ELX, 2]\)] = 
            J; \[IndentingNewLine]BeamTable[\([BC, 4, NTMAX, 6]\)] = {emin, 
              emax}; \[IndentingNewLine]BeamTable[\([BC, 3, 2]\)] = 
            emax;\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          ElementCN];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["SETCORD: GENERADOR DE ARRAY DE COORDENADAS NODALES(X)", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        SETCORD];\)\[IndentingNewLine] (***********************************************) \
\[IndentingNewLine] (*\ 
      C\[CapitalAAcute]LCULO\ DEL\ ARRAY\ DE\ CORDENADAS\ NODALES\ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        25 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (***********************************************) \), "\
\[IndentingNewLine]", 
    \(SETCORD[BCMAXEL_Integer, 
        NDMAX_Integer] := \[IndentingNewLine]Module[{BC, NTMAX, NodeX, NT, 
          NEL, \[Alpha]L, emin, emax, e, i, j, k, I, J, XI, YI, XJ, 
          YJ, \[CapitalDelta]x, \[CapitalDelta]y}, \[IndentingNewLine]Options[
            SETCORD] = \ {}; \[IndentingNewLine]\[IndentingNewLine]NodeX = 
          Table[{x = 0, y = 0}, {NDMAX}]; \[IndentingNewLine]For[BC = 1, 
          BC \[LessEqual] \ BCMAXEL, \(BC++\), \[IndentingNewLine]NTMAX = 
            BeamTable[\([BC, 1]\)]; \[IndentingNewLine]{I, J} = 
            BeamColumnCN[\([BC]\)]; \[IndentingNewLine]{XI, YI} = 
            JointX[\([I]\)]; \[IndentingNewLine]{XJ, YJ} = 
            JointX[\([J]\)]; \[IndentingNewLine]NodeX[\([I]\)] = {XI, 
              YI}; \[IndentingNewLine]For[NT = 1, 
            NT \[LessEqual] NTMAX - 1, \(NT++\), \[IndentingNewLine]NEL = 
              BeamTable[\([BC, 4, NT, 1]\)]; \[IndentingNewLine]\[Alpha]L = 
              BeamTable[\([BC, 4, NT, 2]\)]; \[IndentingNewLine]{emin, 
                emax} = 
              BeamTable[\([BC, 4, NT, 
                  6]\)]; \[IndentingNewLine]{\[CapitalDelta]X, \
\[CapitalDelta]Y} = \((\[Alpha]L/
                    NEL)\)*\(({XJ, YJ} - {XI, YI})\); \[IndentingNewLine]For[
              e = emin, 
              e \[LessEqual] emax, \(e++\), \[IndentingNewLine]{i, j} = 
                ElementCN[\([e]\)]; \[IndentingNewLine]NodeX[\([j]\)] = 
                NodeX[\([i]\)] + {\[CapitalDelta]X, \[CapitalDelta]Y};\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]NEL = 
            BeamTable[\([BC, 4, NTMAX, 1]\)]; \[IndentingNewLine]\[Alpha]L = 
            BeamTable[\([BC, 4, NTMAX, 2]\)]; \[IndentingNewLine]{emin, 
              emax} = BeamTable[\([BC, 4, NTMAX, 
                6]\)]; \[IndentingNewLine]{\[CapitalDelta]X, \
\[CapitalDelta]Y} = \((\[Alpha]L/
                  NEL)\)*\(({XJ, YJ} - {XI, YI})\); \[IndentingNewLine]For[
            e = emin, 
            e \[LessEqual] emax, \(e++\), \[IndentingNewLine]{i, j} = 
              ElementCN[\([e]\)]; \[IndentingNewLine]NodeX[\([j]\)] = 
              NodeX[\([i]\)] + {\[CapitalDelta]X, \[CapitalDelta]Y};\
\[IndentingNewLine]]; \[IndentingNewLine]NodeX[\([J]\)] = {XJ, 
              YJ};\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          NodeX];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["SETDIM: DETERMINAR ELMAX,NDMAX", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        SETDIM];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      DETERMINACON\ DE\ DIMENSIONES\ M\[CapitalAAcute]XIMAS\ DE\ ARRAY\ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        07 - 12 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(SETDIM[BCMAXEL_Integer, BCMAXND_Integer, BeamTable_] := 
      Module[{ELMAX, NDMAX, BC, NT, NTMAX, 
          NEL}, \[IndentingNewLine]Options[
            SETDIM] = \ {}; \[IndentingNewLine]ELMAX = 0; 
        NDMAX = BCMAXND; \[IndentingNewLine]For[BC = 1, 
          BC \[LessEqual] BCMAXEL, \(BC++\), \[IndentingNewLine]NTMAX = 
            BeamTable[\([BC, 1]\)]; \[IndentingNewLine]For[NT = 1, 
            NT \[LessEqual] \ NTMAX, \(NT++\), \[IndentingNewLine]NEL = 
              BeamTable[\([BC, 4, NT, 1]\)]; \[IndentingNewLine]ELMAX += 
              NEL;\[IndentingNewLine]]; \[IndentingNewLine]NDMAX += 
            ELMAX - 1;\ \[IndentingNewLine]]; \
\[IndentingNewLine]Return[{ELMAX, NDMAX}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["SETID: ARRAY DE DESTINO NODAL (ID).", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETID];\)\[IndentingNewLine] (***********************************************) \
\[IndentingNewLine] (*\ 
      CONSTRUCCION\ DEL\ ARRAY\ DE\ DESTINO\ NODAL\ \((ID)\)*) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (***********************************************) \), "\
\[IndentingNewLine]", 
    \(SETID[BCMAXND_Integer, 
        NDMAX_Integer] := \[IndentingNewLine]Module[{n, i, j, k, NEQ, 
          NodeID}, \[IndentingNewLine] (*\ 
          N\[Degree]FILA\ \(nd : 
              NODO\ GLOBAL\)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine] (*\ 
          N\[Degree]COLUMNA\ \(k : \ 
              N\[Degree]GL\ LOCAL\)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ *) \[IndentingNewLine] (*\ 
          NodeID[\([nd, k]\)] : \ 
            N\[Degree]GL\ GLOBAL\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine] (*\ 
          JointID[\([nd, 
                DOF]\)] = \(0\  = \(\(>\)\(\ \)\(DOF\ RESTRINGIDO\)\)\)\ \ \ \
\ \ \ \ \ \ *) \[IndentingNewLine] (*\ 
          JointID[\([nd, 
                DOF]\)] = \(1\  = \(\(>\)\(\ \)\(DOF\ LIBRE\ \((\(+NEQ\))\)\)\
\)\)\ \ \ \ \ \ \ \ *) \[IndentingNewLine]Options[
            SETID] = \ {}; \[IndentingNewLine]\[IndentingNewLine]NDOF = 
          3; \[IndentingNewLine]NodeID = 
          ZeroMatrix[NDOF, NDMAX]; \[IndentingNewLine]NEQ = 
          0; \[IndentingNewLine]For[n = 1, 
          n \[LessEqual] 
            BCMAXND, \(n++\), \[IndentingNewLine]\(For[k = 1, 
              k \[LessEqual] 
                NDOF, \(k++\), \[IndentingNewLine]\(NodeID[\([k, n]\)] = 
                  JointID[\([n, 
                      k]\)];\)\[IndentingNewLine]];\)\[IndentingNewLine]]; \
\[IndentingNewLine]For[i = 1, 
          i \[LessEqual] 
            NDMAX, \(i++\), \[IndentingNewLine]\(For[k = 1, 
              k \[LessEqual] 
                NDOF, \(k++\), \[IndentingNewLine]\(If[
                  NodeID[\([k, i]\)] \[Equal] 
                    0, \[IndentingNewLine]\(NEQ++\); \
\[IndentingNewLine]NodeID[\([k, i]\)] = 
                    NEQ;\[IndentingNewLine], \
\[IndentingNewLine]\(NodeID[\([k, i]\)] = 
                      0;\)\[IndentingNewLine]];\)\[IndentingNewLine]];\)\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine]Return[
          NodeID];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["SETLM: ARRAY DE DESTINO ELEMENTAL (LM).", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETLM];\)\[IndentingNewLine] (****************************************************) \
\[IndentingNewLine] (*\ 
      CONSTRUCCION\ DEL\ ARRAY\ DE\ DESTINO\ ELEMENTAL\  - \ 
        LM\ *) \[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] \
(*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)*******************) \), "\[IndentingNewLine]", 
    \(SETLM[
        ELMAX_Integer] := \[IndentingNewLine]Module[{e, k, i, j, ElementDOF, 
          ElementLM}, \[IndentingNewLine]Options[
            SETLM] = \ {}; \[IndentingNewLine] (*\ 
          N\[Degree]FILA\ \(nd : \ 
              N\[Degree]\ ELEMENTO\)\ \ \ *) \[IndentingNewLine] (*\ 
          N\[Degree]COLUMNA\ \(k : \ 
              N\[Degree]GL\ LOCAL\)\ \ *) \[IndentingNewLine] (*\ 
          NodeLM[\([e, k]\)] : \ 
            N\[Degree]GL\ GLOBAL\ \
*) \[IndentingNewLine]\[IndentingNewLine]NNOD = 2; 
        NDOF = 3; \[IndentingNewLine]Clear[
          ElementLM]; \[IndentingNewLine]ElementDOF = 
          Table[0, {NNOD*NDOF}]; \[IndentingNewLine]ElementLM = 
          Table[ElementDOF, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]{i, j} = 
            ElementCN[\([e]\)]; \[IndentingNewLine]For[k = 1, 
            k \[LessEqual] 
              NDOF, \(k++\), \[IndentingNewLine]ElementLM[\([e, k]\)] = 
              NodeID[\([k, i]\)]; \[IndentingNewLine]ElementLM[\([e, 
                  k + NDOF]\)] = 
              NodeID[\([k, 
                  j]\)];\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          ElementLM];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["SETINTBL: ALGORITMOS DE INTEGRACION", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        SETINTBL];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      TABLAS\ DE\ INTEGRACION\ DEL\ ELEMENTO\ Y\ LA\ SECCION*) \
\[IndentingNewLine] (*\ 
      VERSION : \ \(07/11\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(SETINTBL[ELMAX_Integer\ , ElementTable_, Opciones___] := 
      Module[{IntegrationTable, ElementIntegrationTable, 
          SectionIntegrationTable, MCODE, SCODE, NGP, NFC, 
          NFS}, \[IndentingNewLine]Options[
            SETINTBL] = \ {ElementQuadrature \[Rule] \ Gauss, 
            SectionQuadrature \[Rule] \ 
              Newton, \[IndentingNewLine]ElementType \[Rule] \ Closed\ , 
            SectionType \[Rule] \ 
              Closed}; \[IndentingNewLine]EQUAD = \ \(ElementQuadrature\  \
/. \ {Opciones}\)\  /. 
            Options[SETINTBL]; \[IndentingNewLine]ETYPE = \ \(ElementType\  \
/. \ {Opciones}\)\  /. 
            Options[SETINTBL]; \[IndentingNewLine]SQUAD = \ \
\(SectionQuadrature\  /. \ {Opciones}\)\  /. 
            Options[SETINTBL]; \[IndentingNewLine]STYPE = \ \(SectionType\  \
/. \ {Opciones}\)\  /. 
            Options[SETINTBL]; \
\[IndentingNewLine]\[IndentingNewLine]IntegrationTable = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{MCODE, SCODE, NGP, NFC, 
              NFS} = ElementTable[\([e]\)]; \
\[IndentingNewLine]ElementIntegrationTable = 
            SETQUAD[NGP\ , {\(-1\), 1}, Quadrature \[Rule] \ EQUAD, 
              Type \[Rule] \ 
                ETYPE]; \[IndentingNewLine]SectionIntegrationTable = 
            SETQUAD[NFC\ , {\(-1\), 1}, Quadrature \[Rule] \ SQUAD, 
              Type \[Rule] \ 
                STYPE]; \[IndentingNewLine]IntegrationTable[\([e]\)] = \
{ElementIntegrationTable, 
              SectionIntegrationTable};\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          IntegrationTable]\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETQUAD];\)\[IndentingNewLine] (*\(\(**\)\(**\)\) **  ** \(\(*\)\(\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\)\(*\)\(\(**\)\(**\)\(\
**\)\(**\)\(**\)\)\)*****) \[IndentingNewLine] (*\ 
      DETERMINACION\ DE\ LOS\ PUNTOS\ DE\ INTEGRACION\ \ \ \ \ *) \
\[IndentingNewLine] (*\ PARA\ ESQUEMA\ DE\ NEWTON, \ 
      GAUSS\ Y\ LOBATTO\ \ *) \[IndentingNewLine] (*\ 
      VERSION : \ \(30/04\)/
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (********************************************) \), "\n", 
    \(SETQUAD[n_Integer\  /; \ n > 1, {a_, b_}, 
        Opciones___] := \[IndentingNewLine]Module[{QUAD, TYPE, RK, WK, 
          NK}, \[IndentingNewLine]Options[
            SETQUAD] = \ {Quadrature \[Rule] \ Gauss, 
            Type \[Rule] \ 
              Closed\ }; \[IndentingNewLine]QUAD = \ \(Quadrature\  /. \ \
{Opciones}\)\  /. 
            Options[SETQUAD]; \[IndentingNewLine]TYPE = \ \(Type\  /. \ \
{Opciones}\)\  /. Options[SETQUAD]; \[IndentingNewLine]Clear[NK, RK, 
          WK]; \[IndentingNewLine]NK = n; \[IndentingNewLine]If[
          QUAD \[Equal] Gauss && 
            TYPE \[Equal] Closed, \[IndentingNewLine] (*\ 
            ALGORITMO\ DE\ GAUSS - LOBATTO\ *) \[IndentingNewLine]{RK, WK} = 
            Transpose[
              LobattoQuadratureWeights[n, a, 
                b]]; \[IndentingNewLine]Return[{RK, 
              WK}];\[IndentingNewLine]]; \[IndentingNewLine]If[
          QUAD \[Equal] Gauss && TYPE \[Equal] Open, \[IndentingNewLine] (*\ 
            ALGORITMO\ DE\ GAUSS - LEGENDRE\ *) \[IndentingNewLine]{RK, WK} = 
            Transpose[
              GaussianQuadratureWeights[n, a, 
                b]]; \[IndentingNewLine]Return[{RK, 
              WK}];\[IndentingNewLine]]; \[IndentingNewLine]If[
          QUAD \[Equal] Newton && 
            TYPE \[Equal] Closed, \[IndentingNewLine] (*\ 
            ALGORITMO\ DE\ NEWTON - COTES\ CERRADO*) \[IndentingNewLine]{RK, 
              WK} = Transpose[
              NewtonCotesWeights[n, a, b]]; \[IndentingNewLine]Return[{RK, 
              WK}];\[IndentingNewLine]]; \[IndentingNewLine]If[
          QUAD \[Equal] Newton && TYPE \[Equal] Open, \[IndentingNewLine] (*\ 
            ALGORITMO\ DE\ NEWTON - 
              COTES\ ABIERTO\ *) \[IndentingNewLine]{RK, WK} = 
            Transpose[NewtonCotesWeights[n, a, b], 
              QuadratureType \[Rule] Open]; \[IndentingNewLine]Return[{RK, 
              WK}];\[IndentingNewLine]];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETPROP: 
GENERADOR DE PROPIEDADES DEL ELEMENTO (ElementTable)\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETPROP];\)\[IndentingNewLine] (*************************************) \
\[IndentingNewLine] (*\ 
      ARRAY\ DE\ DISCRETIZACION\ ELEMENTAL\ *) \[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine] (*************************************) \
\), "\[IndentingNewLine]", 
    \(SETPROP[BCMAXEL_Integer, ELMAX_Integer, BeamTable_] := 
      Module[{BC, NEL, NT, NTMAX, e, MCODE, SCODE, NGP, NFC, NFS, 
          ElementTable}, \[IndentingNewLine]Options[
            SETPROP] = \ {}; \
\[IndentingNewLine]\[IndentingNewLine]ElementTable = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[BC = 1, 
          BC \[LessEqual] \ BCMAXEL, \(BC++\), \[IndentingNewLine]NTMAX = 
            BeamTable[\([BC, 1]\)]; \[IndentingNewLine]MCODE = 
            BeamTable[\([BC, 2]\)]; \[IndentingNewLine]For[NT = 1, 
            NT \[LessEqual] 
              NTMAX, \(NT++\), \[IndentingNewLine]{NEL, \[Alpha]L, SCODE, 
                NGP, NFC, {emin, emax}} = 
              BeamTable[\([BC, 4, NT]\)]; \[IndentingNewLine]NFS = 
              SectionTable[\([SCODE, 2, 1]\)]; \[IndentingNewLine]For[
              e = emin, 
              e \[LessEqual] 
                emax, \(e++\), \[IndentingNewLine]\(ElementTable[\([e]\)] = \
{MCODE, SCODE, NGP, NFC, 
                    NFS};\)\[IndentingNewLine]];\[IndentingNewLine]];\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine]Return[
          ElementTable];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
STATESECTION:
ESTABLECER ESTADO DE LA SECCION {\[CurlyEpsilon],\[CurlyKappa]}\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        STATESECTION];\)\[IndentingNewLine] (*********************************************************) \
\[IndentingNewLine] (*\ 
      DETERMINACION\ INCREMENTO\ DE\ DEFORMACION\ DE\ LA\ SECCION\ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ \(14/09\)/
          2002\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ *) \[IndentingNewLine] (*********************************************************) \
\), "\[IndentingNewLine]", 
    \(STATESECTION[
        ELMAX_Integer, {\[CapitalDelta]UR_, \
\[CapitalDelta]U\[CapitalDelta]_}, 
        ShapeFunctions_] := \[IndentingNewLine]Module[{S, e, s, f, 
          NGP, \[Epsilon]m, \[CurlyKappa]m, \[Gamma]m, \[Phi]o, Ui, 
          Wi, \[Theta]i, Uj, Wj, \[Theta]j, u, 
          w, \[CapitalDelta]u3, \[IndentingNewLine]bu, bu\[CapitalDelta]u3, 
          bw, bw\[CapitalDelta]u3, b\[Theta], b\[Theta]\[CapitalDelta]u3, hu, 
          hu\[CapitalDelta]u3, hw, hw\[CapitalDelta]u3, h\[Theta], 
          h\[Theta]\[CapitalDelta]u3, h\[Gamma], h\[Gamma]\[CapitalDelta]u3, 
          h\[Chi], 
          h\[Chi]\[CapitalDelta]u3}, \[IndentingNewLine]Options[
            STATESECTION] = \ {}; \[IndentingNewLine]S = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]NGP = 
            ElementTable[\([e, 3]\)]; \[IndentingNewLine]S[\([e]\)] = 
            Table[{0}, {NGP}]; \[IndentingNewLine]{{Ui}, {Uj}, {Wi}, {Wj}, {\
\[Theta]i}, {\[Theta]j}} = \[CapitalDelta]UR[\([e]\)]; \[IndentingNewLine]u = \
{{Ui}, {Uj}}; \[IndentingNewLine]w = {{Wi}, {Wj}, {\[Theta]i}, {\[Theta]j}}; \
\[IndentingNewLine]\[CapitalDelta]u3 = \
\[CapitalDelta]U\[CapitalDelta][\([e]\)]; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{bu, bu\[CapitalDelta]u3, bw, 
                bw\[CapitalDelta]u3, b\[Theta], b\[Theta]\[CapitalDelta]u3} = 
              ShapeFunctions[\([e, s, 1]\)]; \[IndentingNewLine]{hu, 
                hu\[CapitalDelta]u3, hw, hw\[CapitalDelta]u3, h\[Theta], 
                h\[Theta]\[CapitalDelta]u3, h\[Gamma], 
                h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
                h\[Chi]\[CapitalDelta]u3} = 
              ShapeFunctions[\([e, s, 2]\)]; \[IndentingNewLine]\[Epsilon]m = 
              REAL[TR[bu] . u + 
                  bu\[CapitalDelta]u3 . \[CapitalDelta]u3]; \
\[IndentingNewLine]\[CurlyKappa]m = 
              REAL[TR[h\[Chi]] . w + 
                  h\[Chi]\[CapitalDelta]u3 . \[CapitalDelta]u3]; \
\[IndentingNewLine]\[Gamma]m = 
              REAL[TR[h\[Gamma]] . w + 
                  h\[Gamma]\[CapitalDelta]u3 . \[CapitalDelta]u3]; \
\[IndentingNewLine]If[
              HIGH, \[IndentingNewLine] (*\ 
                CALCULAR\ DERIVADA\ DEL\ DESPLAZAMIENTO\ \
*) \[IndentingNewLine]\[Phi]o = 
                REAL[TR[bw] . w + 
                    bw\[CapitalDelta]u3*\[CapitalDelta]u3]; \
\[IndentingNewLine]\[Epsilon]m += \((1/
                      2)\)*\[Phi]o^2;\[IndentingNewLine]]; \
\[IndentingNewLine]\(S[\([e, 
                    s]\)] = {\[Epsilon]m, \[CurlyKappa]m, \[Gamma]m};\)\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]Return[S];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETSTAS: FiberEvent[n], SectionStiffness[n]
ACTUALIZAR PARAMETROS DE ESTADO SECCION\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        SETSTAS];\)\[IndentingNewLine] (************************************************) \
\[IndentingNewLine] (*\ 
      ESTABLECER\ NUEVO\ ESTADO\ DE\ DEFORMACION\ FIBRAS*) \
\[IndentingNewLine] (*\ 
      VERSION\ 23 - 11 - 
        03\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (************************************************) \), "\
\[IndentingNewLine]", 
    \(SETSTAS[ELMAX_Integer, ElementTable_, 
        FiberState_, \[CapitalDelta]S_] \
:= \[IndentingNewLine]Module[{FiberEvent, SectionStiffness, EVFIDX, EVFMIN, 
          REVERSE = False, 
          StiffnessConcrete, \[IndentingNewLine]StiffnessSteel, e, s, f, 
          MCODE, SCODE, NGP, NFC, NFS, ACTIVE, \[IndentingNewLine]Geometry, 
          Reinforcement, Steel, 
          ConfinateConcrete, \[Zeta], \[Psi], \[Epsilon], \[Epsilon]y, \
\[Epsilon]o, \[Epsilon]p, \[Alpha], \[Sigma], Eo, 
          Go, \[IndentingNewLine]\[CapitalDelta]\[Epsilon], \[CapitalDelta]\
\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\[Gamma]m, \
\[CapitalDelta]\[Epsilon]max, EA, EX, EJ, GA, \[Nu]CC = 0.16, \[Nu]ST = 0.23, 
          hk, bk, zs, zc, As}, \[IndentingNewLine] (*\ 
          INICIALIZAR\ ARRAY\ *) \[IndentingNewLine]SectionStiffness = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]EVFIDX = {0, 0, 0, 
            0}; \[IndentingNewLine]EVFMIN = \(+\[Infinity]\); \
\[IndentingNewLine]REVERSE = False; \[IndentingNewLine]\[IndentingNewLine]For[
          e = 1, e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{Geometry, Reinforcement, 
              Steel, ConfinateConcrete} = 
            GETPROP[e]; \[IndentingNewLine]{MCODE, SCODE, NGP, NFC, NFS} = 
            ElementTable[\([e]\)]; \
\[IndentingNewLine]SectionStiffness[\([e]\)] = 
            Table[{0}, {NGP}]; \[IndentingNewLine]EA =. ; EX =. ; EJ =. ; 
          GA =. ; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            DETERMINAR\ COORDENADAS\ DE\ INTEGRACION\ *) \[IndentingNewLine]{\
\[Zeta], \[Psi]} = IntegrationTable[\([e, 2]\)]; \[IndentingNewLine] (*\ 
            LEER\ DATOS\ DE\ LA\ SECCION\ \
*) \[IndentingNewLine]{{\(,\)\(,\)\(,\)}, {\(,\)\(,\)\(,\)\(hk\)\(,\)\(bk\)}} \
= Geometry; \[IndentingNewLine]{\(,\)\(zs\)\(,\)\(As\)\(,\)\(,\)} = 
            Reinforcement; \[IndentingNewLine]\[Epsilon]o = 
            Part[ConfinateConcrete, 3]; \[IndentingNewLine]\[Epsilon]y = 
            Part[Steel, 3]; \[IndentingNewLine]zc = 
            hk/2*\[Zeta]; \[IndentingNewLine]\[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]\[IndentingNewLine]{\
\[CapitalDelta]\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\
\[Gamma]m} = \[CapitalDelta]S[\([e, s]\)]; \[IndentingNewLine]EA = 0; EX = 0; 
            EJ = 0; GA = 0; \[IndentingNewLine]If[
              Not[NOCONCRETE], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] 
                    NFC, \(f++\), \
\[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \((\[CapitalDelta]\[Epsilon]m \
- zc[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m)\); \[IndentingNewLine] (*\ 
                    MODULO\ DE\ CARGA\ FIBRA\ *) \[IndentingNewLine]{\
\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
                    FIBSTIFFCC[FiberState[\([e, s, 1, f]\)], 
                      ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine] (*\ 
                    FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ \
*) \[IndentingNewLine]If[
                    Abs[\[CapitalDelta]\[Epsilon]] > 
                      0. , \(EVF = \[CapitalDelta]\[Epsilon]max/\
\[CapitalDelta]\[Epsilon];\), \(EVF = \(+\[Infinity]\);\)]; \
\[IndentingNewLine]If[EVF < EVFMIN, EVFMIN = EVF; 
                    EVFIDX = {e, s, 1, f};]; \[IndentingNewLine] (*\ 
                    PARAMETROS\ DE\ ESTADO\ EN\ CARGA\ \
*) \[IndentingNewLine]EA += 
                    bk*hk/2*\[Psi][\([f]\)]*Eo; \[IndentingNewLine]EX += 
                    bk*\((hk^2)\)/4*\[Psi][\([f]\)]*\[Zeta][\([f]\)]*
                      Eo; \[IndentingNewLine]EJ += 
                    bk*\((hk^3)\)/8*\((\[Zeta][\([f]\)])\)^2*\[Psi][\([f]\)]*
                      Eo; \[IndentingNewLine]GA += 
                    bk*\((hk/2)\)*\[Psi][\([f]\)]*
                      Go;\[IndentingNewLine]\[IndentingNewLine]];\) (*\ 
                END\ FOR\ *) \[IndentingNewLine]];  (*\ 
              END\ IF\ *) \[IndentingNewLine]\[IndentingNewLine]If[
              Not[NOSTEEL], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] 
                    NFS, \(f++\), \
\[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \((\[CapitalDelta]\[Epsilon]m \
- zs[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m)\); \[IndentingNewLine] (*\ 
                    MODULO\ DE\ CARGA\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]{\
\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
                    FIBSTIFFST[FiberState[\([e, s, 2, f]\)], 
                      Steel, \[CapitalDelta]\[Epsilon]]; \[IndentingNewLine] \
(*\ FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]If[
                    Abs[\[CapitalDelta]\[Epsilon]] > 
                      0. , \(EVF = \[CapitalDelta]\[Epsilon]max/\
\[CapitalDelta]\[Epsilon];\), \(EVF = \(+\[Infinity]\);\)]; \
\[IndentingNewLine]If[EVF < EVFMIN, EVFMIN = EVF; 
                    EVFIDX = {e, s, 2, f};]; \[IndentingNewLine] (*\ 
                    PARAMETROS\ DE\ ESTADO\ EN\ CARGA\ \
*) \[IndentingNewLine]EA += As[\([f]\)]*Eo; \[IndentingNewLine]EX += 
                    As[\([f]\)]*zs[\([f]\)]*Eo; \[IndentingNewLine]EJ += 
                    As[\([f]\)]*zs[\([f]\)]^2*Eo; \[IndentingNewLine]GA += 
                    As[\([f]\)]*
                      Go;\[IndentingNewLine]\[IndentingNewLine]];\) (*\ 
                END\ FOR\ *) \[IndentingNewLine]];  (*\ 
              END\ IF\ \
*) \[IndentingNewLine]\[IndentingNewLine]\(SectionStiffness[\([e, s]\)] = 
                Chop[{EA, EX, EJ, GA}, CTOL];\)\[IndentingNewLine]];  (*\ 
            END\ FOR\ *) \[IndentingNewLine]];  (*\ 
          END\ FOR\ *) \[IndentingNewLine] (*\ 
          VERIFICAR\ INVERSION\ DE\ CARGAS\ *) \[IndentingNewLine]If[
          EVFMIN < 0, REVERSE = True]; \[IndentingNewLine]If[
          EVFIDX == {0, 0, 0, 0} || 
            EVFMIN == \(+\[Infinity]\), \[IndentingNewLine]\(PRINT["\<+++ \
WARNING: EVFIDX={0,0,0,0} OR EVFMIN=+\[Infinity].\>"];\)\[IndentingNewLine]]; \
\[IndentingNewLine]FiberEvent = {EVFIDX, 
            REVERSE}; \[IndentingNewLine]Return[{FiberEvent, 
            SectionStiffness}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETSHAPE: 
ESTABLECER FUNCIONES DE FORMA. \
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETSHAPE];\)\[IndentingNewLine] (*\(\(\(**\)\(**\)\) **  **  **  **  **  \
**  **  **  **  **  **  **  **  **  ** \)\(*\)*****) \[IndentingNewLine] (*\ 
      GENERAR\ TABLA\ DE\ FUNCIONES\ DE\ FORMA\ \ \ *) \[IndentingNewLine] \
(*\ VERSION : \ \(08/11\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine] (*****************************************) \
\), "\[IndentingNewLine]", 
    \(SETSHAPE[ELMAX_Integer, SectionStiffness_, NodeX_, 
        Opciones___] := \[IndentingNewLine]Module[{e, r, s, \[Omega], \[Xi], 
          L, NGP, EA, EX, EJ, GA, ShapeFunctions, ShapeSet, 
          Shear}, \[IndentingNewLine]Options[
            SETSHAPE] = \ {ShearInterpolation -> 
              False}; \[IndentingNewLine]Shear = \ \(ShearInterpolation\  \
/. \ {Opciones}\)\  /. Options[SETSHAPE]; \[IndentingNewLine]ShapeFunctions = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]NGP = 
            ElementTable[\([e, 3]\)]; \[IndentingNewLine]ShapeSet = 
            Table[{0}, {NGP}]; \[IndentingNewLine] (*\ 
            Tabla\ de\ Puntos\ de\ Gauss\ del\ Elemento\ \
*) \[IndentingNewLine]{\[Xi], \[Omega]} = 
            IntegrationTable[\([e, 1]\)]; \[IndentingNewLine]L = 
            GETL[e, NodeX]; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]r = \[Xi][\([s]\)]; \
\[IndentingNewLine]{EA, EX, EJ, GA} = 
              SectionStiffness[\([e, 
                  s]\)]; \[IndentingNewLine]ShapeSet[\([s]\)] = 
              GETSHAPE[{r, L}, {EA, EX, EJ, GA}, 
                ShearInterpolation \[Rule] 
                  Shear];\[IndentingNewLine]]; \
\[IndentingNewLine]ShapeFunctions[\([e]\)] = 
            Chop[ShapeSet, 
              CTOL];\[IndentingNewLine]]; \[IndentingNewLine]Return[
          ShapeFunctions];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
SETSTAF: FiberState[n]
ACTUALIZAR ESTADO DE DEFORMACION FIBRAS\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        SETSTAF];\)\[IndentingNewLine] (*******************************************) \
\[IndentingNewLine] (*\ 
      ACTUALIZAR\ ESTADO\ DE\ DEFORMACION\ FIBRAS\ *) \[IndentingNewLine] (*\ 
      VERSION : \ 
        09 - 11 - 
          03\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*******************************************) \), "\
\[IndentingNewLine]", 
    \(SETSTAF[ELMAX_Integer, 
        FiberStateOLD_, \[CapitalDelta]S_] := \[IndentingNewLine]Module[{e, 
          s, f, FiberState, StateConcrete, StateSteel, Geometry, 
          Reinforcement, Steel, ConfinateConcrete, NGP, NFC, 
          NFS, \[Zeta], \[Psi], hk, bk, zs, As, 
          zc, \[CapitalDelta]\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \
\[CapitalDelta]\[Gamma]m, \[CapitalDelta]\[Epsilon]}, \
\[IndentingNewLine]FiberState =. ; \[IndentingNewLine]StateConcrete =. ; \
\[IndentingNewLine]StateSteel =. ; \[IndentingNewLine] (*\ 
          INICIALIZAR\ ARRAYS\ *) \[IndentingNewLine]FiberState = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{Geometry, Reinforcement, 
              Steel, ConfinateConcrete} = 
            GETPROP[e]; \
\[IndentingNewLine]{\(,\)\(,\)\(NGP\)\(,\)\(NFC\)\(,\)\(NFS\)} = 
            ElementTable[\([e]\)]; \[IndentingNewLine] (*\ 
            INICIALIZAR\ ARRAY\ *) \[IndentingNewLine]StateConcrete = 
            Table[{0}, {NFC}]; \[IndentingNewLine]StateSteel = 
            Table[{0}, {NFS}]; \[IndentingNewLine]FiberState[\([e]\)] = 
            Table[{StateConcrete, 
                StateSteel}, {NGP}]; \[IndentingNewLine] (*\ 
            DETERMINAR\ COORDENADAS\ DE\ INTEGRACION\ *) \[IndentingNewLine]{\
\[Zeta], \[Psi]} = IntegrationTable[\([e, 2]\)]; \[IndentingNewLine] (*\ 
            LEER\ DATOS\ DE\ LA\ SECCION\ \
*) \[IndentingNewLine]{{\(,\)\(,\)\(,\)}, {\(,\)\(,\)\(,\)\(hk\)\(,\)\(bk\)}} \
= Geometry; \[IndentingNewLine]{\(,\)\(zs\)\(,\)\(As\)\(,\)\(,\)} = 
            Reinforcement; \[IndentingNewLine]zc = 
            hk/2*\[Zeta]; \[IndentingNewLine]\[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]m, \
\[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\[Gamma]m} = \
\[CapitalDelta]S[\([e, 
                  s]\)]; \[IndentingNewLine] (*\(**\)\(**\)\(**\)\(**\)\(**\)\
*****************************) \[IndentingNewLine] (*\ 
              ACTUALIZAR\ ESTADO\ FIBRAS\ DE\ HORMIGON\ \
*) \[IndentingNewLine]If[
              Not[NOCONCRETE], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] 
                    NFC, \(f++\), \
\[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \((\[CapitalDelta]\[Epsilon]m \
- zc[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m)\); \
\[IndentingNewLine]StateConcrete[\([f]\)] = 
                    RMACC[FiberStateOLD[\([e, s, 1, f]\)], 
                      ConfinateConcrete, \[CapitalDelta]\[Epsilon]];\
\[IndentingNewLine]];\) (*END\ FOR*) \[IndentingNewLine], \[IndentingNewLine]\
\(StateConcrete = 
                  FiberStateOLD[\([e, s, 
                      1]\)];\)\[IndentingNewLine]];  (*END\ IF\
*) \[IndentingNewLine] \
(*************************************) \[IndentingNewLine] (*\ 
              ACTUALIZAR\ ESTADO\ FIBRAS\ DE\ ACERO\ *) \[IndentingNewLine]If[
              Not[NOSTEEL], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] 
                    NFS, \(f++\), \
\[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \((\[CapitalDelta]\[Epsilon]m \
- zs[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m)\); \
\[IndentingNewLine]StateSteel[\([f]\)] = 
                    RMAST[FiberStateOLD[\([e, s, 2, f]\)], 
                      Steel, \[CapitalDelta]\[Epsilon]];\[IndentingNewLine]];\
\) (*END\ FOR*) \[IndentingNewLine], \[IndentingNewLine]\(StateSteel = 
                  FiberStateOLD[\([e, s, 
                      2]\)];\)\[IndentingNewLine]];  (*END\ IF\
*) \[IndentingNewLine]FiberState[\([e, s]\)] = {StateConcrete, 
                StateSteel};\[IndentingNewLine]];  (*END\ FOR\ s\
*) \[IndentingNewLine]];  (*END\ FOR\ e*) \[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]Return[
          FiberState];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SET\[CapitalDelta]Q:
CALCULAR INCREMENTO DE ESFUERZOS INTERNOS DE LA SECCION \
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        SET\[CapitalDelta]Q];\)\[IndentingNewLine] (*********************************************************) \
\[IndentingNewLine] (*\ 
      CALCULAR\ INCREMENTO\ DE\ FUERZAS\ INTERNAS\ DE\ LA\ SECCION\ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ \(17/11\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ *) \[IndentingNewLine] (*********************************************************) \
\), "\[IndentingNewLine]", 
    \(SET\[CapitalDelta]Q[ELMAX_Integer, 
        SectionStiffness_, \[CapitalDelta]S_] := \[IndentingNewLine]Module[{\
\[CapitalDelta]Q, e, s, NGP, NFC, NFS, EA, EX, EJ, 
          GA, \[CapitalDelta]\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \
\[CapitalDelta]\[Gamma]m, \[CapitalDelta]No, \[CapitalDelta]Mo, \
\[CapitalDelta]Qo}, \[IndentingNewLine]Options[
            SET\[CapitalDelta]Q] = \ {}; \[IndentingNewLine]\
\[IndentingNewLine]\[CapitalDelta]Q = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{\(,\)\(,\)\(NGP\)\(,\)\(NFC\)\
\(,\)\(NFS\)} = 
            ElementTable[\([e]\)]; \
\[IndentingNewLine]\[CapitalDelta]Q[\([e]\)] = 
            Table[{0}, {NGP}]; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]m, \
\[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\[Gamma]m} = \
\[CapitalDelta]S[\([e, s]\)]; \[IndentingNewLine]{EA, EX, EJ, GA} = 
              SectionStiffness[\([e, 
                  s]\)]; \[IndentingNewLine]\[CapitalDelta]No = 
              EA*\[CapitalDelta]\[Epsilon]m - 
                EX*\[CapitalDelta]\[CurlyKappa]m; \[IndentingNewLine]\
\[CapitalDelta]Mo = \(-EX\)*\[CapitalDelta]\[Epsilon]m + 
                EJ*\[CapitalDelta]\[CurlyKappa]m; \[IndentingNewLine]\
\[CapitalDelta]Qo = 
              GA*\[CapitalDelta]\[Gamma]m; \
\[IndentingNewLine]\[CapitalDelta]Q[\([e, 
                  s]\)] = {\[CapitalDelta]No, \[CapitalDelta]Mo, \
\[CapitalDelta]Qo};\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]Return[\[CapitalDelta]Q];\[IndentingNewLine]]\)}], "Input",\

  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETQ:
CALCULAR RESULTANTE DE ESFUERZOS INTERNOS DE LA SECCION \
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        SETQ];\)\[IndentingNewLine] (*************************************************) \
\[IndentingNewLine] (*\ 
      CALCULAR\ FUERZAS\ INTERNAS\ DE\ LA\ SECCION\ {N, 
          M}\ *) \[IndentingNewLine] (*\ 
      VERSION\ 17 - 11 - 
        03\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*************************************************) \), "\
\[IndentingNewLine]", 
    \(SETQ[ELMAX_Integer, FiberState_, 
        S_] := \[IndentingNewLine]Module[{Q, e, s, f, Geometry, 
          Reinforcement, Steel, ConfinateConcrete, \[IndentingNewLine]NGP, 
          NFC, NFS, hk, bk, zs, As, \[Zeta], \[Psi], \[Sigma], \[Tau], No, 
          Mo, Qo, \[Gamma]m, Gc, 
          Gs}, \[IndentingNewLine]\[IndentingNewLine] (*\ 
          INICIALIZAR\ ARRAY\ *) \[IndentingNewLine]Q = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{\(,\)\(,\)\(NGP\)\(,\)\(NFC\)\
\(,\)\(NFS\)} = 
            ElementTable[\([e]\)]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ ARRAY\ *) \[IndentingNewLine]Q[\([e]\)] = 
            Table[{0}, {NGP}]; \[IndentingNewLine]{Geometry, Reinforcement, 
              Steel, ConfinateConcrete} = 
            GETPROP[e]; \
\[IndentingNewLine]{\(,\)\({\(,\)\(,\)\(,\)\(hk\)\(,\)\(bk\)}\)} = 
            Geometry; \[IndentingNewLine]{\(,\)\(zs\)\(,\)\(As\)\(,\)\(,\)} = 
            Reinforcement; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            DETERMINAR\ COORDENADAS\ DE\ INTEGRACION\ *) \[IndentingNewLine]{\
\[Zeta], \[Psi]} = IntegrationTable[\([e, 2]\)]; \[IndentingNewLine]For[
            s = 1, s \[LessEqual] NGP, \(s++\), \[IndentingNewLine]No = 0; 
            Mo = 0; Qo = 0; \[IndentingNewLine] (*\ 
              Debido\ a\ que\ PROVISORIAMENTE\ el\ algoritmo\ de\ retorno\ no\
\ *) \[IndentingNewLine] (*\ 
              calcula\ \[Tau]\ por\ ser\ lineal\ a\[UAcute]n, \ 
              este\ se\ determina\ *) \[IndentingNewLine] (*\ 
              a\ partir\ del\ estado\ de\ deformacion\ S\ de\ la\ seccion\ \
*) \[IndentingNewLine] (*\ 
              Cuando\ el\ AR\ calcule\ \[Tau]\ no\ ser\[AAcute]\ necesario\ \
ingresar\ S\ \
*) \[IndentingNewLine]\[IndentingNewLine]{\(,\)\(,\)\(\[Gamma]m\)} = 
              S[\([e, s]\)]; \[IndentingNewLine] (*\(**\)\(**\)\(**\)\
**********************************) \[IndentingNewLine] (*\ 
              DETERMINAR\ FUERZAS\ FIBRAS\ DE\ HORMIGON\ \
*) \[IndentingNewLine]If[
              Not[NOCONCRETE], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] 
                    NFC, \(f++\), \[IndentingNewLine]\[Sigma] =. ; \[Tau] \
=. ; \[IndentingNewLine]{\(,\)\(,\)\(,\)\(,\)\(\[Sigma]\)\(,\)\(,\)\(Gc\)} = 
                    FiberState[\([e, s, 1, f]\)]; \[IndentingNewLine]\[Tau] = 
                    Gc*\[Gamma]m; \[IndentingNewLine]No += 
                    bk*hk/2*\[Sigma]*\[Psi][\([f]\)]; \[IndentingNewLine]Mo += \
\(-\((bk*\((hk^2)\)/
                            4*\[Sigma]*\[Psi][\([f]\)]*\[Zeta][\([f]\)])\)\); \
\[IndentingNewLine]Qo += 
                    bk*\((hk/
                          2)\)*\[Tau]*\[Psi][\([f]\)];\[IndentingNewLine]];\)\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine] \
(**************************************) \[IndentingNewLine] (*\ 
              DETERMINAR\ FUERZAS\ FIBRAS\ DE\ ACERO\ \
*) \[IndentingNewLine]If[
              Not[NOSTEEL], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] 
                    NFS, \(f++\), \[IndentingNewLine]\[Sigma] =. ; \[Tau] \
=. ; \[IndentingNewLine]{\(,\)\(,\)\(,\)\(,\)\(,\)\(\[Sigma]\)\(,\)\(,\)\(Gs\)\
} = FiberState[\([e, s, 2, f]\)]; \[IndentingNewLine]\[Tau] = 
                    Gs*\[Gamma]m; \[IndentingNewLine]No += \[Sigma]*
                      As[\([f]\)]; \[IndentingNewLine]Mo += \(-\((\[Sigma]*
                          As[\([f]\)]*
                          zs[\([f]\)])\)\); \[IndentingNewLine]Qo += \[Tau]*
                      As[\([f]\)];\[IndentingNewLine]];\)\[IndentingNewLine]];\
 \[IndentingNewLine]\(Q[\([e, s]\)] = {No, Mo, 
                  Qo};\)\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]Return[
          Q];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETF:
CALCULAR RESULTANTE DE FUERZAS INTERNAS DEL ELEMENTO. \
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        SETF];\)\[IndentingNewLine] (*\(\(**\)\(**\)\) **  ** \(\(*\)\(\(**\)\
\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\
\)\(*\)\)*****) \[IndentingNewLine] (*\ 
      RESULTANTE\ DE\ FUERZAS\ INTERNAS\  - \ 
        F\ \ \ \ \ \ \ *) \[IndentingNewLine] (*\ 
      VERSION : \ \(17/11\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (********************************************) \), "\
\[IndentingNewLine]", 
    \(SETF[ELMAX_Integer, {UR_, U\[CapitalDelta]_}, ShapeFunctions_, NodeX_, 
        Q_, Opciones___] := \[IndentingNewLine]Module[{fe, fe\[CapitalDelta], 
          L, J, e, \[Xi], \[Psi], NGP, u, w, \[CapitalDelta]u3, Ui, Uj, Wi, 
          Wj, \[Theta]i, \[Theta]j, fu, fw, fu\[CapitalDelta]u3, No, Mo, 
          Qo, \[Phi]o, bu, bu\[CapitalDelta]u3, bw, bw\[CapitalDelta]u3, 
          b\[Theta], b\[Theta]\[CapitalDelta]u3, hu, hu\[CapitalDelta]u3, hw, 
          hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
          h\[Gamma], h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
          h\[Chi]\[CapitalDelta]u3}, \[IndentingNewLine]Options[
            SETF] = \ {}; \[IndentingNewLine]fe = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]fe\[CapitalDelta] = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]{\[Xi], \[Psi]} = 
            IntegrationTable[\([e, 1]\)]; \[IndentingNewLine]NGP = 
            ElementTable[\([e, 3]\)]; \[IndentingNewLine]L = 
            GETL[e, NodeX]; \[IndentingNewLine]J = L/2; \[IndentingNewLine]If[
            HIGH, \[IndentingNewLine] (*\ 
              EXTRAER\ DESPLAZAMIENTOS\ NODALES\ *) \[IndentingNewLine]{{Ui}, \
{Uj}, {Wi}, {Wj}, {\[Theta]i}, {\[Theta]j}} = 
              UR[\([e]\)]; \[IndentingNewLine]u = {{Ui}, {Uj}}; \
\[IndentingNewLine]w = {{Wi}, {Wj}, {\[Theta]i}, {\[Theta]j}}; \
\[IndentingNewLine]\[CapitalDelta]u3 = 
              U\[CapitalDelta][\([e]\)];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ BLOQUES\ ELEMENTALES\ *) \[IndentingNewLine]fu = 0; 
          fu\[CapitalDelta]u3 = 0; 
          fw = 0; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{bu, bu\[CapitalDelta]u3, bw, 
                bw\[CapitalDelta]u3, b\[Theta], b\[Theta]\[CapitalDelta]u3} = 
              ShapeFunctions[\([e, s, 1]\)]; \[IndentingNewLine]{hu, 
                hu\[CapitalDelta]u3, hw, hw\[CapitalDelta]u3, h\[Theta], 
                h\[Theta]\[CapitalDelta]u3, h\[Gamma], 
                h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
                h\[Chi]\[CapitalDelta]u3} = 
              ShapeFunctions[\([e, s, 
                  2]\)]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
              ESFUERZOS\ INTERNOS\ EN\ EL\ PUNTO\ DE\ GAUSS\
*) \[IndentingNewLine]{No, Mo, Qo} = 
              Q[\([e, s]\)]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
              CALCULAR\ LOS\ BLOQUES\ EN\ UN\ PUNTO\ DE\ GAUSS\ \
*) \[IndentingNewLine]fu += J*No*bu*\[Psi][\([s]\)]; \[IndentingNewLine]fw += 
              J*\((Mo*h\[Chi] + 
                    Qo*h\[Gamma])\)*\[Psi][\([s]\)]; \[IndentingNewLine]fu\
\[CapitalDelta]u3 += 
              J \((No*bu\[CapitalDelta]u3 + Mo*h\[Chi]\[CapitalDelta]u3 + 
                    Qo*h\[Gamma]\[CapitalDelta]u3)\)*\[Psi][\([s]\)]; \
\[IndentingNewLine]\[IndentingNewLine]If[
              HIGH, \[IndentingNewLine] (*\ 
                CALCULAR\ DERIVADA\ DEL\ DESPLAZAMIENTO\ EN\ PUNTO\ DE\ GAUSS\
*) \[IndentingNewLine]\[Phi]o = 
                REAL[TR[bw] . w] + 
                  REAL[bw\[CapitalDelta]u3*\[CapitalDelta]u3]; \
\[IndentingNewLine]fw += 
                J*No*\[Phi]o*
                  bw*\[Psi][\([s]\)]; \[IndentingNewLine]fu\[CapitalDelta]u3 += 
                J*No*\[Phi]o*
                  bw\[CapitalDelta]u3*\[Psi][\([s]\)];\[IndentingNewLine]];\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            ARMAR\ BLOQUES\ DEL\ VECTOR\ DE\ CARGAS\ \
*) \[IndentingNewLine]fe[\([e]\)] = 
            Join[fu, fw]; \[IndentingNewLine]\(fe\[CapitalDelta][\([e]\)] = 
              fu\[CapitalDelta]u3;\)\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]Return[{fe, 
            fe\[CapitalDelta]}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SETNODEX: 
ACTUALIZAR COORDENADAS DE LA ESTRUCTURA\
\>", "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        SETNODEX];\)\[IndentingNewLine] (**********************************************) \
\[IndentingNewLine] (*\ 
      ACTUALIZAR\ COORDENADAS\ DE\ LA\ ESTRUCTURA\ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        05 - 04 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**********************************************) \), "\
\[IndentingNewLine]", 
    \(SETNODEX[NDMAX_Integer, \[CapitalDelta]U_?MatrixQ] := 
      Module[{Node\[CapitalDelta]X, Node\[CapitalDelta]U, i, j, k, e, 
          neq, \[CapitalDelta]X, \[CapitalDelta]Y}, \
\[IndentingNewLine]Options[SETNODEX] = \ {}; 
        NDOF = 3; \[IndentingNewLine]\[IndentingNewLine]Node\[CapitalDelta]U \
= ZeroMatrix[NDMAX, NDOF]; \[IndentingNewLine]Node\[CapitalDelta]X = 
          Table[{x = 0, 
              y = 0}, {NDMAX}]; \[IndentingNewLine]\[IndentingNewLine]For[
          i = 1, i \[LessEqual] NDMAX, \(i++\), \[IndentingNewLine]For[k = 1, 
            k \[LessEqual] NDOF, \(k++\), \[IndentingNewLine]neq = 
              NodeID[\([k, i]\)]; \[IndentingNewLine]If[
              neq > 0, \[IndentingNewLine]\(Node\[CapitalDelta]U[\([i, 
                      k]\)] = \[CapitalDelta]U[\([neq, 
                      1]\)];\)\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]{\[CapitalDelta]X, \[CapitalDelta]Y, } = 
            Node\[CapitalDelta]U[\([i]\)]; \[IndentingNewLine]Node\
\[CapitalDelta]X[\([i]\)] = {\[CapitalDelta]X, \[CapitalDelta]Y};\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine]Return[
          Node\[CapitalDelta]X];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
STIFFBLOCKS: 
FORMACION DE BLOQUES DE Kt .  \
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    RowBox[{\(Clear[STIFFBLOCKS];\), 
      "\[IndentingNewLine]", \( (*********************************************) \
\), "\[IndentingNewLine]", \( (*\ 
        FORMACION\ DE\ BLOQUES\ DE\ MATRIZ\ TANGENTE\ \ \ *) \), 
      "\[IndentingNewLine]", \( (*\ 
        VERSION\  : \ 
          17 - 11 - 2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \), 
      "\[IndentingNewLine]", \( (*********************************************) \
\)}], "\[IndentingNewLine]", 
    RowBox[{\(STIFFBLOCKS[ELMAX_Integer, {UR_, U\[CapitalDelta]_}, 
        SectionStiffness_, ShapeFunctions_, NodeX_, Q_]\), ":=", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
        RowBox[{\({e, L, J, u, w, \[CapitalDelta]u3, \[Omega], \[Xi], Ui, 
            Wi, \[Theta]i, Uj, Wj, \[Theta]j, kuu, kuw, ku\[CapitalDelta], 
            kww, kw\[CapitalDelta], 
            k\[CapitalDelta]\[CapitalDelta], \[IndentingNewLine]NGP, s, EA, 
            EX, EJ, GA, fuu, fuw, fu\[CapitalDelta], fww, fw\[CapitalDelta], 
            f\[CapitalDelta]\[CapitalDelta], KRR, KR\[CapitalDelta], 
            K\[CapitalDelta]\[CapitalDelta], \[IndentingNewLine]bu, 
            bu\[CapitalDelta]u3, bw, bw\[CapitalDelta]u3, b\[Theta], 
            b\[Theta]\[CapitalDelta]u3, hu, hu\[CapitalDelta]u3, hw, 
            hw\[CapitalDelta]u3, h\[Theta], h\[Theta]\[CapitalDelta]u3, 
            h\[Gamma], h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
            h\[Chi]\[CapitalDelta]u3, \[Phi]o, No, Mo, Qo}\), ",", 
          "\[IndentingNewLine]", 
          
          RowBox[{\(Options[STIFFB] = \ {}\), ";", 
            "\[IndentingNewLine]", \(KRR = Table[{0}, {ELMAX}]\), ";", 
            "\[IndentingNewLine]", \(KR\[CapitalDelta] = 
              Table[{0}, {ELMAX}]\), ";", 
            "\[IndentingNewLine]", \(K\[CapitalDelta]\[CapitalDelta] = 
              Table[{0}, {ELMAX}]\), ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
              
              RowBox[{\(e = 1\), ",", \(e \[LessEqual] ELMAX\), ",", \(e++\), 
                ",", "\[IndentingNewLine]", 
                
                RowBox[{\({\[Xi], \[Omega]} = IntegrationTable[\([e, 1]\)]\), 
                  ";", "\[IndentingNewLine]", \(L = GETL[e, NodeX]\), ";", 
                  "\[IndentingNewLine]", \(J = L/2\), ";", 
                  "\[IndentingNewLine]", \( (*\ 
                    EXTRAER\ DESPLAZAMIENTOS\ NODALES\ *) \), 
                  "\[IndentingNewLine]", \({{Ui}, {Uj}, {Wi}, {Wj}, \
{\[Theta]i}, {\[Theta]j}} = UR[\([e]\)]\), ";", 
                  "\[IndentingNewLine]", \(u = {{Ui}, {Uj}}\), ";", 
                  "\[IndentingNewLine]", \(w = {{Wi}, {Wj}, {\[Theta]i}, {\
\[Theta]j}}\), ";", 
                  "\[IndentingNewLine]", \(\[CapitalDelta]u3 = 
                    U\[CapitalDelta][\([e]\)]\), ";", 
                  "\[IndentingNewLine]", \( (*\ 
                    INICIALIZAR\ BLOQUES\ ELEMENTALES\ *) \), 
                  "\[IndentingNewLine]", \(kuu = 0\), ";", \(kuw = 0\), 
                  ";", \(ku\[CapitalDelta] = 0\), ";", 
                  "\[IndentingNewLine]", \(kww = 0\), ";", 
                  " ", \(kw\[CapitalDelta] = 0\), 
                  ";", \(k\[CapitalDelta]\[CapitalDelta] = 0\), ";", 
                  "\[IndentingNewLine]", \(NGP = ElementTable[\([e, 3]\)]\), 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                    
                    RowBox[{\(s = 1\), ",", \(s \[LessEqual] NGP\), 
                      ",", \(s++\), ",", 
                      "\[IndentingNewLine]", \( (*\ 
                        PARAMETROS\ DE\ ESTADO\ DEL\ PUNTO\ DE\ GAUSS*) \), 
                      "\[IndentingNewLine]", 
                      
                      RowBox[{\({EA, EX, EJ, GA} = 
                          SectionStiffness[\([e, s]\)]\), ";", 
                        "\[IndentingNewLine]", \({bu, bu\[CapitalDelta]u3, 
                            bw, bw\[CapitalDelta]u3, b\[Theta], 
                            b\[Theta]\[CapitalDelta]u3} = 
                          ShapeFunctions[\([e, s, 1]\)]\), ";", 
                        "\[IndentingNewLine]", \({hu, hu\[CapitalDelta]u3, 
                            hw, hw\[CapitalDelta]u3, h\[Theta], 
                            h\[Theta]\[CapitalDelta]u3, h\[Gamma], 
                            h\[Gamma]\[CapitalDelta]u3, h\[Chi], 
                            h\[Chi]\[CapitalDelta]u3} = 
                          ShapeFunctions[\([e, s, 2]\)]\), ";", 
                        "\[IndentingNewLine]", 
                        "\[IndentingNewLine]", \( (*\ 
                          CALCULAR\ LOS\ BLOQUES\ EN\ UN\ PUNTO\ DE\ GAUSS\
*) \), "\[IndentingNewLine]", \(fuu = EA*bu . TR[bu]\), ";", 
                        StyleBox["\[IndentingNewLine]",
                          FontColor->RGBColor[1, 0, 
                          0]], \(fuw = \(-EX\)*h\[Chi] . TR[bu]\), ";", 
                        StyleBox["\[IndentingNewLine]",
                          FontColor->RGBColor[1, 0, 
                          0]], \(fu\[CapitalDelta] = \((EA*
                                  bu\[CapitalDelta]u3 - 
                                EX*h\[Chi]\[CapitalDelta]u3)\) . TR[bu]\), 
                        ";", 
                        StyleBox["\[IndentingNewLine]",
                          FontColor->RGBColor[1, 0, 0]], \(fww = 
                          EJ*h\[Chi] . TR[h\[Chi]] + 
                            GA*h\[Gamma] . TR[h\[Gamma]]\), ";", 
                        StyleBox["\[IndentingNewLine]",
                          FontColor->RGBColor[1, 0, 
                          0]], \(fw\[CapitalDelta] = \((\(-EX\)*
                                    bu\[CapitalDelta]u3 + 
                                  EJ*h\[Chi]\[CapitalDelta]u3)\) . 
                              TR[h\[Chi]] + 
                            GA*h\[Gamma]\[CapitalDelta]u3 . TR[h\[Gamma]]\), 
                        ";", 
                        StyleBox["\[IndentingNewLine]",
                          FontColor->RGBColor[1, 0, 
                          0]], \(f\[CapitalDelta]\[CapitalDelta] = 
                          EA*\((bu\[CapitalDelta]u3)\)^2 - 
                            2*EX*bu\[CapitalDelta]u3*
                              h\[Chi]\[CapitalDelta]u3 + 
                            EJ*\((h\[Chi]\[CapitalDelta]u3)\)^2 + 
                            GA*\((h\[Gamma]\[CapitalDelta]u3)\)^2\), ";", 
                        StyleBox["\[IndentingNewLine]",
                          FontColor->RGBColor[1, 0, 0]], 
                        "\[IndentingNewLine]", \( (*\ 
                          CALCULAR\ LOS\ BLOQUES\ DE\ TENSIONES\ INICIALES\
*) \), "\[IndentingNewLine]", \({No, Mo, Qo} = Q[\([e, s]\)]\), ";", 
                        "\[IndentingNewLine]", 
                        RowBox[{"If", "[", 
                          
                          RowBox[{\(No \[NotEqual] 0\), ",", 
                            "\[IndentingNewLine]", \( (*\ 
                              fuu += {{0, 0}, {0, 0}}; 
                              fuw += {{0, 0}, {0, 0}, {0, 0}, {0, 0}}; 
                              fu\[CapitalDelta] += {{0, 0}};*) \), 
                            "\[IndentingNewLine]", 
                            RowBox[{
                              StyleBox[\(fww += No*bw . TR[bw]\),
                                FontColor->GrayLevel[0]], 
                              StyleBox[";",
                                FontColor->GrayLevel[0]], 
                              StyleBox["\[IndentingNewLine]",
                                FontColor->RGBColor[1, 0, 
                                0]], \(f\[CapitalDelta]\[CapitalDelta] += 
                                No*bw\[CapitalDelta]u3 . 
                                    bw\[CapitalDelta]u3\), ";", 
                              StyleBox["\[IndentingNewLine]",
                                FontColor->RGBColor[1, 0, 
                                0]], \(fw\[CapitalDelta] += 
                                No*bw\[CapitalDelta]u3 . TR[bw]\), ";"}]}], 
                          "\[IndentingNewLine]", "]"}], ";", 
                        "\[IndentingNewLine]", 
                        RowBox[{"If", "[", 
                          RowBox[{
                          "HIGH", ",", 
                            "\[IndentingNewLine]", \( (*\ 
                              CALCULAR\ DERIVADA\ DEL\ DESPLAZAMIENTO\ *) \), 
                            "\[IndentingNewLine]", 
                            
                            RowBox[{\(\[Phi]o = 
                                REAL[TR[bw] . w + 
                                    bw\[CapitalDelta]u3*\[CapitalDelta]u3]\), 
                              ";", "\[IndentingNewLine]", \( (*\ \(fuu += \
{{0, 0}, {0, 0}};\)*) \), "\[IndentingNewLine]", 
                              StyleBox[\(fuw += EA*\[Phi]o*bw . TR[bu]\),
                                FontColor->GrayLevel[0]], 
                              StyleBox[";",
                                FontColor->GrayLevel[0]], 
                              "\[IndentingNewLine]", \(fu\[CapitalDelta] += 
                                EA*\[Phi]o*bw\[CapitalDelta]u3 . TR[bu]\), 
                              ";", 
                              StyleBox["\[IndentingNewLine]",
                                FontColor->RGBColor[1, 0, 
                                0]], \(fww += \[Phi]o*\((EA*\[Phi]o*
                                        bw . TR[bw] - EX*h\[Chi] . TR[bw] - 
                                      EX*bw . TR[h\[Chi]])\)\), ";", 
                              StyleBox["\[IndentingNewLine]",
                                FontColor->RGBColor[1, 0, 0]], 
                              RowBox[{"fw\[CapitalDelta]", "+=", 
                                RowBox[{"\[Phi]o", "*", 
                                  RowBox[{"(", 
                                    
                                    RowBox[{\(\((EA*\((bu\[CapitalDelta]u3 + \
\[Phi]o*bw\[CapitalDelta]u3)\) - EX*h\[Chi]\[CapitalDelta]u3)\) . TR[bw]\), 
                                      "-", 
                                      
                                      StyleBox[\(EX*
                                        bw\[CapitalDelta]u3 . TR[h\[Chi]]\),
                                        FontColor->GrayLevel[0]]}], 
                                    StyleBox[")",
                                      FontColor->GrayLevel[0]]}]}]}], 
                              StyleBox[";",
                                FontColor->GrayLevel[0]], 
                              StyleBox["\[IndentingNewLine]",
                                FontColor->RGBColor[1, 0, 
                                0]], \(f\[CapitalDelta]\[CapitalDelta] += \
\[Phi]o*\((EA*\((2*bu\[CapitalDelta]u3 + \[Phi]o*bw\[CapitalDelta]u3)\) - 
                                        2*EX*h\[Chi]\[CapitalDelta]u3)\) . 
                                    bw\[CapitalDelta]u3\), ";"}]}], 
                          "\[IndentingNewLine]", "]"}], ";", 
                        "\[IndentingNewLine]", \(kuu += 
                          J*fuu*\[Omega][\([s]\)]\), ";", 
                        "\[IndentingNewLine]", \(kuw += 
                          J*fuw*\[Omega][\([s]\)]\), ";", 
                        "\[IndentingNewLine]", \(ku\[CapitalDelta] += 
                          J*fu\[CapitalDelta]*\[Omega][\([s]\)]\), ";", 
                        "\[IndentingNewLine]", \(kww += 
                          J*fww*\[Omega][\([s]\)]\), ";", 
                        "\[IndentingNewLine]", \(kw\[CapitalDelta] += 
                          J*fw\[CapitalDelta]*\[Omega][\([s]\)]\), ";", 
                        "\[IndentingNewLine]", \(k\[CapitalDelta]\
\[CapitalDelta] += J*f\[CapitalDelta]\[CapitalDelta]*\[Omega][\([s]\)];\)}]}],
                     "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", \(KRR[\([e]\)] = 
                    BlockMatrix[{{kuu, TR[kuw]}, {kuw, kww}}]\), ";", 
                  "\[IndentingNewLine]", \(KR\[CapitalDelta][\([e]\)] = 
                    AppendColumns[TR[ku\[CapitalDelta]], 
                      TR[kw\[CapitalDelta]]]\), ";", 
                  "\[IndentingNewLine]", \
\(K\[CapitalDelta]\[CapitalDelta][\([e]\)] = 
                      k\[CapitalDelta]\[CapitalDelta];\)}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", \(Return[{KRR, KR\[CapitalDelta], 
                K\[CapitalDelta]\[CapitalDelta]}]\), ";"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["URECOVER:\nRECUPERAR DESPLAZAMIENTOS NODALES \
INTERNOS.",
  FontColor->RGBColor[1, 0, 1]]], "Subsection",
  PageWidth->Infinity],

Cell[BoxData[{
    \(\(Clear[
        URECOVER];\)\[IndentingNewLine] (****************************************) \
\[IndentingNewLine] (*\ 
      DETERMINACION\ DE\ ESTADO\ DEL\ ELEMENTO\ *) \[IndentingNewLine] (*\ 
      VERSION\  : \ \(04/10\)/
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine] (****************************************) \
\), "\[IndentingNewLine]", 
    \(URECOVER[
        ELMAX_Integer, {KRR_, KR\[CapitalDelta]_, 
          K\[CapitalDelta]\[CapitalDelta]_}, {RR_, R\[CapitalDelta]_}, 
        U_?MatrixQ] := \[IndentingNewLine]Module[{k, neq, e, ue, Wi, 
          Wj, \[Theta]i, \[Theta]j, Ui, 
          Uj}, \[IndentingNewLine]Options[
            URECOVER] = \ {}; \[IndentingNewLine]NDOF = 3; 
        NNOD = 2; \[IndentingNewLine]UR = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]U\[CapitalDelta] = 
          Table[{0}, {ELMAX}]; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] ELMAX, \(e++\), \[IndentingNewLine]ue = 
            Table[0, {NNOD*NDOF}]; \[IndentingNewLine]For[k = 1, 
            k \[LessEqual] NNOD*NDOF, \(k++\), \[IndentingNewLine]neq = 
              ElementLM[\([e, k]\)]; \[IndentingNewLine]If[
              neq > 0, \[IndentingNewLine]\(ue[\([k]\)] = 
                  U[\([neq, 
                      1]\)];\)\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]{Ui, Wi, \[Theta]i, Uj, Wj, \[Theta]j} = 
            ue; \[IndentingNewLine]UR[\([e]\)] = 
            Chop[TR[{{Ui, Uj, Wi, Wj, \[Theta]i, \[Theta]j}}], 
              CTOL]; \[IndentingNewLine]F\[CapitalDelta]\[CapitalDelta] = 
            Chop[\((K\[CapitalDelta]\[CapitalDelta][\([e]\)]^\(-1\))\), 
              CTOL]; \[IndentingNewLine]U\[CapitalDelta][\([e]\)] = 
            Chop[F\[CapitalDelta]\[CapitalDelta] . \
\((R\[CapitalDelta][\([e]\)] - 
                    TR[KR\[CapitalDelta][\([e]\)]] . UR[\([e]\)])\), 
              CTOL];\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]Return[{UR, 
            U\[CapitalDelta]}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["CODIGO FUENTE: BLOQUES ESPECIALES", "Section",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["\<\
SETCCPROP: 
DETERMINAR PROPIEDADES DEL HORMIGON CONFINADO. \
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        SETCCPROP];\)\[IndentingNewLine] (*\ \(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\ *) \[IndentingNewLine] (*\ 
      PROPIEDADES\ DEL\ HORMIGON\ ARMADO\ CONFINADO\ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        23 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ \
\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\
\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\ *) \), "\
\[IndentingNewLine]", 
    \(SETCCPROP[Geometry_, Reinforcement_, Steel_, Concrete_, 
        Opciones___] := \[IndentingNewLine]Module[{\[Rho]s, \[Epsilon]50h, \
\[Epsilon]50u, k, Zm, \[Epsilon]max, \[Epsilon]U, \[Sigma]U, \[Alpha]U, Ec, 
          Es, bo, bmax, d, do, rs, \[IndentingNewLine]rh, hk, bk, NFS, zs, 
          As, \[Phi]h, sh, fy, \[Epsilon]y, \[Gamma]a, H, K, 
          fc, \[Epsilon]o, \[Gamma]h, \[Psi]U, \[Alpha]D, \[CapitalTheta], \
\[CurlyPhi], \[IndentingNewLine]CONFINATE, 
          ConfinateConcrete}, \[IndentingNewLine]Options[
            SETCCPROP] = \ {HighStrainRate \[Rule] False, 
            Confinate \[Rule] True, 
            Damage \[Rule] \ {1. , 
                0. }}; \[IndentingNewLine]CONFINATE = \(Confinate /. \ \
{Opciones}\)\  /. \ 
            Options[SETCCPROP]; \[IndentingNewLine]HIGHRATE = \
\(HighStrainRate /. \ {Opciones}\)\  /. 
            Options[SETCCPROP]; \[IndentingNewLine]If[
          NOCONCRETE, \[IndentingNewLine]ConfinateConcrete = {0, 0, 0, 0, 0, 
              0, 0, 0}; \[IndentingNewLine]Return[
            ConfinateConcrete];\[IndentingNewLine]]; \[IndentingNewLine]{\
\[Psi]U, \[Alpha]D} = \(Damage /. \ {Opciones}\)\  /. 
            Options[SETCCPROP];; \[IndentingNewLine]{{bo, bmax, d, do}, {rs, 
              ri, rh, hk, bk}} = 
          Geometry; \[IndentingNewLine]{NFS, zs, As, \[Phi]h, sh} = 
          Reinforcement; \[IndentingNewLine]{Es, fy, \[Epsilon]y, \[Gamma]a, 
            H, K} = Steel; \[IndentingNewLine]{fc, \[Epsilon]o, \[Gamma]h} = 
          Concrete; \[IndentingNewLine]\[CurlyPhi] = 
          Sign[\[Epsilon]o]; \[IndentingNewLine]CONFINATE = 
          CONFINATE && \((sh*\[Phi]h)\) > 0; \[IndentingNewLine]If[
          CONFINATE, \[IndentingNewLine]\(\[Rho]s = \((\[Pi]*\[Phi]h^2/
                      4)\)*2*\((hk + bk)\)/\((hk*bk*
                      sh)\);\)\[IndentingNewLine], \
\[IndentingNewLine]\(\[Rho]s = 
              0;\)\[IndentingNewLine]]; \[IndentingNewLine]\[Epsilon]50h = \
\(-0.75\)*\[Rho]s*Sqrt[\((hk/sh)\)];  (*\ 
          ASUME\ \[CurlyPhi] = \(-1\)\ *) \[IndentingNewLine]\[Epsilon]50u = \
\(-\((0.0207 + \[Epsilon]o*fc)\)\)/\((\(-fc\) - 6.8966)\);  (*\ 
          ASUME\ \[CurlyPhi] = \(-1\)\ *) \[IndentingNewLine]If[
          HIGHRATE \[Equal] True, \[IndentingNewLine]k = 
            1.25*\((1 - \[Rho]s*fy/fc)\);  (*\ 
            ASUME\ \[CurlyPhi] = \(-1\)\ *) \[IndentingNewLine]Zm = 
            0.625/\((\[Epsilon]50u + \[Epsilon]50h - 
                  k*\[Epsilon]o)\);, \[IndentingNewLine]k = \((1 - \[Rho]s*
                  fy/fc)\);  (*\ 
            ASUME\ \[CurlyPhi] = \(-1\)\ *) \[IndentingNewLine]Zm = 
            0.5/\((\[Epsilon]50u + \[Epsilon]50h - 
                  k*\[Epsilon]o)\);\[IndentingNewLine]]; \
\[IndentingNewLine]If[
          CONFINATE, \(\[Sigma]U = 0.2*k*fc;\), \(\[Sigma]U = 
              0;\)]; \[IndentingNewLine]Ec = 
          2*fc/\[Epsilon]o; \[IndentingNewLine]\[Epsilon]max = \(-\((0.0046 + 
                0.9*\[Rho]s*fy/300)\)\);  (*\ 
          ASUME\ \[CurlyPhi] = \(-1\)\ *) \[IndentingNewLine]\[Epsilon]U = 
          k*\[Epsilon]o + 
            1/Zm*\((1 - \[Sigma]U/\((k*
                        fc)\))\); \[IndentingNewLine]\[Alpha]U = 
          Abs[\[Epsilon]U - \[Sigma]U/\((\[Psi]U*
                    Ec)\)]; \[IndentingNewLine]\[CapitalTheta] = \((1 - \
\[Psi]U)\)/\((\[Alpha]U - \[Alpha]D)\); \[IndentingNewLine]If[\[CapitalTheta] \
> 0, \[IndentingNewLine]\(\[Alpha]o = \((1 + \[CapitalTheta]*\((\[Alpha]D + 
                          Abs[k*\[Epsilon]o])\) - 
                    Sqrt[\((1 + \((\[Alpha]D + 
                                    Abs[k*\[Epsilon]o])\)*\[CapitalTheta])\)^\
2 - 2*\[CapitalTheta]*\((Abs[k*\[Epsilon]o] + 
                              2*\[Alpha]D*
                                Abs[k*\[Epsilon]o])\)])\)/\((2*\[CapitalTheta]\
)\);\)\[IndentingNewLine], \[IndentingNewLine]\(\[Alpha]o = 
              Abs[k*\[Epsilon]o]/
                2;\)\[IndentingNewLine]]; \
\[IndentingNewLine]ConfinateConcrete = {Ec, k*fc, k*\[Epsilon]o, \[Alpha]o, 
            
            Zm, \[Sigma]U, \[Alpha]U, \[CapitalTheta], \[Alpha]D}; \
\[IndentingNewLine]Return[ConfinateConcrete];\[IndentingNewLine]]\)}], "Input",\

  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["RMACC: * ALGORITMO DE RETORNO PARA HORMIGON", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        RMACC];\)\[IndentingNewLine] (**********************************************) \
\[IndentingNewLine] (*\ 
      ALGORITMO\ DE\ RETORNO\ HORMIGON\ CONFINADO\ \ \ \ *) \
\[IndentingNewLine] (*\ 
      SOFTENING\ /\ 
        HARDENING\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        25 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (**********************************************) \), "\
\[IndentingNewLine]", 
    \(RMACC[FiberState_, 
        ConfinateConcrete_, \[CapitalDelta]\[Epsilon]_] \
:= \[IndentingNewLine]Module[{ACTIVE, \[Epsilon], \[Epsilon]p, \[Alpha], \
\[Sigma], \[Sigma]T, Kp, Et, Gt, FC, F, fy, 
          FT, \[Psi], \[IndentingNewLine]SOFT, LOAD, CRACK, DAMAGE, CRUSH, 
          LIMIT, \[IndentingNewLine]Eo, fc, \[Epsilon]o, \[Alpha]o, 
          Zm, \[Epsilon]U, \ \[Alpha]U, \ \[Sigma]U, \[CapitalTheta], \
\[Alpha]D, \[CapitalDelta]\[Gamma] = 0, \[CapitalDelta]\[Eta] = 0, 
          n = 0, \[IndentingNewLine]MSG = "\<************ERROR DE \
PROGRAMA\>", \[CurlyPhi], \[Nu]CC = 0.16}, \[IndentingNewLine]Options[
            RMACC] = \ {}; \[IndentingNewLine]\[IndentingNewLine]{ACTIVE, \
\[Epsilon], \[Epsilon]p, \[Alpha], \[Sigma], \[Sigma]T, Kp, Et, Gt, FC, fy, 
            FT, \[Psi]} =. ; \[IndentingNewLine]{ACTIVE[n], \[Epsilon][
              n], \[Epsilon]p[n], \[Alpha][n], \[Sigma][n], Et[n], Gt[n]} = 
          FiberState; \[IndentingNewLine]{Eo, fc, \[Epsilon]o, \[Alpha]o, 
            Zm, \[Sigma]U, \ \[Alpha]U, \[CapitalTheta], \[Alpha]D} = 
          ConfinateConcrete; \[IndentingNewLine]If[
          ACTIVE[n] \[Equal] False\  || \[CapitalDelta]\[Epsilon] \[Equal] 
              0. , \[IndentingNewLine]\(Return[
              FiberState];\)\[IndentingNewLine]]; \[IndentingNewLine]\
\[Epsilon][
            n + 1] = \[Epsilon][
              n] + \[CapitalDelta]\[Epsilon]; \[IndentingNewLine] \
(*********************************************) \[IndentingNewLine] (*\ 
          FLAGS\ DE\ CONTROL\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine]CRACK = \((\[Epsilon]p[n] + \[Alpha][
                    n])\) > \[Epsilon]ATOL || \((Abs[\((\[Epsilon][
                          n] + \[Alpha][
                          n])\)] < \[Epsilon]ATOL && \
\[CapitalDelta]\[Epsilon] > 
                  0)\);  (*ASUME\ \[CurlyPhi] = \
\(-1\)*) \[IndentingNewLine]CLOSE = \((\[CapitalDelta]\[Epsilon] + \
\[Epsilon]p[n] + \[Alpha][n])\) < 
            0;  (*ASUME\ \[CurlyPhi] = \(-1\)*) \[IndentingNewLine]DAMAGE = \
\((\((\[Alpha][n] - \[Alpha]D)\) \[GreaterEqual] 0)\) && \((\[CapitalTheta] > 
                0)\); \[IndentingNewLine]LOAD = \[CapitalDelta]\[Epsilon] < 
            0;  (*ASUME\ \[CurlyPhi] = \(-1\)*) \[IndentingNewLine]SOFT = 
          Chop[\((\[Alpha][n] - \[Alpha]o)\), \[Epsilon]ATOL] \[GreaterEqual] 
            0; \[IndentingNewLine]\[IndentingNewLine]If[
          DAMAGE, \[IndentingNewLine]\(\[Psi][n] = 
              1 - \[CapitalTheta]*\((\[Alpha][
                        n] - \[Alpha]D)\);\), \[IndentingNewLine]\(\[Psi][
                n] = 1;\)\[IndentingNewLine]]; \[IndentingNewLine]If[
          CRACK, \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
            ALGORITMO\ DE\ RETORNO\ PARA\ FIBRA\ ABIERTA\ \ \ \ \
*) \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine]\(If[
              CLOSE, \[IndentingNewLine] (*LA\ FISURA\ SE\ CIERRA\
*) \[IndentingNewLine]\[Epsilon][
                  n] = \(-\[Alpha][
                    n]\);  (*ASUME\ \[CurlyPhi] = \
\(-1\)*) \[IndentingNewLine]\[Epsilon]p[
                  n] = \(-\[Alpha][
                    n]\);  (*ASUME\ \[CurlyPhi] = \
\(-1\)*) \[IndentingNewLine]MSG = "\< FIBRA CERRANDOSE..... \>";\
\[IndentingNewLine]\[IndentingNewLine], \[IndentingNewLine] (*LA\ FISURA\ \
QUEDA\ ABIERTA*) \[IndentingNewLine]\[Epsilon]p[n + 1] = \[Epsilon][
                  n + 1]; \[IndentingNewLine]\[Sigma][n + 1] = 
                0; \[IndentingNewLine]\[Psi][n + 1] = \[Psi][
                  n]; \[IndentingNewLine]\[Alpha][n + 1] = \[Alpha][
                  n]; \[IndentingNewLine]Et[n + 1] = 
                0; \[IndentingNewLine]Gt[n + 1] = 
                0; \[IndentingNewLine]ACTIVE[n + 1] = 
                True; \[IndentingNewLine]MSG = "\< FIBRA FISURADA EN CARGA O \
DESCARGA \>"; \[IndentingNewLine]Return[{ACTIVE[n + 1], \[Epsilon][
                    n + 1], \[Epsilon]p[n + 1], \[Alpha][n + 1], \[Sigma][
                    n + 1], Et[n + 1], 
                  Gt[n + 1]}];\[IndentingNewLine]];\)\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
          ALGORITMO\ DE\ RETORNO\ PARA\ FIBRA\ CERRADA\ \ \ \ \
*) \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine]\
\[IndentingNewLine]\[CurlyPhi] = 
          Sign[\[Epsilon]o]; \[IndentingNewLine]\[Sigma]T[n + 1] = \[Psi][n]*
            Eo*\((\[Epsilon][n + 1] - \[Epsilon]p[
                  n])\); \[IndentingNewLine]If[
          SOFT, \[IndentingNewLine] (*\ 
            SOFTENING\ *) \[IndentingNewLine]ZONE = "\<-- SOFTENING.\>"; \
\[IndentingNewLine]If[\[Alpha][n] > \[Alpha]o, \[IndentingNewLine]\(Kp[n] = 
                Eo*Zm*\[Epsilon]o \((2*\((\[Epsilon]o - \[Alpha][
                                  n]*\[CurlyPhi])\)*\[Psi][
                            n] - \[Epsilon]o)\)/\((2*\((\[Alpha]o - \[Alpha][
                              n])\)*\[CurlyPhi]*\((Zm*\[Epsilon]o + 
                            2*\[Psi][n])\))\);\), \[IndentingNewLine]\(Kp[
                  n] = 0;\)]; \[IndentingNewLine]FC[n + 1] = 
            Chop[\((Abs[\[Sigma]T[n + 1]] - Abs[fc] + 
                  Kp[n]*\((\[Alpha][n] - \[Alpha]o)\))\), 
              CTOL]; \[IndentingNewLine]fy[n + 1] = \[Epsilon]o*
              Eo/2*\((1 - 
                  Zm*\((\[Epsilon][
                          n + 1] - \[Epsilon]o)\))\);\[IndentingNewLine], \
\[IndentingNewLine] (*\ 
            HARDENING\ *) \[IndentingNewLine]ZONE = "\<** HARDENING.\>"; \
\[IndentingNewLine]If[\[Alpha][n] > 
              0, \[IndentingNewLine]\(Kp[n] = 
                1/\[Alpha][
                      n]*\[CurlyPhi]*\((Eo*\[Psi][
                        n]*\((\[Epsilon]o*\((1 - \[Psi][n])\) - \[Alpha][
                              n]*\[CurlyPhi] + \[CurlyPhi]*
                            Sqrt[\((\[Epsilon]o*\((1 - \[Psi][n])\))\)^2 + 
                                2*\[Alpha][n]*
                                  Abs[\[Epsilon]o]*\[Psi][
                                    n]])\))\);\)\[IndentingNewLine], \
\[IndentingNewLine]\(Kp[n] = 0;\)]; \[IndentingNewLine]FC[n + 1] = 
            Chop[\((Abs[\[Sigma]T[n + 1]] - Kp[n]*\[Alpha][n])\), 
              CTOL]; \[IndentingNewLine]fy[n + 1] = 
            Eo*\[Epsilon][
                n + 1]*\((1 - \(\[Epsilon][n + 1]/
                      2\)/\[Epsilon]o)\);\[IndentingNewLine]]; \
\[IndentingNewLine]If[
          LOAD, \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
            LOADING\ *) \[IndentingNewLine] (*\ 
            FIBRA\ CERRADA\ A\ COMPRESION\ *) \[IndentingNewLine]F = 
            FC[n + 1]; \[IndentingNewLine]If[
            F > 0, \[IndentingNewLine] (*\ 
              F > 0\ FIBRA\ EN\ CARGA\ ELASTOPLASTICA\ \
*) \[IndentingNewLine]MSG = "\< F>0 FIBRA EN CARGA ELASTOPLASTICA \>"; \
\[IndentingNewLine] (*\ 
              TERMINO\ CORRECTOR\ DE\ TENSIONES\ *) \[IndentingNewLine]\
\[CapitalDelta]\[Eta] = \((\[Sigma]T[n + 1] - fy[n + 1])\)/\((\[Psi][n]*Eo)\)*
                Sign[\[CapitalDelta]\[Epsilon]]; \[IndentingNewLine] (*\ 
              TERMINO\ CORRECTOR\ DE\ DEFORMACIONES\ *) \[IndentingNewLine]If[
              DAMAGE, \[IndentingNewLine] (*\ \[Psi][n] < 
                  1\ \[CapitalTheta] > 
                  0\ *) \[IndentingNewLine]\(\[CapitalDelta]\[Gamma] = \((\
\[CapitalDelta]\[Eta] + \[Psi][n]/\[CapitalTheta] - 
                          Abs[fy[n + 1]]/\((\[Psi][n]*Eo)\))\)/2 - 
                    Sqrt[\((\[CapitalDelta]\[Eta] + \[Psi][
                                    n]/\[CapitalTheta] - 
                                Abs[fy[n + 1]]/\((\[Psi][n]*Eo)\))\)^2 - 
                          4*\[CapitalDelta]\[Eta]*\[Psi][n]/\[CapitalTheta]]/
                      2;\)\[IndentingNewLine], \[IndentingNewLine]\(\
\[CapitalDelta]\[Gamma] = \[CapitalDelta]\[Eta];\)\[IndentingNewLine]];\  (*\ 
              ENDIF\ *) \[IndentingNewLine], \[IndentingNewLine] (*\ 
              F \[LessEqual] 
                0\ FIBRA\ EN\ RECARGA\ ELASTICA\ *) \[IndentingNewLine]MSG = \
"\< F\[LessEqual]0 FIBRA EN RECARGA ELASTICA \>"; \[IndentingNewLine]\
\[CapitalDelta]\[Eta] = 0; \[IndentingNewLine]\[CapitalDelta]\[Gamma] = 
              0;\[IndentingNewLine]];  (*\ 
            ENDIF\ *) \[IndentingNewLine]\[Alpha][
              n + 1] = \[Alpha][
                n] + \[CapitalDelta]\[Gamma]; \[IndentingNewLine]\[Epsilon]p[
              n + 1] = \[Epsilon]p[n] + \[CapitalDelta]\[Gamma]*
                Sign[\[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]\[Psi][
              n + 1] = \[Psi][
                n] - \[CapitalTheta]*\[CapitalDelta]\[Gamma]; \
\[IndentingNewLine]\[Sigma][
              n + 1] = \[Sigma]T[n + 1] - \[CapitalDelta]\[Eta]*\[Psi][n]*Eo*
                Sign[\[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]Et[
              n + 1] = \((\[Sigma][n + 1] - \[Sigma][n])\)/\((\[Epsilon][
                    n + 1] - \[Epsilon][n])\); \[IndentingNewLine] (*\ 
            
            G\ SE\ MANTIENE\ EN\ RELACION\ AL\ Eo\ INICIAL\ CASTIGADO\ POR\ \
DA\[CapitalNTilde]O*) \[IndentingNewLine]Gt[n + 1] = \[Psi][n]*
              Go; \[IndentingNewLine]ACTIVE[n + 1] = 
            True; \[IndentingNewLine] (*\ 
            VERIFICAR\ CRUSHING\ DE\ FIBRA\ *) \[IndentingNewLine]CRUSH = 
            Chop[\((\[Alpha][
                      n + 1] - \[Alpha]U)\), \[Epsilon]ATOL] \[GreaterEqual] 
              0; \[IndentingNewLine]If[
            CRUSH, \[IndentingNewLine] (*\ 
              FIBRA\ EN\ CRUSHING\ EN\ CARGA\ *) \[IndentingNewLine]\[Sigma][
                n + 1] = \[Sigma]U; \[IndentingNewLine]Et[n + 1] = 
              0; \[IndentingNewLine]Gt[n + 1] = 
              0; \[IndentingNewLine]\(MSG = "\<* FIBRA EN CRUSHING \>";\)\
\[IndentingNewLine]];\[IndentingNewLine], \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
            UNLOADING\ *) \[IndentingNewLine]FT[n + 1] = 
            Chop[\(-\[Sigma]T[n + 1]\)*\[CurlyPhi], 
              CTOL]; \[IndentingNewLine]F = FT[n + 1]; \[IndentingNewLine]If[
            F > 0, \[IndentingNewLine] (*\ 
              F > 0\ FIBRA\ CERRADA\ A\ TRACCION\ *) \[IndentingNewLine]MSG = \
"\< F>0 FIBRA CERRADA A TRACCION \>"; \
\[IndentingNewLine]\[CapitalDelta]\[Eta] = \((\[Sigma]T[
                      n + 1])\)/\((\[Psi][n]*Eo)\)*
                Sign[\[CapitalDelta]\[Epsilon]];\[IndentingNewLine], \
\[IndentingNewLine] (*\ 
              F \[LessEqual] 
                0\ FIBRA\ EN\ DESCARGA\ ELASTICA\ *) \[IndentingNewLine]MSG = \
"\< F\[LessEqual]0 FIBRA EN DESCARGA ELASTICA \>"; \[IndentingNewLine]\
\[CapitalDelta]\[Eta] = 
              0;\[IndentingNewLine]]; \[IndentingNewLine]\[CapitalDelta]\
\[Gamma] = \[CapitalDelta]\[Eta]; \[IndentingNewLine]\[Alpha][
              n + 1] = \[Alpha][n]; \[IndentingNewLine]\[Epsilon]p[
              n + 1] = \[Epsilon]p[n] + \[CapitalDelta]\[Gamma]*
                Sign[\[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]\[Psi][
              n + 1] = \[Psi][
                n] - \[CapitalTheta]*\[CapitalDelta]\[Gamma]; \
\[IndentingNewLine]\[Sigma][
              n + 1] = \[Sigma]T[n + 1] - \[CapitalDelta]\[Eta]*\[Psi][n]*Eo*
                Sign[\[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]Et[
              n + 1] = \((\[Sigma][n + 1] - \[Sigma][n])\)/\((\[Epsilon][
                    n + 1] - \[Epsilon][n])\); \[IndentingNewLine] (*\ 
            G\ SE\ MANTIENE\ EN\ RELACION\ AL\ Eo\ INICIAL\ CASTIGADO\ POR\ \
DA\[CapitalNTilde]O*) \[IndentingNewLine]Gt[n + 1] = \[Psi][n]*
              Go; \[IndentingNewLine]ACTIVE[n + 1] = 
            True;\[IndentingNewLine]]; \[IndentingNewLine]Return[{ACTIVE[
              n + 1], \[Epsilon][n + 1], \[Epsilon]p[n + 1], \[Alpha][
              n + 1], \[Sigma][n + 1], Et[n + 1], 
            Gt[n + 1]}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity,
  CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
  CellSize->{1246, Inherited}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RMAST:
ALGORITMO DE RETORNO PARA ACERO\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        RMAST];\)\[IndentingNewLine] (**********************************************) \
\[IndentingNewLine] (*\ 
      ALGORITMO\ DE\ RETORNO\  - \ 
        FIBRAS\ DE\ ACERO\ \ \ \ \ *) \[IndentingNewLine] (*\ 
      VERSION\  : \ 
        09 - 09 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (**********************************************) \), "\
\[IndentingNewLine]", 
    \(RMAST[FiberState_, 
        Steel_, \[CapitalDelta]\[Epsilon]_] \
:= \[IndentingNewLine]Module[{ACTIVE, \[Epsilon], \[Epsilon]p, \[Alpha], 
          q, \[Sigma], F, Et, Gt, \[Sigma]T, 
          FT, \[Xi]T, \[CapitalDelta]\[Gamma] = 0, 
          n = 0, \[IndentingNewLine]\[CurlyPhi], 
          Es, \[Sigma]y, \[Epsilon]y, \[Gamma]a, K, H, MSG, 
          ZONE, \[Nu]ST = 0.23}, \[IndentingNewLine]Options[
            RMAST] = \ {}; \[IndentingNewLine]{ACTIVE, \[Epsilon], \
\[Epsilon]p, \[Alpha], q, \[Sigma], Et, Gt, \[Sigma]T, 
            FT, \[Xi]T, \[CurlyPhi]} =. ; \[IndentingNewLine]{Es, \[Sigma]y, \
\[Epsilon]y, \[Gamma]a, K, H} = 
          Steel; \[IndentingNewLine]{ACTIVE[n], \[Epsilon][n], \[Epsilon]p[
              n], \[Alpha][n], q[n], \[Sigma][n], Et[n], Gt[n]} = 
          FiberState; \[IndentingNewLine]If[
          ACTIVE[n] \[Equal] False || \[CapitalDelta]\[Epsilon] \[Equal] 
              0. , \[IndentingNewLine]\(Return[
              FiberState];\)\[IndentingNewLine]]; \[IndentingNewLine]\
\[Epsilon][
            n + 1] = \[Epsilon][
              n] + \[CapitalDelta]\[Epsilon]; \[IndentingNewLine]\[Sigma]T[
            n + 1] = 
          Es*\((\[Epsilon][n + 1] - \[Epsilon]p[
                  n])\); \[IndentingNewLine]\[Xi]T[
            n + 1] = \[Sigma]T[n + 1] - 
            q[n]; \[IndentingNewLine]\[CurlyPhi] = 
          Sign[\[Xi]T[n + 1]]; \[IndentingNewLine]FT[n + 1] = 
          Chop[Abs[\[Xi]T[n + 1]] - \((\[Sigma]y + K*\[Alpha][n])\), 
            CTOL]; \[IndentingNewLine]If[
          FT[n + 1] \[LessEqual] 
            0, \[IndentingNewLine]ZONE = "\<-- ELASTIC LOADING.\>"; \
\[IndentingNewLine]\[CapitalDelta]\[Gamma] = 
            0;\[IndentingNewLine], \[IndentingNewLine]ZONE = "\<-- \
ELASTOPLASTIC LOADING.\>"; \[IndentingNewLine]\[CapitalDelta]\[Gamma] = 
            FT[n + 1]/\((Es + H + 
                  K)\);\[IndentingNewLine]]; \[IndentingNewLine]\[Sigma][
            n + 1] = \[Sigma]T[n + 1] - \[CapitalDelta]\[Gamma]*
              Es*\[CurlyPhi]; \[IndentingNewLine]\[Epsilon]p[
            n + 1] = \[Epsilon]p[
              n] + \[CapitalDelta]\[Gamma]*\[CurlyPhi]; \[IndentingNewLine]\
\[Alpha][n + 1] = \[Alpha][n] + \[CapitalDelta]\[Gamma]; \[IndentingNewLine]q[
            n + 1] = 
          q[n] + \[CapitalDelta]\[Gamma]*H*\[CurlyPhi]; \[IndentingNewLine]Et[
            n + 1] = \((\[Sigma][n + 1] - \[Sigma][
                  n])\)/\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]Gt[
            n + 1] = 
          Es/\((2*\((1 + \[Nu]ST)\))\); \[IndentingNewLine]ACTIVE[n + 1] = 
          ACTIVE[n]; \[IndentingNewLine]\[IndentingNewLine]Return[{ACTIVE[
              n + 1], \[Epsilon][n + 1], \[Epsilon]p[n + 1], \[Alpha][n + 1], 
            q[n + 1], \[Sigma][n + 1], Et[n + 1], 
            Gt[n + 1]}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["FIBSTIFFST*: CALCULO DEL FACTOR DE EVENTOS EN ACERO. ", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        FIBSTIFFST];\)\[IndentingNewLine] (***************************************) \
\[IndentingNewLine] (*\ 
      FACTOR\ DE\ EVENTOS\  - \ FIBRAS\ DE\ ACERO\ *) \[IndentingNewLine] (*\ 
      ENDURECIMIENTO\ ISOTROPICO\ \ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine] \
(*\ VERSION\  : \ 
        11 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \[IndentingNewLine] (***************************************) \
\[IndentingNewLine] (*RUTINA\ SOLO\ VALIDA\ PARA\ \[CapitalDelta]\[Epsilon] <> 
          0\ \ \ \ \ \ \ \ *) \ \), "\[IndentingNewLine]", 
    \(FIBSTIFFST[FiberState_, 
        Steel_, \[CapitalDelta]\[Epsilon]_] := \[IndentingNewLine]Module[{n, 
          FiberStiffness, Es, \[Sigma]y, \[Epsilon]y, \[Gamma]a, K, 
          H, \[IndentingNewLine]ACTIVE, \[Epsilon], \[Epsilon]p, \[Alpha], 
          q, \[Sigma], Et, Gt, F, 
          FT, \[Xi], \[Xi]T, \[CurlyPhi], \[CurlyPhi]T, \[CapitalDelta]\
\[Epsilon]max, \[CapitalDelta]\[Epsilon]min, ES, 
          GS, \[Nu]ST = 0.23}, \[IndentingNewLine]Options[
            FIBSTIFFST] = \ {}; \[IndentingNewLine]n = 
          0; \[IndentingNewLine]{Es, \[Sigma]y, \[Epsilon]y, \[Gamma]a, K, 
            H} = Steel; \[IndentingNewLine]{ACTIVE, \[Epsilon], \[Epsilon]p, \
\[Alpha], q, \[Sigma], Et, Gt, F, 
            FT, \[Xi], \[Xi]T, \[CurlyPhi], \[CurlyPhi]T} =. ; \
\[IndentingNewLine]{ACTIVE[n], \[Epsilon][n], \[Epsilon]p[n], \[Alpha][n], 
            q[n], \[Sigma][n], Et[n], Gt[n]} = 
          FiberState; \[IndentingNewLine]If[
          ACTIVE[n] \[Equal] 
            False, \[IndentingNewLine]FiberStiffness = {\[CapitalDelta]\
\[Epsilon], 0}; \[IndentingNewLine]Return[
            FiberStiffness];\[IndentingNewLine]]; \[IndentingNewLine]\[Xi][
            n] = \[Sigma][n] - q[n]; \[IndentingNewLine]\[CurlyPhi][n] = 
          Sign[\[Xi][n]]; \[IndentingNewLine]\[Sigma]T[n + 1] = 
          Es*\((\[Epsilon][n] + \[CapitalDelta]\[Epsilon] - \[Epsilon]p[
                  n])\); \[IndentingNewLine]\[Xi]T[
            n + 1] = \[Sigma]T[n + 1] - 
            q[n]; \[IndentingNewLine] (*\(\[CurlyPhi]T[n + 1] = 
              Sign[\[Xi]T[n + 1]];\)*) \[IndentingNewLine]\[CurlyPhi]T[
            n + 1] = 
          Sign[\[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]F[n] = 
          Chop[Abs[\[Xi][n]] - \((\[Sigma]y + K*\[Alpha][n])\), 
            CTOL]; \[IndentingNewLine]FT[n + 1] = 
          Chop[Abs[\[Xi]T[n + 1]] - \((\[Sigma]y + K*\[Alpha][n])\), 
            CTOL]; \[IndentingNewLine]If[
          F[n] < 0, \[IndentingNewLine]ZONE = "\<-- ELASTIC LOADING.\>"; \
\[IndentingNewLine] (*\(\[CapitalDelta]\[Gamma] = 
                0;\)*) \[IndentingNewLine]\[CapitalDelta]\[Epsilon]max = \
\((\((\[Sigma]y + K*\[Alpha][n])\)*\[CurlyPhi]T[n + 1] + q[n] - 
                  Es*\((\[Epsilon][n] - \[Epsilon]p[n])\))\)/
              Es; \[IndentingNewLine]ES = 
            Es;\[IndentingNewLine], \[IndentingNewLine]LOAD = 
            Sign[\[CapitalDelta]\[Epsilon]*\[Xi][n]] > 
              0; \[IndentingNewLine] (*\ \(\[CapitalDelta]\[Gamma] = 
                FT[n + 1]/\((Es + H + K)\);\)\ *) \[IndentingNewLine]If[
            LOAD, \[IndentingNewLine]ZONE = "\<-- ELASTOPLASTIC LOADING.\>"; \
\[IndentingNewLine]\[CapitalDelta]\[Epsilon]max = \[CapitalDelta]\[Epsilon]; \
\[IndentingNewLine]ES = 
              Es*\((H + K)\)/\((Es + H + 
                      K)\);, \[IndentingNewLine]ZONE = "\<-- ELASTIC \
UNLOADING.\>"; \[IndentingNewLine]\[CapitalDelta]\[Epsilon]max = \((\((\
\[Sigma]y + K*\[Alpha][n])\)*\[CurlyPhi]T[n + 1] + q[n] - 
                    Es*\((\[Epsilon][n] - \[Epsilon]p[n])\))\)/
                Es; \[IndentingNewLine]ES = 
              Es;\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine] (*\ 
          FORMULACION\ ELASTICA\ DEL\ MODULO\ DE\ CORTE\ \
*) \[IndentingNewLine]GS = \(Es/2\)/\((1 + \[Nu]ST)\); \[IndentingNewLine]If[
          Sign[\[CapitalDelta]\[Epsilon]max]*
              Sign[\[CapitalDelta]\[Epsilon]] < 
            0, \[IndentingNewLine]\(PRINT[{"\<+++ WARNING: REVERSE SIGN \
(PROGRAM ERROR?). \>"}];\)\[IndentingNewLine]]; \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon]min = \[Epsilon]y/15*
            Sign[\[CapitalDelta]\[Epsilon]max]; \[IndentingNewLine] (*\ 
          VERIFICACION\ DE\ EVENTOS\ NULOS\ *) \[IndentingNewLine]If[
          Abs[\[CapitalDelta]\[Epsilon]max] < 
            Abs[\[CapitalDelta]\[Epsilon]min], \[IndentingNewLine]\(\
\[CapitalDelta]\[Epsilon]max = \[CapitalDelta]\[Epsilon]min*\((1 + 
                    OVSH)\);\)\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]FiberStiffness = {\[CapitalDelta]\[Epsilon]max, ES, 
            GS}; \[IndentingNewLine]\[IndentingNewLine]Return[
          FiberStiffness];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
EVENTBRUTE:  FiberEvent[n]
DETERMINAR FACTOR DE EVENTOS POR FUERZA BRUTA\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        EVENTBRUTE];\)\[IndentingNewLine] (************************************************) \
\[IndentingNewLine] (*\ 
      DETERMINAR\ FACTOR\ DE\ EVENTOS\ POR\ FUERZA\ BRUTA*) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        08 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (************************************************) \), "\
\[IndentingNewLine]", 
    \(EVENTBRUTE[ELMAX_Integer, 
        FiberState_, \[CapitalDelta]S_] := \[IndentingNewLine]Module[{e, s, 
          f, MCODE, SCODE, NGP, NFC, NFS, Geometry, Reinforcement, Steel, 
          ConfinateConcrete, \[IndentingNewLine]\[Zeta], \[Psi], hk, bk, zs, 
          As, zc, \[CapitalDelta]\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \
\[CapitalDelta]\[Gamma]m, \[CapitalDelta]\[Epsilon], \
\[CapitalDelta]\[Epsilon]max, Eo, Go, EVF = \[Infinity], 
          EVFMIN = \[Infinity], EVFIDX = {0, 0, 0, 0}, 
          REVERSE = False}, \[IndentingNewLine]EVFIDX = {0, 0, 0, 
            0}; \[IndentingNewLine]\[IndentingNewLine]REVERSE = 
          False; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{Geometry, Reinforcement, 
              Steel, ConfinateConcrete} = 
            GETPROP[e]; \[IndentingNewLine]{MCODE, SCODE, NGP, NFC, NFS} = 
            ElementTable[\([e]\)]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            DETERMINAR\ COORDENADAS\ DE\ INTEGRACION\ *) \[IndentingNewLine]{\
\[Zeta], \[Psi]} = IntegrationTable[\([e, 2]\)]; \[IndentingNewLine] (*\ 
            LEER\ DATOS\ DE\ LA\ SECCION\ \
*) \[IndentingNewLine]{{\(,\)\(,\)\(,\)}, {\(,\)\(,\)\(,\)\(hk\)\(,\)\(bk\)}} \
= Geometry; \[IndentingNewLine]{\(,\)\(zs\)\(,\)\(As\)\(,\)\(,\)} = 
            Reinforcement; \[IndentingNewLine]zc = 
            hk/2*\[Zeta]; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]m, \
\[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\[Gamma]m} = \
\[CapitalDelta]S[\([e, s]\)]; \[IndentingNewLine]If[
              Not[NOCONCRETE], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] NFC, \(f++\), \[IndentingNewLine] (*\ 
                    
                    DEFORMACION\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \((\[CapitalDelta]\[Epsilon]m - 
                        zc[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m)\); \
\[IndentingNewLine]{\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
                    FIBSTIFFCC[FiberState[\([e, s, 1, f]\)], 
                      ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]If[
                    Abs[\[CapitalDelta]\[Epsilon]] > 
                      0. , \[IndentingNewLine] (*\ 
                      FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ \
*) \[IndentingNewLine]EVF = \[CapitalDelta]\[Epsilon]max/\[CapitalDelta]\
\[Epsilon]; \[IndentingNewLine] (*\(If[
                          EVF < \[Lambda]TOL, \(EVF = 
                              0;\)];\)*) \[IndentingNewLine]If[EVF < EVFMIN, 
                      EVFMIN = EVF; 
                      EVFIDX = {e, s, 1, 
                          f};];\[IndentingNewLine], \[IndentingNewLine]\(EVF \
= \(+\[Infinity]\);\)\[IndentingNewLine]];  (*\ 
                    ENDIF*) \[IndentingNewLine]];\) (*\ 
                END\ FOR*) \[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]If[
              Not[NOSTEEL], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] NFS, \(f++\), \[IndentingNewLine] (*\ 
                    MODULO\ DE\ CARGA\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \[CapitalDelta]\[Epsilon]m - 
                      zs[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m; \
\[IndentingNewLine]{\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
                    FIBSTIFFST[FiberState[\([e, s, 2, f]\)], 
                      Steel, \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]If[
                    Abs[\[CapitalDelta]\[Epsilon]] > 
                      0. , \[IndentingNewLine] (*\ 
                      FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ \
*) \[IndentingNewLine]EVF = \[CapitalDelta]\[Epsilon]max/\[CapitalDelta]\
\[Epsilon]; \[IndentingNewLine]If[EVF < EVFMIN, EVFMIN = EVF; 
                      EVFIDX = {e, s, 2, 
                          f};];\[IndentingNewLine], \[IndentingNewLine]\(EVF \
= \(+\[Infinity]\);\)\[IndentingNewLine]];  (*\ 
                    ENDIF*) \[IndentingNewLine]];\) (*\ 
                END\ FOR*) \[IndentingNewLine]];\[IndentingNewLine]\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]If[
          EVFMIN < 
            0, \(REVERSE = 
              True;\)]; \[IndentingNewLine]Return[{EVFMIN, {EVFIDX, 
              REVERSE}}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["FIBSTIFFCC*:* ESTADO DE FIBRA HORMIGON", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        FIBSTIFFCC];\)\[IndentingNewLine] (*\(**\)\(**\)\(**\)\(**\)\(**\)\(\
**\)\(**\)\(**\)\(**\)\(**\)\(**\)*********************) \[IndentingNewLine] \
(*\ MAXIMO\ DESPLAZAMIENTO\ Y\ RIGIDEZ\ FIBRA\ \ \ \ *) \[IndentingNewLine] \
(*\ SOFTENING\ /\ 
        HARDENING\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        25 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] \
(*\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)\(**\)***********************) \
\), "\[IndentingNewLine]", 
    \(FIBSTIFFCC[FiberState_, 
        ConfinateConcrete_, \[Mu]_, \[CapitalDelta]\[Epsilon]_] \
:= \[IndentingNewLine]Module[{ACTIVE, \[Epsilon], \[Epsilon]p, \[Alpha], \
\[Sigma], \[Sigma]T, Kp, Et, Gt, Eo, fc, \[Epsilon]o, \[Alpha]o, 
          Zm, \[Epsilon]U, \ \[Alpha]U, \ \[Sigma]U, \[CapitalTheta], \
\[Alpha]D, \[IndentingNewLine]FC, fy, F, FT, \[Psi], FiberStiffness, CRACK, 
          CLOSE, SOFT, LOAD, DAMAGE, CRUSH, 
          LIMIT, \[IndentingNewLine]\[CurlyPhi], \
\[CapitalDelta]\[Epsilon]max, ES, GS, 
          n = 0, \[Nu]CC = 0.16}, \[IndentingNewLine]Options[
            FIBSTIFFCC] = \ {}; \[IndentingNewLine]{ACTIVE, \[Epsilon], \
\[Epsilon]p, \[Alpha], \[Sigma], \[Sigma]T, Kp, Et, Gt, FC, fy, 
            FT, \[Psi]} =. ; \[IndentingNewLine]{ACTIVE[n], \[Epsilon][
              n], \[Epsilon]p[n], \[Alpha][n], \[Sigma][n], Et[n], Gt[n]} = 
          FiberState; \[IndentingNewLine]{Eo, fc, \[Epsilon]o, \[Alpha]o, 
            Zm, \[Sigma]U, \ \[Alpha]U, \[CapitalTheta], \[Alpha]D} = 
          ConfinateConcrete; \[IndentingNewLine]Go = \(Eo/
              2\)/\((1 + \[Nu]CC)\); \[IndentingNewLine]If[
          ACTIVE[n] \[Equal] 
            False\ , \[IndentingNewLine]FiberStiffness = {\[CapitalDelta]\
\[Epsilon], 0, 0}; \[IndentingNewLine]Return[
            FiberStiffness];\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]\[Epsilon][
            n + 1] = \((\[Epsilon][
                n] + \[CapitalDelta]\[Epsilon])\); \[IndentingNewLine] \
(*********************************************) \[IndentingNewLine] (*\ 
          
          FLAGS\ DE\ CONTROL\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine]CRACK = \((\[Epsilon]p[n] + \[Alpha][
                    n])\) > \[Epsilon]ATOL || \((Abs[\((\[Epsilon][
                          n] + \[Alpha][
                          n])\)] < \[Epsilon]ATOL && \
\[CapitalDelta]\[Epsilon] > 
                  0)\);  (*ASUME\ \[CurlyPhi] = \
\(-1\)*) \[IndentingNewLine]CLOSE = \((\[CapitalDelta]\[Epsilon] + \
\[Epsilon]p[n] + \[Alpha][n])\) < 
            0;  (*ASUME\ \[CurlyPhi] = \(-1\)*) \[IndentingNewLine]DAMAGE = \
\((\((\[Alpha][n] - \[Alpha]D)\) \[GreaterEqual] 0)\) && \((\[CapitalTheta] > 
                0)\); \[IndentingNewLine]LOAD = \[CapitalDelta]\[Epsilon] < 
            0;  (*ASUME\ \[CurlyPhi] = \(-1\)*) \[IndentingNewLine]SOFT = \
\[Alpha][n] > \[Alpha]o; \[IndentingNewLine]SOFT = 
          Chop[\((\[Alpha][n] - \[Alpha]o)\), \[Epsilon]ATOL] \[GreaterEqual] 
            0; \[IndentingNewLine]CRUSH = 
          Chop[\((\[Alpha][n] - \[Alpha]U)\), \[Epsilon]ATOL] \[GreaterEqual] 
            0; \[IndentingNewLine] \
(*********************************************) \[IndentingNewLine]If[
          DAMAGE, \(\[Psi][n] = 
              1 - \[CapitalTheta]*\((\[Alpha][n] - \[Alpha]D)\);\), \(\[Psi][
                n] = 1;\)]; \[IndentingNewLine]If[
          CRACK, \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
            ALGORITMO\ DE\ EVENTOS\ PARA\ FIBRA\ ABIERTA\ \ \ \ \
*) \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine]If[
            CLOSE, \[IndentingNewLine]MSG = "\< \[CapitalDelta]\[Epsilon]+\
\[Epsilon][n]+\[Alpha][n]<0 FIBRA FISURADA QUE SE CIERRA\>"; \
\[IndentingNewLine]\[CapitalDelta]\[Epsilon]max = \(-\((\[Epsilon]p[
                      n] + \[Alpha][
                      n])\)\); (*ASUME\ \[CurlyPhi] = \(-1\)\
*) \[IndentingNewLine], \[IndentingNewLine]MSG = "\< \
\[CapitalDelta]\[Epsilon]+\[Epsilon][n]+\[Alpha][n]>0 FIBRA FISURADA QUE \
QUEDA ABIERTA\>"; \[IndentingNewLine]\[CapitalDelta]\[Epsilon]max = \
\[CapitalDelta]\[Epsilon];\[IndentingNewLine]]; \[IndentingNewLine]ES = 0; 
          GS = 0;\[IndentingNewLine], \[IndentingNewLine] 
            \
(**********************************************) \[IndentingNewLine] (*\ 
            ALGORITMO\ DE\ EVENTOS\ PARA\ FIBRA\ CERRADA\ \ \ \ \
*) \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
            FUNCIONES\ DE\ FLUENCIA\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine]\[CurlyPhi] = 
            Sign[\[Epsilon]o]; \[IndentingNewLine]\[Sigma]T[
              n + 1] = \[Psi][n]*
              Eo*\((\[Epsilon][n + 1] - \[Epsilon]p[
                    n])\); \[IndentingNewLine]If[
            SOFT, \[IndentingNewLine] (*\ 
              SOFTENING\ *) \[IndentingNewLine]ZONE = "\<-- SOFTENING.\>"; \
\[IndentingNewLine]If[\[Alpha][n] > \[Alpha]o, \[IndentingNewLine]\(Kp[n] = 
                  Eo*Zm*\[Epsilon]o \((2*\((\[Epsilon]o - \[Alpha][
                                    n]*\[CurlyPhi])\)*\[Psi][
                              n] - \[Epsilon]o)\)/\((2*\((\[Alpha]o - \
\[Alpha][n])\)*\[CurlyPhi]*\((Zm*\[Epsilon]o + 
                              2*\[Psi][n])\))\);\), \[IndentingNewLine]\(Kp[
                    n] = 0;\)]; \[IndentingNewLine]FC[n] = 
              Chop[\((Abs[\[Sigma][n]] - Abs[fc] + 
                    Kp[n]*\((\[Alpha][n] - \[Alpha]o)\))\), 
                CTOL]; \[IndentingNewLine]fy[n + 1] = \[Epsilon]o*
                Eo/2*\((1 - 
                    Zm*\((\[Epsilon][
                            n + 1] - \[Epsilon]o)\))\);\[IndentingNewLine], \
\[IndentingNewLine] (*\ 
              HARDENING\ *) \[IndentingNewLine]ZONE = "\<** HARDENING.\>"; \
\[IndentingNewLine]If[\[Alpha][n] > 
                0, \[IndentingNewLine]\(Kp[n] = 
                  1/\[Alpha][
                        n]*\[CurlyPhi]*\((Eo*\[Psi][
                          n]*\((\[Epsilon]o*\((1 - \[Psi][n])\) - \[Alpha][
                                n]*\[CurlyPhi] + \[CurlyPhi]*
                              Sqrt[\((\[Epsilon]o*\((1 - \[Psi][n])\))\)^2 + 
                                  2*\[Alpha][n]*
                                    Abs[\[Epsilon]o]*\[Psi][
                                      n]])\))\);\)\[IndentingNewLine], \
\[IndentingNewLine]\(Kp[n] = 0;\)]; \[IndentingNewLine]FC[n] = 
              Chop[\((Abs[\[Sigma][n]] - Kp[n]*\[Alpha][n])\), 
                CTOL]; \[IndentingNewLine]fy[n + 1] = 
              Eo*\[Epsilon][
                  n + 1]*\((1 - \(\[Epsilon][n + 1]/
                        2\)/\[Epsilon]o)\);\[IndentingNewLine]]; \
\[IndentingNewLine]If[
            LOAD, \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
              LOADING\ *) \[IndentingNewLine]\(If[
                FC[n] < 
                  0, \[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
                  F[n] < 0\ FIBRA\ ELASTICA\ EN\ CARGA\ \
*) \[IndentingNewLine]MSG = "\< F[n]<0 FIBRA ELASTICA EN RECARGA \>"; \
\[IndentingNewLine]ES = \[Psi][n]*Eo; \[IndentingNewLine]GS = \[Psi][n]*
                    Go; \[IndentingNewLine]\[CapitalDelta]\[Epsilon]max = 
                  FC[n]/ES; (*ASUME\ \[CurlyPhi] = \(-1\)\
*) \[IndentingNewLine] (*\(\[CapitalDelta]\[Epsilon]max = \((fy[
                              n + 1] - \[Psi][n]*
                              Eo*\((\[Epsilon][n] - \[Epsilon]p[
                                    n])\))\)/\((\[Psi][n]*
                            Eo)\);\)*) \[IndentingNewLine], \
\[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
                  F[n] = 0\ FIBRA\ ELASTOPLASTICA\ EN\ CARGA\ \
*) \[IndentingNewLine]MSG = "\< F[n]=0 FIBRA ELASTOPLASTICA EN CARGA \>"; \
\[IndentingNewLine]If[
                  SOFT, \[IndentingNewLine]\(If[
                      CRUSH \[Equal] False, \[IndentingNewLine] (*\ 
                        SOFTENING\ *) \[IndentingNewLine]\[Epsilon]U = \(-\
\[Alpha]U\) + \[Sigma]U/\((\[Psi][n]*
                                Eo)\); \[IndentingNewLine]\[CapitalDelta]\
\[Epsilon]max = \((\[Epsilon]U - \[Epsilon][
                              n])\); \[IndentingNewLine]ES = \((\[Sigma]U - 
                              fc)\)/\((\[Epsilon]U - \[Epsilon]o)\); \
\[IndentingNewLine]GS = \[Psi][n]*
                          Go;\[IndentingNewLine], \[IndentingNewLine] (*\ 
                        SOFTENING\ CRUSHING*) \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon]max = \[CapitalDelta]\[Epsilon]; \
\[IndentingNewLine]ES = 0; \[IndentingNewLine]GS = 
                        0;\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine], \[IndentingNewLine] (*\ 
                    HARDENING\ *) \[IndentingNewLine]ES = 
                    0.5*Eo*\((1 - \[Epsilon][
                              n]/\[Epsilon]o)\)*\((1 + \[Mu])\); \
\[IndentingNewLine]GS = \[Psi][n]*Go; \[IndentingNewLine]LIMIT = 
                    0.5*\((1 - \[Epsilon][n]/\[Epsilon]o)\) < 
                      LTOL; \[IndentingNewLine]If[
                    LIMIT, \[IndentingNewLine]\(\[CapitalDelta]\[Epsilon]max \
= \((\[Epsilon]o - \[Epsilon][
                              n])\);\), \[IndentingNewLine]\[CapitalDelta]\
\[Epsilon]max = \((\[Epsilon]o - \[Epsilon][
                              n])\)*\((1 - \[Mu])\)];\[IndentingNewLine]];\
\[IndentingNewLine]];\) (*\ 
              ENDIF\ *) \[IndentingNewLine]\[IndentingNewLine], \
\[IndentingNewLine] \
(**********************************************) \[IndentingNewLine] (*\ 
              UNLOADING\ *) \[IndentingNewLine]MSG = "\< F[n]<0 FIBRA EN \
DESCARGA ELASTICA \>"; \[IndentingNewLine]If[
              CRUSH \[Equal] 
                False, \[IndentingNewLine]\(\[CapitalDelta]\[Epsilon]max = \
\((\(-\[Psi][n]\)*Eo*\((\[Epsilon][n] - \[Epsilon]p[n])\))\)/\((\[Psi][n]*
                        Eo)\);\)\[IndentingNewLine], \[IndentingNewLine]\(\
\[CapitalDelta]\[Epsilon]max = \(-\[Sigma]U\)/\((\[Psi][n]*
                        Eo)\);\)\[IndentingNewLine]]; \[IndentingNewLine]ES = \
\[Psi][n]*Eo; \[IndentingNewLine]GS = \[Psi][n]*
                Go;\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine]If[
          Sign[\[CapitalDelta]\[Epsilon]*\[CapitalDelta]\[Epsilon]max] < 
            0, \[IndentingNewLine]PRINT[{"\< REVERSE SIGN: Sign[\
\[CapitalDelta]\[Epsilon]*\[CapitalDelta]\[Epsilon]max]<0 \[CapitalDelta]\
\[Epsilon]=\>", \[CapitalDelta]\[Epsilon], "\< \
\[CapitalDelta]\[Epsilon]max=\>", \[CapitalDelta]\[Epsilon]max}]; \
\[IndentingNewLine]\[CapitalDelta]\[Epsilon]max = \[CapitalDelta]\[Epsilon];\
\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine]If[
          Abs[\[CapitalDelta]\[Epsilon]] < \[Epsilon]ATOL\ , \
\[IndentingNewLine]\(\[CapitalDelta]\[Epsilon]max = \
\[CapitalDelta]\[Epsilon];\)\[IndentingNewLine]]; \
\[IndentingNewLine]FiberStiffness = {\[CapitalDelta]\[Epsilon]max, ES, 
            GS}; \[IndentingNewLine]Return[
          FiberStiffness];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity,
  CellMargins->{{Inherited, 0}, {Inherited, Inherited}},
  CellSize->{1246, Inherited}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
EVENTBRUTE:  FiberEvent[n]
DETERMINAR FACTOR DE EVENTOS POR FUERZA BRUTA\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        EVENTBRUTE];\)\[IndentingNewLine] (************************************************) \
\[IndentingNewLine] (*\ 
      DETERMINAR\ FACTOR\ DE\ EVENTOS\ POR\ FUERZA\ BRUTA*) \
\[IndentingNewLine] (*\ 
      VERSION\  : \ 
        08 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \ \
\[IndentingNewLine] (************************************************) \), "\
\[IndentingNewLine]", 
    \(EVENTBRUTE[ELMAX_Integer, 
        FiberState_, \[CapitalDelta]S_] := \[IndentingNewLine]Module[{e, s, 
          f, MCODE, SCODE, NGP, NFC, NFS, Geometry, Reinforcement, Steel, 
          ConfinateConcrete, \[IndentingNewLine]\[Zeta], \[Psi], hk, bk, zs, 
          As, zc, \[CapitalDelta]\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \
\[CapitalDelta]\[Gamma]m, \[CapitalDelta]\[Epsilon], \
\[CapitalDelta]\[Epsilon]max, Eo, Go, EVF = \[Infinity], 
          EVFMIN = \[Infinity], EVFIDX = {0, 0, 0, 0}, 
          REVERSE = False}, \[IndentingNewLine]EVFIDX = {0, 0, 0, 
            0}; \[IndentingNewLine]\[IndentingNewLine]REVERSE = 
          False; \[IndentingNewLine]For[e = 1, 
          e \[LessEqual] 
            ELMAX, \(e++\), \[IndentingNewLine]{Geometry, Reinforcement, 
              Steel, ConfinateConcrete} = 
            GETPROP[e]; \[IndentingNewLine]{MCODE, SCODE, NGP, NFC, NFS} = 
            ElementTable[\([e]\)]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            DETERMINAR\ COORDENADAS\ DE\ INTEGRACION\ *) \[IndentingNewLine]{\
\[Zeta], \[Psi]} = IntegrationTable[\([e, 2]\)]; \[IndentingNewLine] (*\ 
            LEER\ DATOS\ DE\ LA\ SECCION\ \
*) \[IndentingNewLine]{{\(,\)\(,\)\(,\)}, {\(,\)\(,\)\(,\)\(hk\)\(,\)\(bk\)}} \
= Geometry; \[IndentingNewLine]{\(,\)\(zs\)\(,\)\(As\)\(,\)\(,\)} = 
            Reinforcement; \[IndentingNewLine]zc = 
            hk/2*\[Zeta]; \[IndentingNewLine]For[s = 1, 
            s \[LessEqual] 
              NGP, \(s++\), \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]m, \
\[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\[Gamma]m} = \
\[CapitalDelta]S[\([e, s]\)]; \[IndentingNewLine]If[
              Not[NOCONCRETE], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] NFC, \(f++\), \[IndentingNewLine] (*\ 
                    
                    DEFORMACION\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \((\[CapitalDelta]\[Epsilon]m - 
                        zc[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m)\); \
\[IndentingNewLine]{\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
                    FIBSTIFFCC[FiberState[\([e, s, 1, f]\)], 
                      ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]If[
                    Abs[\[CapitalDelta]\[Epsilon]] > 
                      0. , \[IndentingNewLine] (*\ 
                      FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ \
*) \[IndentingNewLine]EVF = \[CapitalDelta]\[Epsilon]max/\[CapitalDelta]\
\[Epsilon]; \[IndentingNewLine] (*\(If[
                          EVF < \[Lambda]TOL, \(EVF = 
                              0;\)];\)*) \[IndentingNewLine]If[EVF < EVFMIN, 
                      EVFMIN = EVF; 
                      EVFIDX = {e, s, 1, 
                          f};];\[IndentingNewLine]\[IndentingNewLine], \
\[IndentingNewLine]\(EVF = \(+\[Infinity]\);\)\[IndentingNewLine]];  (*\ 
                    ENDIF*) \[IndentingNewLine]];\) (*\ 
                END\ FOR*) \[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]If[
              Not[NOSTEEL], \[IndentingNewLine]\(For[f = 1, 
                  f \[LessEqual] NFS, \(f++\), \[IndentingNewLine] (*\ 
                    MODULO\ DE\ CARGA\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \[CapitalDelta]\[Epsilon]m - 
                      zs[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m; \
\[IndentingNewLine]{\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
                    FIBSTIFFST[FiberState[\([e, s, 2, f]\)], 
                      Steel, \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]If[
                    Abs[\[CapitalDelta]\[Epsilon]] > 
                      0. , \[IndentingNewLine] (*\ 
                      FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ \
*) \[IndentingNewLine]EVF = \[CapitalDelta]\[Epsilon]max/\[CapitalDelta]\
\[Epsilon]; \[IndentingNewLine]If[EVF < EVFMIN, EVFMIN = EVF; 
                      EVFIDX = {e, s, 2, 
                          f};];\[IndentingNewLine]\[IndentingNewLine], \
\[IndentingNewLine]\(EVF = \(+\[Infinity]\);\)\[IndentingNewLine]];  (*\ 
                    ENDIF*) \[IndentingNewLine]];\) (*\ 
                END\ FOR*) \[IndentingNewLine]];\[IndentingNewLine]\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]If[
          EVFMIN < 
            0, \(REVERSE = 
              True;\)]; \[IndentingNewLine]Return[{EVFMIN, {EVFIDX, 
              REVERSE}}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
EVENTSMART:  FiberEvent[n]
DETERMINAR FACTOR DE EVENTOS INTELIGENTE\
\>", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        EVENTSMART];\)\[IndentingNewLine] (************************************************) \
\[IndentingNewLine] (*\ 
      DETERMINAR\ FACTOR\ DE\ EVENTOS\ INTELIGENTE\ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION\ 23 - 11 - 
        03\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (************************************************) \), "\
\[IndentingNewLine]", 
    \(EVENTSMART[ELMAX_Integer, FiberEvent_, 
        FiberState_, \[CapitalDelta]S_] := \[IndentingNewLine]Module[{e, s, 
          f, i, As, EVFIDX, EVFMIN = \(+\[Infinity]\), Geometry, 
          Reinforcement, Steel, \[IndentingNewLine]ConfinateConcrete, 
          REVERSE = False, MCODE, SCODE, NGP, NFC, 
          NFS, \[Zeta], \[Psi], \[Epsilon]o, \[Epsilon]y, \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\
\[Gamma]m, \[CapitalDelta]\[Epsilon]max, Eo, 
          Go, \[CapitalDelta]\[Epsilon]min}, \
\[IndentingNewLine]{\(EVFIDX\)\(,\)} = 
          FiberEvent; \[IndentingNewLine]{e, s, i, f} = 
          EVFIDX; \[IndentingNewLine] (*\ 
          LEER\ DATOS\ DEL\ INDICE\ DE\ ELEMENTO\ \
e*) \[IndentingNewLine]EVFMIN = \(+\[Infinity]\); \
\[IndentingNewLine]{Geometry, Reinforcement, Steel, ConfinateConcrete} = 
          GETPROP[e]; \[IndentingNewLine]{MCODE, SCODE, NGP, NFC, NFS} = 
          ElementTable[\([e]\)]; \[IndentingNewLine] (*\ 
          DETERMINAR\ COORDENADAS\ DE\ INTEGRACION\ *) \[IndentingNewLine]{\
\[Zeta], \[Psi]} = IntegrationTable[\([e, 2]\)]; \[IndentingNewLine] (*\ 
          LEER\ DATOS\ DE\ LA\ SECCION\ *) \[IndentingNewLine]{{\(,\)\(,\)\(,\
\)}, {\(,\)\(,\)\(,\)\(hk\)\(,\)\(bk\)}} = 
          Geometry; \[IndentingNewLine]{\(,\)\(zs\)\(,\)\(As\)\(,\)\(,\)} = 
          Reinforcement; \[IndentingNewLine]zc = 
          hk/2*\[Zeta]; \[IndentingNewLine]\[Epsilon]o = 
          Part[ConfinateConcrete, 3]; \[IndentingNewLine]\[Epsilon]y = 
          Part[Steel, 3]; \[IndentingNewLine] (*\ 
          LEER\ DATOS\ DEL\ INDICE\ DE\ SECCION\ s*) \[IndentingNewLine]{\
\[CapitalDelta]\[Epsilon]m, \[CapitalDelta]\[CurlyKappa]m, \[CapitalDelta]\
\[Gamma]m} = \[CapitalDelta]S[\([e, s]\)]; \[IndentingNewLine]If[
          i \[Equal] 
            1, \[IndentingNewLine] \
(***************************************) \[IndentingNewLine] (*\ 
            EVENTO\ CRITICO\ EN\ FIBRA\ DE\ HORMIGON\ *) \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \((\[CapitalDelta]\[Epsilon]m - 
                zc[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m)\); \
\[IndentingNewLine] (*\ 
            FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]{\
\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
            FIBSTIFFCC[FiberState[\([e, s, 1, f]\)], 
              ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]];\
\[IndentingNewLine], \[IndentingNewLine] \
(***************************************) \[IndentingNewLine] (*\ 
            EVENTO\ CRITICO\ EN\ FIBRA\ DE\ ACERO\ \ \ \ \
*) \[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \[CapitalDelta]\[Epsilon]m \
- zs[\([f]\)]*\[CapitalDelta]\[CurlyKappa]m; \[IndentingNewLine] (*\ 
            FACTOR\ DE\ EVENTOS\ DE\ LA\ FIBRA\ *) \[IndentingNewLine]{\
\[CapitalDelta]\[Epsilon]max, Eo, Go} = 
            FIBSTIFFST[FiberState[\([e, s, 2, f]\)], 
              Steel, \[CapitalDelta]\[Epsilon]];\[IndentingNewLine]]; \
\[IndentingNewLine]EVFMIN = \[CapitalDelta]\[Epsilon]max/\[CapitalDelta]\
\[Epsilon]; \[IndentingNewLine]If[
          EVF < \[Lambda]TOL, \(EVF = 0;\)]; \[IndentingNewLine]If[
          EVFMIN < 0, 
          REVERSE = 
            True]; \[IndentingNewLine]Return[{EVFMIN, {EVFIDX, 
              REVERSE}}];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["CODIGO FUENTE:  TEST STRUCTURE", "Section",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \( (*\ 
      DIAGRAMAS\ DE\ SOLICITACIONES\ Y\ DEFORMACIONES\ *) \[IndentingNewLine]\
\(Clear[DIAGRAM];\)\), "\[IndentingNewLine]", 
    \(\(DIAGRAM[S_, INDEX_] := 
        Module[{DATA, e, s, k, x, X0, \[Xi], \[Psi], L, M, Q, 
            N}, \[IndentingNewLine]x = 0; 
          k = 0; \[IndentingNewLine]DATA = 
            Table[{0, 0}, {ELMAX*NGP}]; \[IndentingNewLine]For[e = 1, 
            e \[LessEqual] 
              ELMAX, \(e++\), \[IndentingNewLine]{\[Xi], \[Psi]} = 
              IntegrationTable[\([e, 1]\)]; \[IndentingNewLine]NGP = 
              5; \[IndentingNewLine]L = 
              GETL[e, X[n]]; \[IndentingNewLine]{i, j} = 
              ElementCN[\([e]\)]; \[IndentingNewLine]{\(X0\)\(,\)} = \(X[
                  n]\)[\([i]\)]; \[IndentingNewLine]For[s = 1, 
              s \[LessEqual] 
                NGP - 1, \(s++\), \[IndentingNewLine]\(k++\); \
\[IndentingNewLine]x = 
                X0 + L/2*\((\[Xi][\([s]\)] + 1)\); \[IndentingNewLine]M = 
                S[\([e, s, INDEX]\)]; \[IndentingNewLine]DATA[\([k]\)] = {x, 
                  M};\[IndentingNewLine]];\[IndentingNewLine]]; \
\[IndentingNewLine]\(k++\); \[IndentingNewLine]x = 
            X0 + L/2*\((\[Xi][\([NGP]\)] + 1)\); \[IndentingNewLine]M = 
            S[\([ELMAX, NGP, 
                INDEX]\)]; \[IndentingNewLine]DATA[\([k]\)] = {x, 
              M}; \[IndentingNewLine]Return[
            DATA];\[IndentingNewLine]];\)\)}], "Input"],

Cell[CellGroupData[{

Cell["BLOQUE MESH", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        MESH];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      GENERACION\ DE\ MALLA\ DE\ ELEMENTOS\ FINITOS\ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION : \ 
        27 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(\(MESH[] := 
        Module[{}, \[IndentingNewLine] (*\ 
            DIMENSIONES\ DEL\ PROBLEMA\  - \ {ELMAX, 
                NDMAX}\ *) \[IndentingNewLine]{ELMAX, NDMAX} = 
            SETDIM[BCMAXEL, BCMAXND, 
              BeamTable]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            GENERACION\ DE\ ARRAY\ DE\ CONECTIVIDAD\  - \ 
              ElementCN\ *) \[IndentingNewLine]ElementCN = 
            SETCONN[BCMAXEL, 
              ELMAX]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            GENERACION\ DE\ ARRAY\ DE\ COORDENADAS\  - \ 
              NodeX\ *) \[IndentingNewLine]NodeX = 
            SETCORD[BCMAXEL, 
              NDMAX]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            ARRAY\ DE\ DISCRETIZACION\ ELEMENTAL\  - \ 
              ElementTable\ *) \[IndentingNewLine]ElementTable = 
            SETPROP[BCMAXEL, ELMAX, 
              BeamTable]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            TABLAS\ DE\ INTEGRACION\ DEL\ ELEMENTO\ Y\ LA\ SECCION\ \
*) \[IndentingNewLine]IntegrationTable = 
            SETINTBL[ELMAX, 
              ElementTable, \[IndentingNewLine]ElementQuadrature \[Rule] \ 
                EQUAD, ElementType \[Rule] \ 
                ETYPE, \[IndentingNewLine]SectionQuadrature \[Rule] \ SQUAD, 
              SectionType \[Rule] \ 
                STYPE]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            ARRAY\ DE\ CONDICIONES\ DE\ BORDE\  - \ 
              ElementLM\ *) \[IndentingNewLine]NodeID = 
            SETID[BCMAXND, 
              NDMAX]; \[IndentingNewLine]\[IndentingNewLine]ElementLM = 
            SETLM[ELMAX]; \[IndentingNewLine]Return[];\[IndentingNewLine]];\)\
\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE INIT", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[BoxData[{
    \(\(Clear[
        INIT];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      INICIALIZAR\ DESPLAZAMIENTOS\ Y\ DEFORMACIONES\ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION : \ 
        27 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(\(INIT[n_] := 
        Module[{}, \[IndentingNewLine] (*\ 
            DIMENSIONES\ DEL\ PROBLEMA\  - \ {ELMAX, 
                NDMAX}\ *) \[IndentingNewLine]{ELMAX, NDMAX} = 
            SETDIM[BCMAXEL, BCMAXND, BeamTable]; \[IndentingNewLine]NEQ = 
            Max[ElementLM]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ DESPLAZAMIENTOS\ NODALES\  - \ {U, 
                W}\ *) \[IndentingNewLine]Clear[
            U, \[CapitalDelta]U]; \[IndentingNewLine]U[
              n] = \(\[CapitalDelta]U = 
              INITU[NEQ]\); \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ DESPLAZAMIENTOS\ ELEMENTALES\  - \ {ur, 
                u\[CapitalDelta]}\ *) \[IndentingNewLine]Clear[ur, 
            u\[CapitalDelta], \[Delta]ur, \[Delta]u\[CapitalDelta]]; \
\[IndentingNewLine]{ur[n], u\[CapitalDelta][n]} = 
            INITUE[ELMAX]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ COORDENADAS\  - \ X\ *) \[IndentingNewLine]Clear[
            X, \[CapitalDelta]X]; \[IndentingNewLine]X[n] = 
            NodeX; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ VECTOR\ DE\ FUERZAS\ EXTERNAS\ \
*) \[IndentingNewLine]Clear[R, Ro, RN, 
            RE, \[CapitalDelta]R]; \[IndentingNewLine]R[n] = 
            INITR[NEQ]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ DEFORMACIONES\ DE\ LA\ SECCION\ \
*) \[IndentingNewLine]Clear[S, \[CapitalDelta]S]; \[IndentingNewLine]S[n] = 
            INITS[ELMAX, 
              ElementTable]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ ESFUERZOS\ INTERNOS\ DE\ LA\ SECCION\ \
*) \[IndentingNewLine]Clear[Q, \[CapitalDelta]Q]; \[IndentingNewLine]Q[n] = 
            INITS[ELMAX, 
              ElementTable]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            
            INICIALIZACION\ FUERZAS\ INTERNAS\ DEL\ ELEMENTO\ \
*) \[IndentingNewLine]Clear[
            F, \[CapitalDelta]F, \[CapitalPsi], \[Delta]\[CapitalPsi]]; \
\[IndentingNewLine]F[n] = INITR[NEQ]; \[IndentingNewLine]\[CapitalPsi][n] = 
            INITR[NEQ]; \[IndentingNewLine]\[Delta]\[CapitalPsi][n] = 
            INITR[NEQ]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INCREMENTO\ NULO\ DE\ DEFORMACIONES\ *) \[IndentingNewLine] (*\(\
\[CapitalDelta]S = S[n];\)*) \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZAR\ FACTOR\ DE\ EVENTOS\ *) \[IndentingNewLine]Clear[\
\[Lambda]]; \[Lambda][0] = 1. ; \[IndentingNewLine]\[IndentingNewLine] (*\ 
            INICIALIZACION\ ESTADO\ DE\ DEFORMACION\ FIBRAS\ \ \ \ \
*) \[IndentingNewLine]Clear[FiberState]; \[IndentingNewLine]FiberState[n] = 
            INISTAF[ELMAX, 
              ElementTable]; \[IndentingNewLine]\[IndentingNewLine]Return[];\
\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE STIFFNESS", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        STIFFNESS];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      STIFFNESS\ PASO\ n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ *) \[IndentingNewLine] (*\ 
      VERSION : \ 
        01 - 10 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(STIFFNESS[{kerr_, ker\[CapitalDelta]_, 
          ke\[CapitalDelta]\[CapitalDelta]_}, X_] := 
      Module[{Kt, ke}, \[IndentingNewLine] (*\ 
          CONDENSAR\ BLOQUES\ DE\ MATRIZ\ TANGENTE\ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine]ke = 
          KCONDENSE[
            ELMAX, {kerr, ker\[CapitalDelta], 
              ke\[CapitalDelta]\[CapitalDelta]}]; \[IndentingNewLine] (*\ 
          ENSAMBLAR\ MATRIZ\ ELEMENTAL\ EN\ GLOBAL\ *) \[IndentingNewLine]Kt \
= KASSEMBLE[ELMAX, NDMAX, ke, X]; \[IndentingNewLine]Return[
          Kt];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE SETEXTFORCE", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        SETEXTFORCE];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      GENERAR\ VECTOR\ DE\ FUERZAS\ EXTERIORES\ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION : \ 
        02 - 10 - 
          03\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(SETEXTFORCE[{kerr_, ker\[CapitalDelta]_, 
          ke\[CapitalDelta]\[CapitalDelta]_}, {rer_, re\[CapitalDelta]_}, 
        rn_, X_] := \[IndentingNewLine]Module[{Ro, re, RN, 
          RE}, \[IndentingNewLine] (*\ 
          CONDENSAR\ CARGAS\ NODALES\ ELEMENTALES\ CONSISTENTES\ \
*) \[IndentingNewLine]re = 
          RCONDENSE[
            ELMAX, {ker\[CapitalDelta], 
              ke\[CapitalDelta]\[CapitalDelta]}, {rer, 
              re\[CapitalDelta]}]; \[IndentingNewLine] (*\ 
          ENSAMBLAR\ CARGAS\ NODALES\ CONCENTRADAS\ \ \
*) \[IndentingNewLine]RN = RNASSEMBLE[NDMAX, rn]; \[IndentingNewLine] (*\ 
          ENSAMBLAR\ CARGAS\ ELEMENTALES\ NODALES\ CONSISTENTES\ \
*) \[IndentingNewLine]RE = REASSEMBLE[ELMAX, re, X]; \[IndentingNewLine] (*\ 
          ACTUALIZAR\ VECTOR\ DE\ CARGAS\ NODALES\ EXTERIORES\ \
*) \[IndentingNewLine]Ro = RN + RE; \[IndentingNewLine]Return[
          Ro];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE SETINTFORCE", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        SETINTFORCE];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      GENERAR\ VECTOR\ DE\ FUERZAS\ EXTERIORES\ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (*\ 
      VERSION : \ 
        02 - 10 - 
          03\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(SETINTFORCE[{ur_, u\[CapitalDelta]_}, {kerr_, ker\[CapitalDelta]_, 
          ke\[CapitalDelta]\[CapitalDelta]_}, ShapeFunctions_, X_, 
        Q_] := \[IndentingNewLine]Module[{fer, fe\[CapitalDelta], fe, 
          F}, \[IndentingNewLine]\[IndentingNewLine] (*\ 
          CALCULO\ RESULTANTE\ DE\ FUERZAS\ INTERNAS\ \
*) \[IndentingNewLine]{fer, fe\[CapitalDelta]} = 
          SETF[ELMAX, {ur, u\[CapitalDelta]}, ShapeFunctions, X, 
            Q]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
          CONDENSAR\ RESULTANTE\ DE\ FUERZAS\ INTERNOS\ \
*) \[IndentingNewLine]fe = 
          RCONDENSE[
            ELMAX, {ker\[CapitalDelta], 
              ke\[CapitalDelta]\[CapitalDelta]}, {fer, 
              fe\[CapitalDelta]}]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
          ENSAMBLAR\ RESULTANTE\ DE\ FUERZAS\ INTERNOS\ \
*) \[IndentingNewLine]F = REASSEMBLE[ELMAX, fe, X]; \[IndentingNewLine]Return[
          F];\[IndentingNewLine]]\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE CHECKCONV", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        CHECKCONV];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      CONTROL\ DE\ CONVERGENCIA\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine] (*\ 
      VERSION : \ 
        17 - 11 - 
          03\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(\(CHECKCONV[i_, n_, 
          t_] := \[IndentingNewLine]Module[{\[Lambda]CHECK, UCHECK, RCHECK, 
            RLCHECK, WCHECK, BALANCE, FAILURE}, \[IndentingNewLine]BALANCE = 
            False; FAILURE = False; \[IndentingNewLine]If[
            i >= MAXIT, \[IndentingNewLine]FAILURE = 
              True; \[IndentingNewLine]PRINT["\<+++++ MAX NUMBER OF \
ITERATIONS REACHED. i=\>", 
              i];\[IndentingNewLine]]; \[IndentingNewLine]\[IndentingNewLine] \
(*******************************************************) \[IndentingNewLine] \
(*\ VERIFICAR\ CONVERGENCIA\ DE\ EVENTOS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine]\[Lambda]CHECK = \((1 - \[Lambda][
                  n + 1])\); \[IndentingNewLine]PRINT["\<CONTROL DE EVENTOS \
(1-\[Lambda])=\>", \[Lambda]CHECK]; \[IndentingNewLine] \
(*******************************************************) \[IndentingNewLine] \
(*\ VERIFICAR\ CONVERGENCIA\ DE\ FUERZA\ DESBALANCEADA\ \ \ \ \ \ \
*) \[IndentingNewLine]\[CapitalPsi]CHECK = 
            NORM[\[CapitalPsi][n + 1]]/
              NORM[\[CapitalPsi]o[
                  t]]; \[IndentingNewLine]PRINT["\<CONTROL DE FUERZAS \
DESBALANCEADAS GLOBAL \[CapitalPsi]=\>", \[CapitalPsi]CHECK]; \
\[IndentingNewLine]\[CapitalDelta]\[CapitalPsi] = 
            NORM[\[CapitalPsi][n + 1] - \[CapitalPsi][n]]/
              NORM[\[CapitalPsi]o[
                  t]]; \[IndentingNewLine]PRINT["\<CONTROL DE CONVERGENCIA \
\[CapitalDelta]\[CapitalPsi]=\>", \[CapitalDelta]\[CapitalPsi]]; \
\[IndentingNewLine]\[Psi]CHECK = 
            NORM[\[Delta]\[CapitalPsi][
                n + 1]]; \[IndentingNewLine]PRINT["\<CONTROL DE FUERZAS LOCAL \
\[Delta]\[CapitalPsi]=\>", \[Psi]CHECK]; \[IndentingNewLine]\
\[IndentingNewLine] \
(*******************************************************) \[IndentingNewLine] \
(*\ VERIFICAR\ CONVERGENCIA\ DE\ DESPLAZAMIENTOS\ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine]UCHECK = 
            NORM[\((\[Delta]U[n + 1])\)]/
              NORM[U[n + 
                    1]]; \[IndentingNewLine]PRINT["\<CONTROL DE \
DESPLAZAMIENTOS \[Lambda]\[Delta]U/U=\>", 
            UCHECK]; \[IndentingNewLine] \
(*******************************************************) \[IndentingNewLine] \
(*\ VERIFICAR\ CONVERGENCIA\ DE\ TRABAJO\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine]WCHECK = 
            Abs[REAL[
                  TR[\[Delta]U[n + 1]] . \[CapitalPsi][n]]/\((REAL[
                    TR[\[Delta]U[1]] . \[CapitalPsi]o[
                        t]])\)]; \[IndentingNewLine]PRINT["\<CONTROL DE \
TRABAJO/TANGENTE (\[Delta]U*\[CapitalPsi])/(\[Delta]U*\[CapitalPsi]o)=\>", 
            WCHECK]; \[IndentingNewLine]If[\[Lambda][n + 1] \[LessEqual] 
                0.5*10^\(-7\) && EVENTCONTROL, \[IndentingNewLine]FAILURE = 
              True; \[IndentingNewLine]PRINT["\<+++++ LIMIT POINT AT n=\>", 
              n, "\< i=\>", 
              i, "\< (EVENT CONTROL)\>"];\[IndentingNewLine]]; \
\[IndentingNewLine]If[\[CapitalPsi]CHECK \[LessEqual] \[CapitalPsi]TOL, \
\[IndentingNewLine]BALANCE = 
              True; \[IndentingNewLine]PRINT["\<****** TOTAL INCREMENT LOAD \
AT t=\>", t, "\< IN n=\>", 
              n, "\< ITERATIONS. (FORCE CONTROL)\>"];\[IndentingNewLine]]; \
\[IndentingNewLine]If[\[Lambda]CHECK \[LessEqual] \[Lambda]TOL && 
              EVENTCONTROL, \[IndentingNewLine]BALANCE = 
              True; \[IndentingNewLine]PRINT["\<****** TOTAL INCREMENT LOAD \
AT t=\>", t, "\< IN n=\>", 
              n, "\< ITERATIONS. (EVENT CONTROL)\>"];\[IndentingNewLine]]; \
\[IndentingNewLine]If[
            UCHECK < UTOL, \[IndentingNewLine]FAILURE = 
              True; \[IndentingNewLine]PRINT["\<+++++ LIMIT POINT AT n=\>", 
              n, "\< i=\>", 
              i, "\< (DISPLACEMENT CONTROL) \>"];\[IndentingNewLine]]; \
\[IndentingNewLine]If[
            WCHECK < 
              Min[\[CapitalPsi]TOL, 
                UTOL], \[IndentingNewLine] (*\(FAILURE = 
                  True;\)*) \[IndentingNewLine]\(PRINT["\<+++++ LIMIT POINT \
AT n=\>", n, "\< i=\>", i, "\< (WORK CONTROL)\>", WCHECK, "\<<\>", 
                Min[\[CapitalPsi]TOL, 
                  UTOL]];\)\[IndentingNewLine]]; \[IndentingNewLine]If[\
\[CapitalDelta]\[CapitalPsi] < 0.5*10^\(-6\), \[IndentingNewLine]FAILURE = 
              True; \[IndentingNewLine]PRINT["\<+++++ LIMIT POINT AT n=\>", 
              n, "\< i=\>", 
              i, "\< (\[CapitalDelta]\[CapitalPsi] CONTROL)\>", \
\[CapitalDelta]\[CapitalPsi]];\[IndentingNewLine]]; \[IndentingNewLine] (*\ 
            EVITA\ LA\ DETENCION\ DEL\ ALGORITMO\ EN\ UN\ PUNTO\ CONVERGIDO\
*) \[IndentingNewLine]If[BALANCE && FAILURE, 
            FAILURE = False]; \[IndentingNewLine]Return[{BALANCE, 
              FAILURE}];\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE MAIN", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 1]],

Cell[BoxData[{
    \(\(Clear[
        MAIN];\)\[IndentingNewLine] (**************************************************) \
\[IndentingNewLine] (*\ 
      PROGRAMA\ PRINCIPAL\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ *) \[IndentingNewLine] (*\ 
      VERSION : \ 
        27 - 11 - 
          2003\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *) \
\[IndentingNewLine] (**************************************************) \), \
"\[IndentingNewLine]", 
    \(\(MAIN[] := 
        Module[{}, \[IndentingNewLine] (*\ 
            ABRIR\ ARCHIVO\ DE\ SALIDA\ DE\ DATOS\ \
*) \[IndentingNewLine]SETOUTPUT[OutputFilename, 
            FormatType \[Rule] StandardForm]; \[IndentingNewLine] (*\ 
            GENERAR\ MALLA\ DE\ ELEMENTOS\ FINITOS\ \
*) \[IndentingNewLine]MESH[]; \[IndentingNewLine]If[
            RESET, \[IndentingNewLine]i = 0; \[IndentingNewLine]n = 
              0; \[IndentingNewLine]t = 1; \[IndentingNewLine]INIT[
              n];\[IndentingNewLine]]; \[IndentingNewLine]FAILURE = 
            False; \[IndentingNewLine]While[
            t <= MAXLOAD && 
              Not[FAILURE], \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ ITERACION\ DE\ FUERZA\ DEBALANCEADA\ GLOBAL\ \ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine]\
LineFeed; \[IndentingNewLine]PRINT["\<LOAD STEP t+\[CapitalDelta]t:\>", 
              t, "\<  INITIAL GUESS (n)=\>", 
              n]; \[IndentingNewLine]LineFeed; \[IndentingNewLine]\
\[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ ESTABLECER\ FUERZAS\ EXTERIORES\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine] (*\ 
              CARGAS\ UNIFORMES\ DE\ VOLUMEN\ \((PESO\ PROPIO)\)\  - \ 
                fB\ *) \[IndentingNewLine]fB = 
              LOADGV[ELMAX, ElementTable, X[n]]; \[IndentingNewLine] (*\ 
              CARGAS\ UNIFORMES\ DE\ SUPERFICIE\  - \ 
                fS\ *) \[IndentingNewLine]fS = 
              LOADSF[BCMAXEL, ELMAX, 
                BeamColumnLOAD[\([t]\)]]; \[IndentingNewLine] (*\ 
              CARGAS\ NODALES\ CONCENTRADAS\ \ *) \[IndentingNewLine]rn = 
              LOADRC[BCMAXND, NDMAX, 
                JointLOAD[\([t]\)]]; \[IndentingNewLine]\[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ ADIVINAR\ RIGIDEZ\ INICIAL\ DEL\ PRIMER\ PASO\ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ SUPONER\ INCREMENTO\ DE\ DEFORMACI\[CapitalOAcute]N\ DE\ LA\ SECCI\
\[CapitalOAcute]N\ \ \ *) \[IndentingNewLine]If[
              n \[Equal] 
                0, \(\[Delta]SGUESS = 
                  S[0];\), \(\[Delta]SGUESS = \[Delta]S;\)]; \
\[IndentingNewLine]PRINT["\<\[Delta]S[GUESS]=\>", \[Delta]SGUESS[\([EIDX, 
                  SIDX]\)]]; \[IndentingNewLine] (*\ 
              SUPONER\ PARAMETROS\ DE\ ESTADO\ SECCION\ \ \ \ \ \ \ \ \ \ \ \ \
\ \ *) \[IndentingNewLine]{\(,\)\(SectionStiffnessGUESS\)} = 
              SETSTAS[ELMAX, ElementTable, 
                FiberState[
                  n], \[Delta]SGUESS]; \
\[IndentingNewLine]PRINT["\<SectionStiffness[GUESS]=\>", 
              SectionStiffnessGUESS[\([EIDX, 
                  SIDX]\)]]; \[IndentingNewLine] (*\ 
              SUPONER\ FUNCIONES\ DE\ FORMA\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ \ *) \[IndentingNewLine]ShapeFunctionsGUESS = 
              SETSHAPE[ELMAX, SectionStiffnessGUESS, X[n], 
                ShearInterpolation \[Rule] SHEAR]; \[IndentingNewLine] (*\ 
              SUPONER\ CARGAS\ NODALES\ ELEMENTALES\ CONSISTENTES\ \ \ \
*) \[IndentingNewLine]{rerGUESS, re\[CapitalDelta]GUESS} = 
              LOADCENL[ELMAX, \((fS + fB)\), ShapeFunctionsGUESS, 
                X[n]]; \[IndentingNewLine] (*\ 
              SUPONER\ BLOQUES\ DE\ MATRIZ\ TANGENTE\ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ *) \[IndentingNewLine]{kerrGUESS, ker\[CapitalDelta]GUESS, 
                ke\[CapitalDelta]\[CapitalDelta]GUESS} = 
              STIFFBLOCKS[
                ELMAX, {ur[n], 
                  u\[CapitalDelta][
                    n]}, \[IndentingNewLine]SectionStiffnessGUESS, 
                ShapeFunctionsGUESS, X[n], Q[n]]; \[IndentingNewLine] (*\ 
              SUPONER\ MATRIZ\ DE\ RIGIDEZ\ TANGENTE\ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ *) \[IndentingNewLine]KtGUESS = 
              STIFFNESS[{kerrGUESS, ker\[CapitalDelta]GUESS, 
                  ke\[CapitalDelta]\[CapitalDelta]GUESS}, 
                X[n]]; \[IndentingNewLine] (*\ 
              SUPONER\ FUERZAS\ EXTERIORES\ EN\ t\ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ *) \[IndentingNewLine]RoGUESS = 
              SETEXTFORCE[{kerrGUESS, ker\[CapitalDelta]GUESS, 
                  ke\[CapitalDelta]\[CapitalDelta]GUESS}, {rerGUESS, 
                  re\[CapitalDelta]GUESS}, rn, 
                X[n]]; \[IndentingNewLine]PRINT["\<Ro[GUESS]=\>", \(RoGUESS // 
                  TR\) // 
                MatrixForm]; \[IndentingNewLine]\[IndentingNewLine] (*\ 
              SUPONER\ RESULTANTE\ DE\ FUERZAS\ INTERNAS\ \ \ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine]PRINT["\<Q[\>", 
              n, "\<]=\>", \(Q[n]\)[\([EIDX, 
                  SIDX]\)]]; \[IndentingNewLine]FGUESS = 
              SETINTFORCE[{ur[n], u\[CapitalDelta][n]}, {kerrGUESS, 
                  ker\[CapitalDelta]GUESS, 
                  ke\[CapitalDelta]\[CapitalDelta]GUESS}, 
                ShapeFunctionsGUESS, X[n], 
                Q[n]]; \[IndentingNewLine]PRINT["\<F[GUESS]=\>", \(FGUESS // 
                  TR\) // MatrixForm]; \[IndentingNewLine] (*\ 
              CALCULAR\ VECTOR\ DE\ FUERZAS\ DESBALANCEADAS\ AUXILIAR\ \ \ \ \
\ \ \ *) \[IndentingNewLine]\[CapitalPsi]GUESS = \(-\((RoGUESS - 
                    FGUESS)\)\); \
\[IndentingNewLine]PRINT["\<-\[CapitalPsi][GUESS]=\>", \
\(\(-\[CapitalPsi]GUESS\) // TR\) // MatrixForm]; \[IndentingNewLine] (*\ 
              LINEALIZAR\ RESPECTO\ DEL\ PASO\ n\ *) \[IndentingNewLine]\
\[Delta]UAUX = 
              LUSOLVER[
                KtGUESS, \(-\[CapitalPsi]GUESS\)]; \[IndentingNewLine]PRINT["\
\<\[Delta]U\[Degree][AUX]=\>", \(\[Delta]UAUX // TR\) // 
                MatrixForm]; \[IndentingNewLine] (*\ 
              RECUPERAR\ DESPLAZAMIENTOS\ ELEMENTALES\  - \ {ur, 
                  u\[CapitalDelta]}\ *) \[IndentingNewLine]{\[Delta]urAUX, \
\[Delta]u\[CapitalDelta]AUX} = 
              URECOVER[
                ELMAX, {kerrGUESS, ker\[CapitalDelta]GUESS, 
                  ke\[CapitalDelta]\[CapitalDelta]GUESS}, {rerGUESS, 
                  re\[CapitalDelta]GUESS}, \[Delta]UAUX]; \[IndentingNewLine] \
(*****************************************************) \[IndentingNewLine] \
(*\ RECALCULAR\ MATRIZ\ DE\ RIGIDEZ\ CORRECTA\ \ \ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine] \
(*****************************************************) \[IndentingNewLine] \
(*\ RECALCULAR\ INCREMENTO\ DE\ DEFORMACION\ \ \ \ \ \ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine]\[Delta]SAUX = 
              STATESECTION[
                ELMAX, {\[Delta]urAUX, \[Delta]u\[CapitalDelta]AUX}, 
                ShapeFunctionsGUESS]; \
\[IndentingNewLine]PRINT["\<\[Delta]S[AUX]=\>", \[Delta]SAUX[\([EIDX, 
                  SIDX]\)]]; \[IndentingNewLine] (*\ 
              COMPARAR\ GUESS\ CON\ AUX\ \ \ \ \ \
*) \[IndentingNewLine]REVERSE = 
              Sign[\[Delta]SGUESS[\([EIDX, SIDX]\)] . \[Delta]SAUX[\([EIDX, 
                        SIDX]\)]] \[Equal] \(-1\); \[IndentingNewLine]PRINT["\
\< REVERSAL LOAD: \>", REVERSE]; \[IndentingNewLine] (*\ 
              CALCULAR\ MODULO\ CORRECTO\ DE\ FIBRAS\ DEL\ PASO\ n\ \ \ \ \ \
*) \[IndentingNewLine]{FiberEvent[n], SectionStiffness[n]} = 
              SETSTAS[ELMAX, ElementTable, 
                FiberState[
                  n], \[Delta]SAUX]; \[IndentingNewLine]{\(EVFIDX\)\(,\)} = 
              FiberEvent[n]; 
            PRINT["\<CRITICAL FIBER NEXT STEP EVFIDX[\>", n + 1, "\<]=\>", 
              EVFIDX]; \[IndentingNewLine]PRINT["\<SectionStiffness[\>", 
              n, "\<]=\>", \(SectionStiffness[n]\)[\([EIDX, 
                  SIDX]\)]]; \[IndentingNewLine] (*\ 
              RECALCULAR\ FUNCIONES\ DE\ FORMA\ DEL\ PASO\ n\ \ \ \ \ \ \ \ \ \
\ *) \[IndentingNewLine]If[
              SHEAR, \[IndentingNewLine]\(ShapeFunctions[n] = 
                  SETSHAPE[ELMAX, SectionStiffness[n], X[n], 
                    ShearInterpolation \[Rule] 
                      SHEAR];\), \[IndentingNewLine]\(ShapeFunctions[n] = 
                  ShapeFunctionsGUESS;\)\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine] (*\ 
              RECALCULAR\ CARGAS\ CONSISTENTES\ DEL\ PASO\ n\ \ \ \ \ \ \ \ \ \
*) \[IndentingNewLine]{rer, re\[CapitalDelta]} = 
              LOADCENL[ELMAX, \((fS + fB)\), ShapeFunctions[n], 
                X[n]]; \[IndentingNewLine] (*\ 
              RECALCULAR\ BLOQUES\ DE\ MATRIZ\ TANGENTE\ DEL\ PASO\ n\ \
*) \[IndentingNewLine]{kerr, ker\[CapitalDelta], 
                ke\[CapitalDelta]\[CapitalDelta]} = 
              STIFFBLOCKS[ELMAX, {ur[n], u\[CapitalDelta][n]}, 
                SectionStiffness[n], ShapeFunctions[n], X[n], 
                Q[n]]; \[IndentingNewLine]Kt[n] = 
              STIFFNESS[{kerr, ker\[CapitalDelta], 
                  ke\[CapitalDelta]\[CapitalDelta]}, 
                X[n]]; \[IndentingNewLine] (*\ 
              RECALCULAR\ FUERZAS\ EXTERIORES\ EN\ t\ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ *) \[IndentingNewLine]Ro[t] = 
              SETEXTFORCE[{kerr, ker\[CapitalDelta], 
                  ke\[CapitalDelta]\[CapitalDelta]}, {rer, 
                  re\[CapitalDelta]}, rn, 
                X[n]]; \[IndentingNewLine]PRINT["\<Ro[t]=\>", \(Ro[t] // 
                  TR\) // MatrixForm]; \[IndentingNewLine] (*\ 
              RECALCULAR\ FUERZAS\ INTERNAS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ *) \[IndentingNewLine]PRINT["\<Q[\>", 
              n, "\<]=\>", \(Q[n]\)[\([EIDX, SIDX]\)]]; \[IndentingNewLine]F[
                n] = SETINTFORCE[{ur[n], u\[CapitalDelta][n]}, {kerr, 
                  ker\[CapitalDelta], ke\[CapitalDelta]\[CapitalDelta]}, 
                ShapeFunctions[n], X[n], 
                Q[n]]; \[IndentingNewLine]PRINT["\<F[\>", 
              n, "\<]=\>", \(F[n] // TR\) // 
                MatrixForm]; \[IndentingNewLine] (*\ 
              RECALCULAR\ VECTOR\ DE\ FUERZAS\ DESBALANCEADAS\ \ \ \ \ \ \ \ \
*) \[IndentingNewLine]\[CapitalPsi][
                n] = \(-\((Ro[t] - 
                    F[n])\)\); \[IndentingNewLine]\[IndentingNewLine] (*\ 
              ESTABLECER\ FUERZA\ DESBALANCEADA\ DE\ REFERENCIA\ \ \ \ \ \ \
*) \[IndentingNewLine]\[CapitalPsi]o[t] = \[CapitalPsi][
                n]; \[IndentingNewLine]PRINT["\<-\[CapitalPsi]o[\>", 
              t, "\<]=\>", \(\(-\[CapitalPsi]o[t]\) // TR\) // 
                MatrixForm]; \[IndentingNewLine]\[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ VERIFICAR\ CONVERGENCIA\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ *) \[IndentingNewLine]FAILURE = False; \[IndentingNewLine]BALANCE = 
              False; \[IndentingNewLine]While[
              Not[BALANCE] && 
                Not[FAILURE], \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ ITERACION\ DE\ EVENTOS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ *) \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine]\
LineFeed; PRINT["\<t=\>", t, "\<  SOLVING ITERATION (n+1)=\>", 
                n + 1]; \[IndentingNewLine] (*\ 
                
                LINEALIZAR\ RESPECTO\ DEL\ PASO\ n\ *) \[IndentingNewLine]\
\[Delta]U[n + 1] = 
                LUSOLVER[
                  Kt[n], \(-\[CapitalPsi][
                      n]\)]; \[IndentingNewLine]PRINT["\<\[Delta]U\[Degree][\>\
", n + 1, "\<]=\>", \(\[Delta]U[n + 1] // TR\) // 
                  MatrixForm]; \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ RECUPERAR\ DESPLAZAMIENTOS\ ELEMENTALES\  - \ {ur, 
                    u\[CapitalDelta]}\ *) \[IndentingNewLine]{\[Delta]ur, \
\[Delta]u\[CapitalDelta]} = 
                URECOVER[
                  ELMAX, {kerr, ker\[CapitalDelta], 
                    ke\[CapitalDelta]\[CapitalDelta]}, {rer, 
                    re\[CapitalDelta]}, \[Delta]U[
                    n + 1]]; \[IndentingNewLine] (*\ 
                ESTADO\ DE\ LA\ SECCION\ AUXILIAR\  - \ \[Delta]S\ \
*) \[IndentingNewLine]\[IndentingNewLine]\[Delta]S = 
                STATESECTION[ELMAX, {\[Delta]ur, \[Delta]u\[CapitalDelta]}, 
                  ShapeFunctions[
                    n]]; \[IndentingNewLine]PRINT["\<\[Delta]S\[Degree][\>", 
                n + 1, "\<]=\>", \[Delta]S[\([EIDX, 
                    SIDX]\)]]; \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ CALCULO\ DEL\ FACTOR\ DE\ EVENTOS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ *) \[IndentingNewLine]If[
                SMART, \[IndentingNewLine] (*\ 
                  EVENTSMART\ NO\ FUNCIONA\ BIEN\ CON\ OVERSHOOTING\ \ \ \ \ \
\ \ *) \[IndentingNewLine]{EVFMIN, {\(EVFIDX\)\(,\)}} = 
                  EVENTSMART[ELMAX, FiberEvent[n], 
                    FiberState[
                      n], \[Delta]S]; \[IndentingNewLine]PRINT["\<CRITICAL \
FIBER (SMART) EVFIDX[\>", n + 1, "\<]=\>", 
                  EVFIDX, "\<EVENT FACTOR (SMART) EVFMIN=\>", 
                  EVFMIN];\[IndentingNewLine], \[IndentingNewLine]{EVFMIN, \
{\(EVFIDX\)\(,\)}} = 
                  EVENTBRUTE[ELMAX, 
                    FiberState[
                      n], \[Delta]S]; \[IndentingNewLine]PRINT["\<CRITICAL \
FIBER (BRUTE) EVFIDX[\>", n + 1, "\<]=\>", 
                  EVFIDX, "\<EVENT FACTOR (BRUTE) EVFMIN=\>", 
                  EVFMIN];\[IndentingNewLine]]; \[IndentingNewLine]\
\[IndentingNewLine]\[Lambda][n + 1] = 
                Min[EVFMIN, 
                  1]; \[IndentingNewLine]PRINT["\<EVENT FACTOR \[Lambda][\>", 
                n + 1, "\<]=\>", \[Lambda][n + 1]]; \[IndentingNewLine] 
                \
(******************************************************) \[IndentingNewLine] \
(*\ ACTUALIZAR\ INCREMENTO\ EN\ ESTADO\ DE\ DEFORMACION\ \ \ \ \ \
*) \[IndentingNewLine]\[Delta]U[
                  n + 1] = \[Lambda][n + 1]*\[Delta]U[
                    n + 1]; \[IndentingNewLine]PRINT["\<\[Delta]U[\>", 
                n + 1, "\<]=\>", \(\[Delta]U[n + 1] // TR\) // 
                  MatrixForm]; \[IndentingNewLine] (*\ 
                ACTUALIZAR\ COORDENADAS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine]\[Delta]X = 
                SETNODEX[NDMAX, \[Delta]U[n + 1]]; \[IndentingNewLine]X[
                  n + 1] = X[n] + \[Delta]X; \[IndentingNewLine] (*\ 
                ACTUALIZAR\ DESPLAZAMIENTOS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ \ \ *) \[IndentingNewLine]U[n + 1] = 
                U[n] + \[Delta]U[n + 1]; \[IndentingNewLine]PRINT["\<U[\>", 
                n + 1, "\<]=\>", \(U[n + 1] // TR\) // 
                  MatrixForm]; \[IndentingNewLine]{ur[n + 1], 
                  u\[CapitalDelta][n + 1]} = {ur[n], 
                    u\[CapitalDelta][n]} + \[Lambda][
                      n + 1]*{\[Delta]ur, \[Delta]u\[CapitalDelta]}; \
\[IndentingNewLine]\[IndentingNewLine] (*\ 
                ACTUALIZAR\ DEFORMACIONES\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ \ \ \ \ *) \[IndentingNewLine]\[Delta]S = \[Lambda][
                    n + 1]*\[Delta]S; \[IndentingNewLine]S[n + 1] = 
                S[n] + \[Delta]S; \[IndentingNewLine]\[IndentingNewLine] (*\ 
                ACTUALIZACION\ DEL\ ESTADO\ DE\ FIBRAS\ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ *) \[IndentingNewLine]FiberState[n + 1] = 
                SETSTAF[ELMAX, 
                  FiberState[
                    n], \[Delta]S]; \[IndentingNewLine]\[IndentingNewLine] \
(*\ ACTUALIZAR\ ESFUERZOS\ INTERNOS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ *) \[IndentingNewLine]If[
                SMART, \[IndentingNewLine]\[Delta]Q = 
                  SET\[CapitalDelta]Q[ELMAX, 
                    SectionStiffness[n], \[Delta]S]; \[IndentingNewLine]Q[
                    n + 1] = 
                  Q[n] + \[Delta]Q; \[IndentingNewLine]PRINT["\<Q[\>", 
                  n + 1, "\<]=\>", \(Q[n + 1]\)[\([EIDX, 
                      SIDX]\)], "\< (SET\[CapitalDelta]Q)\>"];\
\[IndentingNewLine], \[IndentingNewLine]Q[n + 1] = 
                  SETQ[ELMAX, FiberState[n + 1], 
                    S[n + 1]]; \[IndentingNewLine]PRINT["\<Q[\>", 
                  n + 1, "\<]=\>", \(Q[n + 1]\)[\([EIDX, 
                      SIDX]\)], "\< (SETQ)\>"];\[IndentingNewLine]]; \
\[IndentingNewLine]\[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ ACTUALIZACION\ MATRIZ\ TANGENTE\ DEL\ PASO\ SIGUIENTE\ \ \ \
*) \[IndentingNewLine]{FiberEvent[n + 1], 
                  SectionStiffness[n + 1]} = \[IndentingNewLine]SETSTAS[
                  ELMAX, ElementTable, 
                  FiberState[
                    n + 1], \[Delta]S]; \[IndentingNewLine]{\(EVFIDX\)\(,\)} \
= FiberEvent[n + 1]; 
              PRINT["\<NEXT CRITICAL FIBER EVFIDX[\>", n + 1, "\<]=\>", 
                EVFIDX]; \[IndentingNewLine]PRINT["\<NEXT \
SectionStiffness[\>", 
                n + 1, "\<]=\>", \(SectionStiffness[n + 1]\)[\([EIDX, 
                    SIDX]\)]]; \[IndentingNewLine] (*\ 
                ACTUALIZAR\ FUNCIONES\ DE\ FORMA\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ \ \ *) \[IndentingNewLine]If[
                SHEAR, \[IndentingNewLine]\(ShapeFunctions[n + 1] = 
                    SETSHAPE[ELMAX, SectionStiffness[n + 1], X[n + 1], 
                      ShearInterpolation \[Rule] 
                        SHEAR];\), \[IndentingNewLine]\(ShapeFunctions[
                      n + 1] = 
                    ShapeFunctions[
                      n];\)\[IndentingNewLine]]; \[IndentingNewLine] (*\ 
                ACTUALIZAR\ AMTRIZ\ TANGENTE\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ \ \ \ \ \ \ *) \[IndentingNewLine]{kerr, ker\[CapitalDelta], 
                  ke\[CapitalDelta]\[CapitalDelta]} = 
                STIFFBLOCKS[ELMAX, {ur[n + 1], u\[CapitalDelta][n + 1]}, 
                  SectionStiffness[n + 1], ShapeFunctions[n + 1], X[n + 1], 
                  Q[n + 1]]; \[IndentingNewLine]Kt[n + 1] = 
                STIFFNESS[{kerr, ker\[CapitalDelta], 
                    ke\[CapitalDelta]\[CapitalDelta]}, 
                  X[n + 1]]; \[IndentingNewLine]\[IndentingNewLine] \
(*VERIFICACION\ *) \[IndentingNewLine]PRINT["\<ur[\>", 
                n + 1, "\<]=\>", \(\(ur[n + 1]\)[\([EIDX]\)] // TR\) // 
                  MatrixForm]; \[IndentingNewLine] \
(******************************************************) \[IndentingNewLine] \
(*\ CALCULO\ FUERZAS\ INTERNAS\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \
\ \ \ *) \[IndentingNewLine]F[
                
                n + 1] = \[IndentingNewLine]SETINTFORCE[{ur[n + 1], 
                    u\[CapitalDelta][n + 1]}, {kerr, ker\[CapitalDelta], 
                    ke\[CapitalDelta]\[CapitalDelta]}, ShapeFunctions[n + 1], 
                  X[n + 1], Q[n + 1]]; \[IndentingNewLine]PRINT["\<F[\>", 
                n + 1, "\<]=\>", \(F[n + 1] // TR\) // 
                  MatrixForm]; \[IndentingNewLine] (*\ 
                DETERMINAR\ VECTOR\ DE\ FUERZAS\ DESBALANCEADAS\ GLOBAL\ \
*) \[IndentingNewLine]\[CapitalPsi][
                  n + 1] = \(-\((Ro[t] - 
                      F[n + 1])\)\); \[IndentingNewLine]PRINT["\<-\
\[CapitalPsi][\>", 
                n + 1, "\<]=\>", \(\(-\[CapitalPsi][n + 1]\) // TR\) // 
                  MatrixForm]; \[IndentingNewLine]\[IndentingNewLine] \
(*******************************************************) \[IndentingNewLine] \
(*\ DETERMINAR\ VECTOR\ DE\ FUERZAS\ DESBALANCEADAS\ LOCAL\ \ \ \
*) \[IndentingNewLine]\[Delta]\[CapitalPsi][n + 1] = 
                F[n] - \[Lambda][n + 1]*\[CapitalPsi][n] - 
                  F[n + 1]; \
\[IndentingNewLine]PRINT["\<-\[Delta]\[CapitalPsi][\>", 
                n + 1, "\<]=\>", \(\(-\[Delta]\[CapitalPsi][n + 1]\) // TR\) // 
                  MatrixForm]; \[IndentingNewLine]{BALANCE, FAILURE} = 
                CHECKCONV[i, n, 
                  t]; \[IndentingNewLine]\(\(n++\); \(i++\);\)\
\[IndentingNewLine]];  (*END\ While*) \[IndentingNewLine]\(\(t++\); 
            i = 0;\)\[IndentingNewLine]];  (*END\ \
While*) \[IndentingNewLine]Close[
            OutputFilename]; \
\[IndentingNewLine]Return[];\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CODIGO FUENTE:  TEST FIBER", "Section",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0.500008, 0.500008]],

Cell[CellGroupData[{

Cell["BLOQUE STCYCLIC: TEST STEEL FIBER", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[{
    \(\(Clear[STCYCLIC];\)\), "\[IndentingNewLine]", 
    \(\(STCYCLIC[CICLO_] := 
        Module[{}, 
          Clear[\[Epsilon]T, \[Epsilon]CYC, 
            TestState, \[Epsilon]C, \[Epsilon]c]; \[IndentingNewLine]imax = 
            85; \[IndentingNewLine]\[Epsilon]CYC = 
            CICLO; \[IndentingNewLine]ERROR = False; 
          EVFCRIT = 0; \[IndentingNewLine]jmax = 
            Length[\[Epsilon]CYC]; \[IndentingNewLine]i = 
            0; \[IndentingNewLine]\[Epsilon]c[i] = 
            0; \[IndentingNewLine] (*\ {ACTIVE_, \[Epsilon]_, \[Epsilon]p_, \
\[Alpha]_, q_, \[Sigma]_, Et_}\ *) \[IndentingNewLine]TestState[i] = {True, 
              0, 0, 0, 0, 0, 210000. , 
              210000. /\((2. *\((1.  + 
                        0.23)\))\)}; \[IndentingNewLine]ACTIVE = 
            True; \[IndentingNewLine]j = 
            0; \[IndentingNewLine]\[Epsilon]T[j] = 0; \[IndentingNewLine]For[
            j = 1, j \[LessEqual] 
              jmax, \(j++\), \[IndentingNewLine]\[Epsilon]T[
                j] = \[Epsilon]CYC[\([j]\)]; \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \[Epsilon]T[j] - \[Epsilon]c[
                  i]; \[IndentingNewLine]EVF = 
              EVENTST[TestState[i], 
                Steel, \[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]EVF = 
              Min[1, EVF]; \[IndentingNewLine]\[Epsilon]c[
                i + 1] = \[Epsilon]c[i] + 
                EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                i + 1] = 
              RMAST[TestState[i], 
                Steel, \[CapitalDelta]\[Epsilon]*
                  EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                  i + 1]\)[\([1]\)]; \[IndentingNewLine]\(i++\); \
\[IndentingNewLine] (*\ 
              ES\ MUY\ IMPORTANTE\ DETENER\ CUANDO\ EVF = 
                1*) \[IndentingNewLine]While[
              EVF > 0 && EVF < 1.  && i < imax && 
                ACTIVE, \[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \
\[Epsilon]T[j] - \[Epsilon]c[i]; \[IndentingNewLine]EVF = 
                EVENTST[TestState[i], 
                  Steel, \[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]If[
                EVF > 1, ERROR = True; 
                EVFCRIT = EVF]; \[IndentingNewLine]EVF = 
                Min[1, EVF]; \[IndentingNewLine]\[Epsilon]c[
                  i + 1] = \[Epsilon]c[i] + 
                  EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                  i + 1] = 
                RMAST[TestState[i], 
                  Steel, \[CapitalDelta]\[Epsilon]*
                    EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                    i + 1]\)[\([1]\)]; \[IndentingNewLine]\(\(i++\);\)\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]DATA = 
            Table[{\(TestState[j]\)[\([2]\)], \(TestState[j]\)[\([6]\)]}, {j, 
                0, i}]; \[IndentingNewLine]Return[
            DATA];\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE RSTCYCLIC: TEST STEEL FIBER", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    \(\(Clear[RSTCYCLIC];\)\), "\[IndentingNewLine]", 
    \(\(RSTCYCLIC[CICLO_] := 
        Module[{}, 
          Clear[\[Epsilon]T, \[Epsilon]CYC, 
            TestState, \[Epsilon]C, \[Epsilon]c]; \[IndentingNewLine]imax = 
            85; \[IndentingNewLine]\[Epsilon]CYC = 
            CICLO; \[IndentingNewLine]ERROR = False; 
          EVFCRIT = 0; \[IndentingNewLine]jmax = 
            Length[\[Epsilon]CYC]; \[IndentingNewLine]i = 
            0; \[IndentingNewLine]\[Epsilon]c[i] = 
            0; \[IndentingNewLine] (*\ {ACTIVE_, \[Epsilon]_, \[Epsilon]p_, \
\[Alpha]_, q_, \[Sigma]_, Et_}\ *) \[IndentingNewLine]TestState[i] = {True, 
              0, 0, 0, 0, 0, 210000. , 
              210000. /\((2. *\((1.  + 
                        0.23)\))\)}; \[IndentingNewLine]ACTIVE = 
            True; \[IndentingNewLine]j = 
            0; \[IndentingNewLine]\[Epsilon]T[j] = 0; \[IndentingNewLine]For[
            j = 1, j \[LessEqual] 
              jmax, \(j++\), \[IndentingNewLine]\[Epsilon]T[
                j] = \[Epsilon]CYC[\([j]\)]; \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \[Epsilon]T[j] - \[Epsilon]c[
                  i]; \[IndentingNewLine] (*\(EVF = 
                  EVENTST[TestState[i], 
                    Steel, \[CapitalDelta]\[Epsilon]];\)*) \[IndentingNewLine]\
{\[CapitalDelta]\[Epsilon]L, EL, } = 
              FIBSTIFFST[TestState[i], 
                Steel, \[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]EVF = 
              Min[\[CapitalDelta]\[Epsilon]L/\[CapitalDelta]\[Epsilon], 
                1]; \[IndentingNewLine]\[Epsilon]c[i + 1] = \[Epsilon]c[i] + 
                EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                i + 1] = 
              RMAST[TestState[i], 
                Steel, \[CapitalDelta]\[Epsilon]*
                  EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                  i + 1]\)[\([1]\)]; \[IndentingNewLine]\(i++\); \
\[IndentingNewLine] (*\ 
              ES\ MUY\ IMPORTANTE\ DETENER\ CUANDO\ EVF = 
                1*) \[IndentingNewLine]While[
              EVF > 0 && EVF < 1.  && i < imax && 
                ACTIVE, \[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \
\[Epsilon]T[j] - \[Epsilon]c[i]; \[IndentingNewLine] (*\(EVF = 
                    EVENTST[TestState[i], 
                      Steel, \[CapitalDelta]\[Epsilon]];\)\
*) \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]L, EL, } = 
                FIBSTIFFST[TestState[i], 
                  Steel, \[CapitalDelta]\[Epsilon]]; \[IndentingNewLine]EVF = 
                Min[\[CapitalDelta]\[Epsilon]L/\[CapitalDelta]\[Epsilon], 
                  1]; \[IndentingNewLine]\[Epsilon]c[
                  i + 1] = \[Epsilon]c[i] + 
                  EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                  i + 1] = 
                RMAST[TestState[i], 
                  Steel, \[CapitalDelta]\[Epsilon]*
                    EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                    i + 1]\)[\([1]\)]; \[IndentingNewLine]\(\(i++\);\)\
\[IndentingNewLine]];\[IndentingNewLine]\[IndentingNewLine]]; \
\[IndentingNewLine]DATA = 
            Table[{\(TestState[j]\)[\([2]\)], \(TestState[j]\)[\([6]\)]}, {j, 
                0, i}]; \[IndentingNewLine]\[IndentingNewLine]Return[
            DATA];\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE CCCYCLIC: TEST CONCRETE FIBER", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[1, 0, 0]],

Cell[BoxData[{
    \(\(Clear[CCCYCLIC];\)\), "\[IndentingNewLine]", 
    \(\(CCCYCLIC[CICLO_] := 
        Module[{}, \[IndentingNewLine]Clear[\[Epsilon]T, \[Epsilon]CYC, 
            TestState, \[Epsilon]C, \[Epsilon]c]; \[IndentingNewLine]imax = 
            85; \[IndentingNewLine]\[Epsilon]CYC = 
            CICLO; \[IndentingNewLine]ERROR = False; 
          EVFCRIT = 0; \[IndentingNewLine]jmax = 
            Length[\[Epsilon]CYC]; \[IndentingNewLine]i = 
            0; \[IndentingNewLine]\[Epsilon]c[i] = 
            0; \[IndentingNewLine]TestState[i] = {True, 0, 0, 0, 0, 30000. , 
              30000. /\((2. *\((1.  + 
                        0.16)\))\)}; \[IndentingNewLine]ACTIVE = 
            True; \[IndentingNewLine]j = 
            0; \[IndentingNewLine]\[Epsilon]T[j] = 0; \[IndentingNewLine]For[
            j = 1, j \[LessEqual] 
              jmax, \(j++\), \[IndentingNewLine]\[Epsilon]T[
                j] = \[Epsilon]CYC[\([j]\)]; \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \[Epsilon]T[j] - \[Epsilon]c[
                  i]; \[IndentingNewLine]EVF = 
              EVENTCC[TestState[i], 
                ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]EVF = 
              Min[1, EVF]; \[IndentingNewLine]\[Epsilon]c[
                i + 1] = \[Epsilon]c[i] + 
                EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                i + 1] = 
              RMACCOLD[TestState[i], 
                ConfinateConcrete, \[CapitalDelta]\[Epsilon]*
                  EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                  i + 1]\)[\([1]\)]; \[IndentingNewLine]\(i++\); \
\[IndentingNewLine] (*\ 
              ES\ MUY\ IMPORTANTE\ DETENER\ CUANDO\ EVF = 
                1*) \[IndentingNewLine]While[
              EVF > 0 && EVF < 1.  && i < imax && 
                ACTIVE, \[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \
\[Epsilon]T[j] - \[Epsilon]c[i]; \[IndentingNewLine]EVF = 
                EVENTCC[TestState[i], 
                  ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]If[EVF > 1, ERROR = True; 
                EVFCRIT = EVF]; \[IndentingNewLine]EVF = 
                Min[1, EVF]; \[IndentingNewLine]\[Epsilon]c[
                  i + 1] = \[Epsilon]c[i] + 
                  EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                  i + 1] = 
                RMACCOLD[TestState[i], 
                  ConfinateConcrete, \[CapitalDelta]\[Epsilon]*
                    EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                    i + 1]\)[\([1]\)]; \[IndentingNewLine]\(\(i++\);\)\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]DATA = 
            Table[{\(TestState[j]\)[\([2]\)], \(TestState[j]\)[\([5]\)]}, {j, 
                0, i}]; \[IndentingNewLine]Return[
            DATA];\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]],

Cell[CellGroupData[{

Cell["BLOQUE RCCCYCLIC: TEST CONCRETE FIBER", "Subsection",
  PageWidth->Infinity,
  FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
    \(\(Clear[RCCCYCLIC];\)\), "\[IndentingNewLine]", 
    \(\(RCCCYCLIC[CICLO_] := 
        Module[{}, \[IndentingNewLine]Clear[\[Epsilon]T, \[Epsilon]CYC, 
            TestState, \[Epsilon]C, \[Epsilon]c]; \[IndentingNewLine]imax = 
            60; \[IndentingNewLine]\[Epsilon]CYC = 
            CICLO; \[IndentingNewLine]ERROR = False; 
          EVFCRIT = 0; \[IndentingNewLine]jmax = 
            Length[\[Epsilon]CYC]; \[IndentingNewLine]i = 
            0; \[IndentingNewLine]\[Epsilon]c[i] = 
            0; \[IndentingNewLine]TestState[i] = {True, 0, 0, 0, 0, 30000. , 
              30000. /\((2. *\((1.  + 
                        0.16)\))\)}; \[IndentingNewLine]ACTIVE = 
            True; \[IndentingNewLine]j = 
            0; \[IndentingNewLine]\[Epsilon]T[j] = 0; \[IndentingNewLine]For[
            j = 1, j \[LessEqual] 
              jmax, \(j++\), \[IndentingNewLine]\[Epsilon]T[
                j] = \[Epsilon]CYC[\([j]\)]; \[IndentingNewLine]\
\[CapitalDelta]\[Epsilon] = \[Epsilon]T[j] - \[Epsilon]c[
                  i]; \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]L, EL, } = 
              FIBSTIFFCC[TestState[i], 
                ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]EVF = 
              Min[\[CapitalDelta]\[Epsilon]L/\[CapitalDelta]\[Epsilon], 
                1]; \[IndentingNewLine]\[Epsilon]c[i + 1] = \[Epsilon]c[i] + 
                EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                i + 1] = 
              RMACC[TestState[i], 
                ConfinateConcrete, \[CapitalDelta]\[Epsilon]*
                  EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                  i + 1]\)[\([1]\)]; \[IndentingNewLine]\(i++\); \
\[IndentingNewLine] (*\ 
              ES\ MUY\ IMPORTANTE\ DETENER\ CUANDO\ EVF = 
                1*) \[IndentingNewLine]While[
              EVF < 0.9995 && i < imax && 
                ACTIVE, \[IndentingNewLine]\[CapitalDelta]\[Epsilon] = \
\[Epsilon]T[j] - \[Epsilon]c[
                    i]; \[IndentingNewLine]{\[CapitalDelta]\[Epsilon]L, 
                  EL, } = 
                FIBSTIFFCC[TestState[i], 
                  ConfinateConcrete, \[Mu], \[CapitalDelta]\[Epsilon]]; \
\[IndentingNewLine]EVF = 
                Min[\[CapitalDelta]\[Epsilon]L/\[CapitalDelta]\[Epsilon], 
                  1]; \[IndentingNewLine]\[Epsilon]c[
                  i + 1] = \[Epsilon]c[i] + 
                  EVF*\[CapitalDelta]\[Epsilon]; \[IndentingNewLine]TestState[
                  i + 1] = 
                RMACC[TestState[i], 
                  ConfinateConcrete, \[CapitalDelta]\[Epsilon]*
                    EVF]; \[IndentingNewLine]ACTIVE = \(TestState[
                    i + 1]\)[\([1]\)]; \[IndentingNewLine]\(\(i++\);\)\
\[IndentingNewLine]];\[IndentingNewLine]]; \[IndentingNewLine]DATA = 
            Table[{\(TestState[j]\)[\([2]\)], \(TestState[j]\)[\([5]\)]}, {j, 
                0, i}]; \[IndentingNewLine]\[IndentingNewLine]Return[
            DATA];\[IndentingNewLine]];\)\)}], "Input",
  PageWidth->Infinity]
}, Closed]]
}, Closed]]
}, Closed]]
},
FrontEndVersion->"4.0 for Microsoft Windows",
ScreenRectangle->{{0, 1280}, {0, 926}},
WindowToolbars->"EditBar",
WindowSize->{1251, 647},
WindowMargins->{{0, Automatic}, {Automatic, 9}},
Magnification->1.5
]


(***********************************************************************
Cached data follows.  If you edit this Notebook file directly, not using
Mathematica, you must remove the line containing CacheID at the top of 
the file.  The cache data will then be recreated when you save this file 
from within Mathematica.
***********************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1739, 51, 56, 1, 95, "Subtitle"],

Cell[CellGroupData[{
Cell[1820, 56, 87, 1, 79, "Section"],

Cell[CellGroupData[{
Cell[1932, 61, 53, 1, 68, "Subsection"],
Cell[1988, 64, 478, 9, 198, "Input"],
Cell[2469, 75, 164, 3, 68, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[2670, 83, 113, 4, 68, "Subsection"],
Cell[2786, 89, 2802, 51, 900, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[5625, 145, 86, 4, 68, "Subsection"],
Cell[5714, 151, 583, 12, 224, "Input"],
Cell[6300, 165, 734, 13, 276, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[7071, 183, 107, 4, 68, "Subsection"],
Cell[7181, 189, 2104, 37, 640, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[9322, 231, 118, 4, 68, "Subsection"],

Cell[CellGroupData[{
Cell[9465, 239, 56, 1, 61, "Subsubsection"],
Cell[9524, 242, 1559, 32, 666, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[11120, 279, 51, 1, 61, "Subsubsection"],
Cell[11174, 282, 2277, 41, 900, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[13488, 328, 54, 1, 61, "Subsubsection"],
Cell[13545, 331, 1382, 24, 562, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[14964, 360, 54, 1, 96, "Subsubsection"],
Cell[15021, 363, 1033, 19, 742, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[16091, 387, 69, 1, 96, "Subsubsection"],
Cell[16163, 390, 480, 10, 247, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[16680, 405, 118, 3, 96, "Subsubsection"],
Cell[16801, 410, 602, 11, 517, "Input"],
Cell[17406, 423, 433, 9, 837, "Input"],
Cell[17842, 434, 625, 11, 1099, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[18504, 450, 85, 1, 85, "Subsubsection"],
Cell[18592, 453, 692, 13, 837, "Input"],
Cell[19287, 468, 730, 14, 837, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[20054, 487, 93, 1, 85, "Subsubsection"],
Cell[20150, 490, 113, 2, 94, "Input"],
Cell[20266, 494, 368, 7, 270, "Input"],
Cell[20637, 503, 556, 11, 202, "Input"],
Cell[21196, 516, 264, 5, 157, "Input"],
Cell[21463, 523, 284, 6, 112, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[21784, 534, 92, 1, 96, "Subsubsection"],
Cell[21879, 537, 185, 4, 112, "Input"],
Cell[22067, 543, 660, 14, 607, "Input"],
Cell[22730, 559, 664, 14, 607, "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[23443, 579, 81, 4, 68, "Subsection"],
Cell[23527, 585, 998, 21, 380, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[24562, 611, 92, 4, 68, "Subsection"],
Cell[24657, 617, 1156, 24, 432, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[25850, 646, 76, 1, 68, "Subsection"],
Cell[25929, 649, 1071, 21, 1194, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[27037, 675, 141, 5, 68, "Subsection"],
Cell[27181, 682, 5591, 91, 1394, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[32809, 778, 96, 4, 68, "Subsection"],
Cell[32908, 784, 3301, 59, 1082, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[36246, 848, 142, 5, 68, "Subsection"],
Cell[36391, 855, 3239, 57, 1056, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[39667, 917, 126, 5, 68, "Subsection"],
Cell[39796, 924, 842, 18, 354, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[40675, 947, 134, 5, 68, "Subsection"],
Cell[40812, 954, 816, 17, 328, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[41665, 976, 137, 5, 68, "Subsection"],
Cell[41805, 983, 1371, 28, 510, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[43213, 1016, 140, 5, 68, "Subsection"],
Cell[43356, 1023, 1358, 28, 484, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[44751, 1056, 108, 4, 68, "Subsection"],
Cell[44862, 1062, 733, 14, 276, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[45632, 1081, 151, 5, 68, "Subsection"],
Cell[45786, 1088, 3541, 60, 1134, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[49364, 1153, 101, 4, 68, "Subsection"],
Cell[49468, 1159, 1760, 33, 588, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[51265, 1197, 89, 4, 68, "Subsection"],
Cell[51357, 1203, 1597, 37, 562, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[52991, 1245, 98, 4, 68, "Subsection"],
Cell[53092, 1251, 2203, 40, 952, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[55332, 1296, 112, 4, 68, "Subsection"],
Cell[55447, 1302, 1304, 25, 432, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[56788, 1332, 82, 4, 68, "Subsection"],
Cell[56873, 1338, 1272, 26, 458, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[58182, 1369, 82, 4, 68, "Subsection"],
Cell[58267, 1375, 135, 3, 42, "Input"],
Cell[58405, 1380, 1984, 36, 718, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[60426, 1421, 140, 5, 68, "Subsection"],
Cell[60569, 1428, 2666, 48, 822, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[63272, 1481, 107, 4, 68, "Subsection"],
Cell[63382, 1487, 2126, 40, 926, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[65545, 1532, 148, 5, 68, "Subsection"],
Cell[65696, 1539, 1561, 31, 536, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[67294, 1575, 140, 2, 42, "Subsection"],
Cell[67437, 1579, 1446, 28, 666, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[68920, 1612, 93, 4, 68, "Subsection"],
Cell[69016, 1618, 1355, 26, 1720, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[70408, 1649, 89, 4, 68, "Subsection"],
Cell[70500, 1655, 1511, 34, 562, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[72048, 1694, 104, 4, 68, "Subsection"],
Cell[72155, 1700, 2857, 50, 1160, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[75049, 1755, 144, 2, 42, "Subsection"],
Cell[75196, 1759, 2865, 50, 1030, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[78098, 1814, 121, 2, 42, "Subsection"],
Cell[78222, 1818, 1243, 23, 484, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[79502, 1846, 80, 1, 42, "Subsection"],
Cell[79585, 1849, 2498, 52, 926, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[82120, 1906, 84, 1, 42, "Subsection"],
Cell[82207, 1909, 1859, 37, 692, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[84103, 1951, 112, 2, 42, "Subsection"],
Cell[84218, 1955, 2203, 43, 614, "Input"],
Cell[86424, 2000, 2583, 46, 900, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[89044, 2051, 115, 4, 68, "Subsection"],
Cell[89162, 2057, 1585, 30, 614, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[90784, 2092, 162, 5, 68, "Subsection"],
Cell[90949, 2099, 3321, 60, 900, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[94307, 2164, 182, 5, 68, "Subsection"],
Cell[94492, 2171, 6620, 112, 2096, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[101149, 2288, 95, 4, 68, "Subsection"],
Cell[101247, 2294, 1981, 35, 666, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[103265, 2334, 147, 5, 94, "Subsection"],
Cell[103415, 2341, 4329, 78, 1446, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[107781, 2424, 162, 5, 68, "Subsection"],
Cell[107946, 2431, 2216, 42, 640, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[110199, 2478, 147, 5, 68, "Subsection"],
Cell[110349, 2485, 4359, 76, 1602, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[114745, 2566, 145, 5, 68, "Subsection"],
Cell[114893, 2573, 4423, 76, 1368, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[119353, 2654, 103, 4, 68, "Subsection"],
Cell[119459, 2660, 1678, 30, 640, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[121174, 2695, 129, 5, 68, "Subsection"],
Cell[121306, 2702, 12688, 216, 1888, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[134031, 2923, 153, 3, 68, "Subsection"],
Cell[134187, 2928, 2077, 37, 718, "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[136313, 2971, 107, 2, 47, "Section"],

Cell[CellGroupData[{
Cell[136445, 2977, 158, 5, 94, "Subsection"],
Cell[136606, 2984, 4889, 87, 1316, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[141532, 3076, 134, 2, 42, "Subsection"],
Cell[141669, 3080, 12751, 219, 3812, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[154457, 3304, 123, 5, 68, "Subsection"],
Cell[154583, 3311, 3323, 62, 978, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[157943, 3378, 130, 2, 42, "Subsection"],
Cell[158076, 3382, 4825, 81, 1550, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[162938, 3468, 157, 5, 68, "Subsection"],
Cell[163098, 3475, 4874, 86, 1550, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[168009, 3566, 129, 2, 42, "Subsection"],
Cell[168141, 3570, 11502, 200, 3500, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[179680, 3775, 157, 5, 68, "Subsection"],
Cell[179840, 3782, 4912, 86, 1602, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[184789, 3873, 166, 5, 94, "Subsection"],
Cell[184958, 3880, 3765, 66, 1134, "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[188772, 3952, 118, 2, 47, "Section"],
Cell[188893, 3956, 1468, 27, 640, "Input"],

Cell[CellGroupData[{
Cell[190386, 3987, 102, 2, 68, "Subsection"],
Cell[190491, 3991, 2173, 43, 770, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[192701, 4039, 102, 2, 42, "Subsection"],
Cell[192806, 4043, 3302, 58, 1368, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[196145, 4106, 93, 2, 42, "Subsection"],
Cell[196241, 4110, 1085, 22, 328, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[197363, 4137, 95, 2, 42, "Subsection"],
Cell[197461, 4141, 1440, 28, 687, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[198938, 4174, 95, 2, 42, "Subsection"],
Cell[199036, 4178, 1462, 28, 726, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[200535, 4211, 93, 2, 42, "Subsection"],
Cell[200631, 4215, 5298, 94, 1628, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[205966, 4314, 88, 2, 42, "Subsection"],
Cell[206057, 4318, 20923, 363, 5346, "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{
Cell[227029, 4687, 114, 2, 79, "Section"],

Cell[CellGroupData[{
Cell[227168, 4693, 110, 2, 68, "Subsection"],
Cell[227281, 4697, 2977, 55, 978, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[230295, 4757, 111, 2, 68, "Subsection"],
Cell[230409, 4761, 3379, 61, 1056, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[233825, 4827, 113, 2, 68, "Subsection"],
Cell[233941, 4831, 2922, 53, 978, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[236900, 4889, 114, 2, 68, "Subsection"],
Cell[237017, 4893, 3076, 55, 978, "Input"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)




(***********************************************************************
End of Mathematica Notebook file.
***********************************************************************)

